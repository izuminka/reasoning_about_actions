,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898
id,b82f88b0-6d39-4bb6-99fa-f3dca255b5db,ecca7ffe-94fd-4d6c-a663-73fc83bf5601,05a3a001-684e-41f8-83a8-851cbe9ee086,1240b49f-c3f0-4a9f-985e-42faf85c99e6,23e26b51-7ac7-4843-bdcb-69a961759243,e4509f60-1f10-4720-8b08-61cdfa6289c9,14164c9b-2287-4b99-a13b-f9d4728a9ed1,d8b7533c-917f-4be8-8906-354ff7bdfc6a,85cbaa95-0096-490f-9e8c-3ae48b19e01f,a5c5669c-45a1-4f1b-8561-7664eb1cf837,9bff0501-490a-479e-9329-0327577b90fd,da19bba0-da8c-43b2-bb20-c60fb835ac11,be636e21-8f0f-4dd5-8b81-9d0776c8e2bd,cdca1b7a-f19e-4b9d-afbe-d69163762202,2f9f5a37-7eb8-45cb-a561-86c2700db97d,735f6baf-8f17-4760-8a6f-e33b2cbb43d6,cbfc3606-f781-44c5-a074-b8c3674d0402,2b422dd8-ba5c-441f-bd41-29e425776398,c58f9289-2b92-4920-a09b-b830d21fa040,dcf36658-5f43-4193-9aa5-733274ec3fa2,f0a703ac-73aa-4f59-b54b-9f0ab02e84c0,9504f223-fd66-4584-afcd-4eeb9b53cebd,aacf68be-1844-4e4a-8cc7-45b4111e6c14,51dfd9f4-813b-4da3-aca9-9c21201d80d3,9a1270fe-ce5b-462f-9219-4df2dfe2a200,b3462e98-334c-4c9a-832b-bdf1ce78bf3a,afe2e61a-513a-44c3-82be-e250d2f74299,68c00a7f-cbef-4096-9f89-3680d6451b5e,f2833e50-d995-4773-b904-d60e34838eb9,e5f584b7-66f7-49f0-b8af-8f20aea84fb9,d1e413a8-c46f-4204-bad7-e52a991ddfa7,0be19150-5619-4a03-979e-47e43041ecf2,56508dd6-41ba-4ec3-a781-3c37a31d2022,d4281f65-575f-432d-9cda-825931245cc7,f42a8efe-64f3-4a41-bda8-bf5a707622e9,bd22897e-81c4-45a0-af99-9d7870ec4cfb,6e05573d-224d-4354-aef5-ff22b9aaa284,b29fe179-06b8-44e8-a46d-9febd0d0c9fe,3cf2c868-a042-4f6b-b348-78a0ab677a39,3adb5166-8fa7-4ec1-a7a3-ab70ce4138d2,e6d91ba7-7636-42ab-b1d4-2a45f8472b76,07bd8133-0664-40af-a5e7-028b0eae032a,a9d86648-2e1e-4367-ab7a-9ec8106ebbe6,1f15394f-3935-4816-bc34-03f3abaf2d59,d27a7b05-d224-4461-9265-fb4a0d233053,0b32da10-35f8-4d34-a90b-4acec0b7642b,bb3ee454-8e90-48b6-8135-223e4501296e,143e7ffb-f145-4212-85c7-cd40daa8cd8b,267a2544-4783-4f5f-b221-205489ee6da0,639c6a25-f12a-4594-9f45-0c95b771de29,d7d344a8-ab6c-4a31-8a02-de75bf5be5c9,4ba1d64d-a22c-4355-8630-b2d4698e8557,0e631697-757a-4d85-acb3-49dfc9d5f6e3,f4f45e9e-00f7-4055-bee1-99927855e21b,d1a765a9-3512-4cc7-9097-f12361a8eb0a,caa2c759-1de9-4ec2-b9ff-d7a7572a919f,17012d90-a216-469a-abad-c66f10d1650d,e8e6e61a-7c0c-44c9-a844-7c70bf8e1b26,0b816c6d-5a94-4a8e-86a4-f719c9532507,ad21a145-9d3f-49ea-98db-59138f616a4f,05b60084-bbfd-40c6-bdb0-df488699cf50,0967bc51-f33f-4550-ad10-d7c011e4cf5f,a52134c8-2fb2-471f-ad8b-07bc71d67efa,ec44b3d2-6113-4a75-80fb-a521f19f3ea3,647fdc7e-cfb0-4b66-beec-1b8912ee8674,d8281094-9fe3-448a-9bea-fb8e88d56043,05dd9a8e-99ae-4d6c-9e33-b2a59d770339,ccb049f9-dc92-45ae-84c7-50b326b35549,5c401092-c06e-4c40-87e1-dd9ba1a2b965,bffe0f11-5254-4c60-9bbc-6fe83a3cf9b5,3470dc71-daeb-454b-91b6-4cc4a167257d,2d7d03c1-b298-4192-a9e1-3db3ccf12770,7cad59ef-6412-4df8-aa4c-dcb36d2a0dcf,f122a757-42c8-46c9-8244-25184765c20a,d5e01550-466f-4a2f-aebe-179c122617bc,c73d82fd-fef7-4615-9ea1-40fc335cf3bf,bbb2a0ee-0704-4339-bee0-452c0b338978,562d779c-e813-47ef-ba80-9b0ec7cb2f53,394dd82a-c3c7-4cb9-8b6f-c409cb1e263c,971a3ea7-5125-48af-82e5-8fde17fbe36f,ff63d2f3-c5b5-4fa0-96e9-c0cbedea92f4,f1682140-bab0-45cf-b884-0120a27e27d1,c92ade4b-ab1e-4f4e-8eb0-527dbfe75621,df6648bc-e4a1-445c-b4a0-79ddeea0d229,491b8e33-f8d6-43a8-acd7-71a02965a52f,1b718a3a-10c7-4add-9190-5a9402056eaa,97ef9743-bca3-4de1-b015-e10c5cfe4326,2cc396aa-578f-435e-9d37-09b84f9cc751,fbdd8976-40a2-4305-be08-567446cbd09f,763aee97-8bac-4230-b204-295fdf0f26fc,5840b30a-e063-4d57-a4d3-e6c40e7a3f54,ebf6485d-98b8-4056-bdee-42541f42fc6b,f20da2a8-caa5-403a-9b35-5ec24c5e68e5,eba792f8-cea0-4363-80b9-83ca8ec16beb,67a383bf-4846-4c76-b391-97879c4e542b,291cd926-bc18-4470-aa6d-4c1cd8a25967,cb29d988-220e-42ab-8fd0-3662618366ce,ac5aff59-4166-4fcc-8850-eee9c5717e46,de3974d3-8ddc-4c92-aea0-e32c81fd5be8,35290185-8213-468d-ba54-090f32b41f53,bc3f777e-086a-4c75-a330-fa1b1274b2eb,3ef4e85e-d535-426d-8c6a-31253f00ba61,ab6c0158-ce80-4dad-af93-16da4f4c9fa1,9ed0f5f6-a482-47c3-9712-d9386d3f0095,ef1bf1a2-d164-487c-9f3b-17452aef6f04,1eed20f3-6a15-4a42-a640-7332cb98bb39,d9a087db-2b0d-4ab2-acd1-9800ad589781,0cfd0144-8926-4a0f-b010-c4b1095ea8b7,7304ecc4-2db3-413d-a6ba-e8aae19c6231,1201345d-ec76-4ec4-bd14-63f0d4c4019b,6e0712b8-4774-42c4-ba5d-f31a466396dd,f485bd88-569a-472f-9144-d8e584fe17cb,fb4c6dfa-618d-4cb7-a6c3-a8db13f2f1d3,2ab40ec4-a1d2-4d84-8944-ccdff3f52999,0bf3e94f-9911-46e9-a044-f084d2acf9c4,6ccb1449-aa13-4e1a-905d-79436600683b,54c64a76-07b1-480d-b8a0-87ebea851fde,16f3e1f2-6fe8-4453-8342-3fb445c886b7,309437d4-9e08-4651-9f03-3a40469bfae6,40c213cd-53e2-4791-900a-a41e039d3eb5,95621d3b-ca44-4a1f-9cc4-9d7ce676295c,d15f8764-6cd0-499c-87e9-de3abe719ec4,6748e800-47ee-47e5-bac9-118906b69d31,a6ee0929-5801-43ad-9518-760d2650637d,6524bc5e-c593-423d-8a4c-20f0ed26a0a0,b74e780e-67c4-4693-8d38-da45deef2403,03a1fde0-ba8a-4fb3-8928-4cd26b3dbcdc,74ccfd5e-4390-4ba2-a12c-1fae8d6a1698,2e58548b-24ab-490c-a7e0-01c656c07b57,7fd5eef2-0b62-4cb2-9847-0cf8681dcd0b,e9276093-a18f-440d-8097-b05d3fdd7874,3fe6b0e5-0f89-4318-9249-a3d8c9db5c7b,6b21512d-74b8-4450-9cac-5dac6c01c315,e35c2524-2d20-4079-b53c-1c6a68580aae,be7c029b-7667-4157-96eb-ea11cf8c97c8,50b74657-4990-4eff-9493-9cea20ad2ad2,1a99fd28-8dfd-4063-bca9-0ec5f47a36fa,edf71b6f-c6b0-4af6-b94b-6c9e8c2df327,431ea38c-9c31-459e-8a0c-006a5e5d76fd,43004296-8b2f-43a0-8015-be8d015e41ad,ac0aeffe-7db8-4dcf-8c73-65c1e93a6e98,30bd2b8a-9330-49a8-8756-b05a3cdaf74c,aea17f2b-079d-464b-9148-3caeeb2c4e7d,e53dcbd8-d54c-4b85-97ba-e02f2fb23985,8ff71383-7c99-4852-8330-56933f32f256,3d336ed4-d3bf-4f2c-96af-06328785dcc9,e4b40753-120b-4d67-a9ea-2883082c029d,57788fe2-941b-4643-aaf9-52e81bc4a32f,cd9eb081-598d-493c-8dcb-679b8f4f81ae,70473192-70a6-491a-9632-bb72afacf750,3084a08c-399e-4505-9402-11a964573e05,8b7d7556-c715-488a-a4a6-699e6839c88b,5be5f911-12d3-4b13-a745-027ffb9babf9,2b1bf5f6-d69b-4072-9453-1b428008a87c,20df13e6-f287-4ec3-9bd3-0caac13001af,322cd668-dd03-4d75-9d0b-c945585bed82,30f8ec16-f58e-4a9d-ab50-cb8202c2a9e5,f30f1bbd-5068-4a9e-9eeb-36914878ca07,a371fcb1-4961-4874-aa10-493ab61ab46e,a57474f4-b789-4adb-8085-5e3dec0b0e31,ad824321-4403-431e-b198-23ff632ff46e,6c3e9197-bbd9-42d3-bd25-a7f1358297d7,be734703-8822-49f5-8338-cbd4a5b2fbc9,80fdecc4-c29b-4de0-bee6-3101bd000f2e,36563148-ff18-4c36-a157-210b59141af2,97b6a4ec-9057-45a4-bdf4-7ddac65bdc20,8d9bae22-4dcb-486b-b5dd-f8bafbbc547f,e20cc742-9c21-4772-b255-6a39519bd7c1,439d8c47-c9c0-465f-898f-50c3fc334589,1511b562-d188-457e-bbfa-4afda2d67911,0bba59ce-6a1f-4209-98f5-c28120b713d0,94524448-db4b-454b-85fa-163bac0080a5,249a56d6-5165-4679-9275-9d2c76eef7b0,a81a11b7-b55c-4113-91d6-b3aa29741c93,fdd90dfa-24cf-408e-bae4-8ae03a0235ad,a392982a-5068-4c1b-9ee6-f2773087fd0a,9fe3a5b4-5ba2-4c52-90f1-5069b1bf17a2,52335faa-97b0-44ab-b365-cb2b576c6c1b,c0cb7167-5c55-456e-85df-0627a73dee1a,644bc81d-f883-4633-8a5c-c5efb3c6e3b1,21ccf86a-ff27-4ef7-948a-aa7e7e805bd5,458ba3bf-140e-4337-9816-ae87b8c8274b,b11ffaec-ccc4-422d-93cf-04517b187f12,d38eeb9e-b102-44cc-bc0f-523e7393d1f7,abb6d0c6-c88c-491a-8fe5-b460b3cd9c1f,11714eab-d830-44df-ac8e-ec8d0fd25f46,cbc5a075-bca7-4928-b131-e8a304abf6d2,28af42aa-e1b6-4bd6-86be-b06162102c6a,56826a44-91a8-4641-b413-12a0b9077fba,49ffc3ce-98d6-498f-b3c5-ace7d2925cf8,80c03ae5-4543-46c1-a056-f06bd27ceab2,47c60554-5416-471a-ac96-c19dd4192358,e7f4abdf-f22c-447d-9151-ef6a34775795,d78c0211-a874-4acb-8bdc-df8d554957a8,42ba7815-7b52-410a-9908-e5f888f5a0ba,f607bb57-9c04-46af-912b-a594b850c041,d58b55f0-b0cb-4daa-b3b2-630134e78746,c5f899ec-5520-4554-8de3-e8513975a2a7,3e045816-10d3-4db7-aa49-9cb3980731de,f82fbd8d-909c-482e-940e-59ac1fc877b5,c7057aa3-e3bd-4cf6-a2a3-d7b13e46a1b2,2b58a74f-1186-4f03-9a4f-69fc425726d4,100fb1a3-8c85-4c11-9575-ef2eb2933099,c5f0ac8c-b454-486f-801a-e2159a7534d0,eaf82b2b-9ae9-4c4d-80ef-12576da6ce0c,6610765b-348c-4fed-9b3e-5b428e2e941e,924302db-e81f-49d3-99cd-80084abe8ccd,38255c1c-1557-4571-962e-7a415302611b,d9decf66-f12d-4ff9-9d65-54113c808ce0,a6e72789-d0a6-4fe0-b663-0e0f8974fc3d,03ebba8f-462d-4b99-881d-8f82a4155308,c5fd16dd-6652-4912-985d-dd181c7ddac9,95c7d69d-8728-4911-9c79-034e135801ab,a43937e8-680b-419a-b83a-5984fe0e0c86,4ef1410f-bfcb-459d-9e83-bc72838ab591,f1001040-fc35-4024-8bd7-429d6dcbefc5,063c32ea-cc6d-4d11-b874-ee60c1f832ef,979c3466-2802-42f4-8fb6-90c5e27e15af,8ed9eab5-f1c7-4220-a593-d365f306c6ab,fac07176-f641-469b-bb2d-3662185c128e,c9573eb7-1726-41f1-9187-a6944aaaf7ea,148fab77-9717-45de-bb9c-1d1583c5f09b,0356cb68-f0fb-4ea1-a453-4842eaf97d91,66b3769c-8eb2-429b-848f-bad4e20e100d,22ddacfc-52b4-42d8-b243-cf88aeae6efb,291329d0-d2cf-4e9b-b421-f52816064d8e,13a83674-1be7-42a9-b175-8b4fc43a7878,e995ca87-3c70-423b-a16a-066f4b5fe933,e21e32f5-be50-4485-bcf1-620a41f6611d,cd2464fb-8316-4fbe-a969-f15556c90fbc,4d528bc4-0a81-4019-bbea-912bc6a91acd,b1bc6535-450b-4114-8f94-e1022643e7bb,4982dac0-93d3-4227-85d7-24676b9a805e,a21d778f-3528-49fd-800e-9b5f4f6f0990,838658c4-14b2-4f69-bd69-0ca9a1a3b14f,7b7be474-9f1b-4159-b786-cec7ae7c467e,1c8bd41a-b2b0-4f1e-8683-1415a15dd38f,78402dcb-570b-4faf-83ae-ac9f424472c5,72201905-fc69-4a8e-aba3-f2d5683446b8,5180eb59-45cf-485d-8dfe-fb2327e16bf1,3d4fa5dd-6853-4b12-b4a2-aa9500dab13b,dbdae85d-7dd5-49d6-9bce-ff0273631600,4be10cda-df81-41a0-9d66-3df0c0ac0f04,d32d12c6-fe90-4134-8655-da8aa797f41b,b286c0d8-f91a-4ea5-8ca4-952cc84eb97d,a975f558-cc51-4694-ae8a-723f77b29795,6e14f86a-f43f-4ff5-bb31-fce00f8ac532,eef1e05a-c576-4dc0-922f-1dc60bace2c7,b4e4ec8e-bd82-46dd-8645-d8005b376df8,1de4d170-a28f-4863-b616-341d059f80a5,67780603-bc70-4413-9fbc-ff9fb7971d43,139ffb7b-763e-421e-99b4-48bf68f0345a,ee5262f8-c993-4ac0-bf87-79833d3dda5b,c452bf23-6360-42d4-848a-2f027db007d9,7bdc954c-1f16-4851-8890-d89f50ce7b51,bf4950f8-84eb-4057-ae74-cb1ff70db266,22a84f8c-8322-4910-8841-a54948fc56be,71abc553-cd4d-454e-8d16-efdc549be05e,ecc0d1a9-85d6-45fd-b1ad-9afd907a1e46,8db508db-c0da-4426-a27c-381050ee7bb3,d4fe679e-8eef-4d4b-849f-5732f1989153,004c8ce2-61c8-42a4-8e5d-8b7f842e9734,ca2f94d4-9444-4df0-9523-a9c5a6fa07c7,2fca747a-b5a4-44a8-8f8d-1e0fc10cef8b,f04c540f-0109-4acb-98d3-acb956119dd1,2d87495c-eb41-47e6-98a5-149c94917580,634090a7-d8fd-4402-96d0-be88a3045e75,7ee1a923-2a6d-4777-930b-8e47cf774d67,ce0e7a9a-199a-467d-be60-e5844076c38b,9ee46d8d-983b-4074-9c6d-0922f4ec1fae,ac859d70-f127-4bc5-800b-f34b4f7f7ca5,8335f91a-2ca6-4568-a14c-cbffff594782,c7dfa841-137f-48d7-876e-adf04aaa8376,275bcd7b-2d0d-46a8-aac7-af43398d0640,619204cf-588b-47e5-bc65-7e397631e560,70381819-abe7-47a7-abc6-36a34278a2a5,42ee51a8-3d44-4a02-adf1-4904603c2995,8d923c45-fa51-47aa-b18d-38f3531a8d5f,474fe8e3-ddf5-45d3-9504-c4b3796d96b2,6c97e41f-2c53-4e31-803d-c9485baaff7a,1feb2fd6-73f6-4161-b6e0-2b23ed39f651,bf2e9054-d35a-4a07-adc5-2abecd67cf9c,39e1a49a-5e0f-4e26-a583-19672a594905,9cf9ecfc-c13a-4c75-b7ff-bdfd37e04550,888fefca-4486-4aa7-845d-5ad4165dfcc8,5518d2dc-cb10-47e2-ac9e-1a7921e6d026,ec23c3fb-0ab9-4529-ba56-acc7316ab8df,9f27d03a-440e-46dc-b94e-2b2ee02be2fd,bf548ac1-d515-4a8f-9ba0-a42129139468,f8f6d34f-bb34-4206-849b-39eb87e618c5,8b479816-f560-4364-b7d7-4b9c84be364e,f309bfc4-d8c3-4bc6-b86f-8f6de93c316a,f0a52fb5-437f-4a58-b7b3-ae273cc67b34,01d49fc3-2532-407b-ac18-e9afa350af02,3a841774-1fb5-48c5-8ac0-1081ce5ce3fe,136c31f7-0368-41b9-89f7-ad778421a9d8,cfbf9a2a-4289-4932-a494-aa36d24984f1,372829f8-177d-4528-b62e-4c36184f9cf9,bdf6149b-f011-4208-9d0c-6e9c0a2f4a9b,df6eb7cb-2f1a-4f97-b2c5-326417e185b4,b002344f-859c-4a08-95d4-8c1b5f5b1ab9,1a50fc95-9229-4471-80d8-d6cad97d282a,d6584230-87aa-40b0-b309-383a25534602,1d63e8fc-7fe3-4624-baf2-24577b5b6594,0f3c0ad4-c21c-4624-819c-966c16e6caa1,b8583182-2798-45af-bd72-7f9634988a93,19170f29-a0c9-46bc-bd43-c59c80198ef0,545664e1-d58b-4432-aa80-671a0bc93320,6b67e7a2-558b-4888-8a56-da66676a3d9a,b6d6bac8-6a66-4c9e-8cd6-888f85354014,78609f7c-d8ac-4bcf-af15-9075b032aa20,055b4884-dbf0-4629-a9a9-917b9f322c3c,18d696f0-d302-4e54-bbba-a5c974e249cb,5ca7cb3a-ed59-4b8f-b2f7-a16db6460599,f45b4dca-e087-4ca2-840f-a98656cef6c2,3e59f482-d0e0-4d88-a4fa-ff02c91e7f6c,afa7f610-0d2d-4dc6-8c55-b230cdd7b722,f181a795-0fe4-4936-8e91-6b5a92e43b7c,767254ca-4dca-4d19-a87a-fb4d561f62e6,732872f3-a634-4287-8b6f-c09db23ce31e,6926da2d-d190-4d89-8898-55e6bf0fcccf,ec1adcf5-f741-4484-b5b8-799c5a07a327,5fa18b70-b91c-4026-a39a-4afde657f2fb,cfef6a4c-7b5f-439c-9ff9-827bd4eccad0,835a19ec-8aea-4e72-a116-66386df1b8db,7f933def-8873-41b8-aaaa-e5b9d1d48ae2,36a01b12-8bfc-4b49-9ba1-f6832ba0a94c,a5b3ea08-ff7e-4f3b-bb93-09d82fdfb50b,53c45002-68c4-4487-ae19-259488f47b3e,36374375-dc6c-4209-baef-a427ff9b8287,8c809db9-443e-49f9-a998-00d84f594a2d,7fa3c082-dd04-475a-9992-91436e18b8c6,6c44a728-8659-4831-a3cd-21ec4e88cab1,dfa83b78-df0e-44d4-8546-ce52bca9aeda,4a3931dc-d97a-448f-a4e8-7306ca2a78af,e76b9794-a740-4277-9f3b-603d7f31a540,e2a58059-dee8-4a51-b3a6-de205cda1103,30605906-c9f3-42be-b2d9-ca3d17590555,bcff9788-2c47-474d-b60c-d7a5a379a4da,093d921a-ecb5-479d-9bd2-1b9affebbc7d,b1f6ee1a-aafd-4f26-8662-f50eed82f2d8,8020361d-9b30-4d76-bb7a-58efc506be09,fe1f23a5-6dc2-48a9-83bb-9618082db895,33dd681b-c4ff-42ec-95b7-cbebdf34960b,3b628d30-c914-4f39-b319-2a9e052337e5,5a0270ca-ed44-452c-99ba-35670d48af9e,cca14759-2f4c-405b-904e-872878803ba9,e68d84af-9ca9-4998-868c-4f04d210dba1,8fabb284-1ff6-456d-b8b1-012f5c845cc2,471dd26f-43d5-4ce8-9cf9-6fe6ecf8eb47,f38e0eac-6666-433e-bd67-e42133c43611,801e69ef-dfb5-4a49-bff5-ca41151b7fc3,c6096623-8d9c-40d0-9001-80a42842ad96,3d124981-c22a-445c-b7b7-e432e3ce1328,20c4ea6e-49e7-4f29-9609-3a1bac7de4f2,3439c8b0-af96-4efa-b143-c43f1b5fb5fa,f3fb4efe-3016-461c-af92-8f8c43e3844f,55ca8b5e-4c4b-4add-b022-3771cfd0f086,9c51f7f2-4cf8-4c02-b4db-6c843bd84c6f,d0abcd91-ec37-4ecc-b300-2bec142d765b,8ce91ef4-8bbe-4f01-9492-4dcae383e8ab,6bd29928-ce9c-4069-9056-e33ae5eb598d,8c0fc268-4d9f-49bf-a44d-8ee3b93c4ce8,616ac8c3-732b-4f39-9145-9197cd59eac7,2f3aadcc-8db2-439b-86e9-37c3e58f6b7d,7473f3af-8fb0-4c0f-8eca-3cdae92da991,aeb47fe1-653a-4ebd-91b8-cd40285f8c0b,71baf163-e4a8-42ef-9eaf-bea25a69712f,5113ea91-e824-41ec-a917-84ecd81e3f06,05b9174b-bcb5-44c8-93ee-cd0c09bb616c,bd9de9c1-0420-4f30-9a83-a3d22b06d8b9,be41b46a-649b-4d2e-9419-5e9cbd9c0700,117a444d-bfca-4676-b066-6469c2afd152,0bd98da8-8813-4f74-a7f0-5730a4c73c9a,c674dd1f-f4f5-467b-a8e9-c3108771bd88,a5d68c14-465e-462a-b3ca-e2b315bc5f79,96387312-ed65-49e9-ae6c-73174b8c3f1d,db4d30cb-f822-4b43-a9f9-9bfafb95970e,baca8d44-d04d-45d9-904a-356edb4780de,27e4627d-ad8e-42b3-b7cf-e82d9ebb7b7a,ee79432a-f8e4-4bdd-add5-b6a106fceddc,317ed5fd-c470-4b88-b962-1aed53261d93,3adb415e-8943-45e0-96e0-669ee19220bb,c62f2404-1095-4c54-9357-77c9531f8f18,4d37105f-5af0-488e-9d47-a6fd9daac87c,be416209-3151-4408-b055-02f951a6ea8b,804509a2-b39e-409a-bb40-e44728f79ac0,028f551c-94e9-493b-b473-c7e300aaaf95,1d663876-3c4a-4476-b7f7-b05f400772ad,4fb557ba-cd46-4d5a-a969-94ad73c3880e,3cbf0223-91f9-4e46-a3bd-9c8e8b65cb26,f7733074-07b4-43bf-9209-424c24edba42,66c96e0c-c2e2-4c28-844a-03e14f079d84,1237f272-e764-48bf-ad5f-7eb8d68198e2,a01acbb8-68c2-4124-927c-b89a9f23f916,00e3cb26-83da-4436-87ae-e2acec612a30,dc9a2807-6fb2-403c-9917-777aedb6c0f1,0376f9cc-d90c-4ef2-b2b2-7c9a2d24acc4,ffcf4db1-5ac6-444f-9e44-91c8924822dc,8f3d7f26-b906-49e1-a7fe-aae405f95e9c,00c1608c-b1b4-44a4-9d94-6e386898a312,6123e5e3-90ea-41f5-a4bd-c3590833d9d5,346943b8-0294-4fa0-940c-015e8a0010a3,b6f5ed82-dea8-47c9-8eda-27a5e4781a13,bf444553-1c09-4a4e-b440-27cbb317e9b5,a840936a-f74a-42e3-a955-5b040e3a63a9,4593c59c-766e-4826-8bf4-d1dbf661e78a,450b8017-c26b-44c3-9155-9ca3ef64649a,3ecaacc8-80c5-4060-ad96-7d6bf15c474f,a1dbbc2d-07de-4313-b39f-6bf925cd9dbb,a9c9ed0e-c1b7-44ae-a0e8-5183dc3b839c,471a2fa1-1ca6-4179-972f-3766b18d6496,1d1fdb5f-e4fc-4133-8b3b-f944e009c96e,1316aea3-3e34-4fa9-83e9-94f4aa602cb5,2f49ffc0-5842-47ad-ac50-4fa017f987f1,9eacbbae-f128-44d0-8717-2c592bb75d83,daa8d861-9674-4634-9217-9b8aefbbf3cc,dc443e9f-e112-4320-8418-37ee41bacebc,9cb71dcc-53d1-4bc0-9c83-0a52d1aefe75,8d698e9a-ea9e-4ecd-99f5-f99d39e1f567,308405ad-97d5-4576-9844-90a454c27cd8,5a3ea2de-4927-4070-bcbf-c83336f02b45,4c3baf60-0ed4-44e9-8993-8133db50323e,7d2d34c3-7d83-456a-97a6-72cf7f34be42,de69f111-22c1-4400-a424-5feb7efda13e,790e6bd6-029e-4fe4-8221-618426476d48,7571a553-63f1-4cdd-98ce-fdb37c0eff55,73523eee-c494-4e07-98b0-d0f261fca74e,7c3da0a8-c377-44fd-8211-cc2ff9a0a6c0,f98f2dc2-d812-48a2-89f6-475998a7428c,29a14d48-9917-4854-97b2-48027802d941,a2af773f-a74a-4050-bb6b-9dfc5ccfc063,645967fe-abd5-484f-ba83-e8dd701d7d83,28cf870a-8344-4531-818b-93ead15ff60e,9eb697af-48e8-4bcd-94b0-607d9650a251,b34158d9-736a-494b-8241-1e6277acf210,e68673f4-9177-4516-ae4d-076cdc6253c5,549c44b5-d75f-4e90-a94c-90fcadc96cdb,b85c99f8-f4a5-48d1-a1e0-d48d41544db1,7efb3b4a-2d04-4cbc-8366-40bd583b420e,35ab85a6-60bd-408d-b784-c8458f63767c,2ab316f9-f251-43c5-86d9-755c3cc38f1b,732ac011-3eae-448e-916c-068c5eb5993b,a4f9f118-5bc9-4d25-b013-1043f74b8cd2,d9bcc03f-0565-4e0b-aa89-956b53b325c0,aae8d725-2bbb-446d-be29-3591d69cdb02,3154e0e4-40be-4c10-bfa0-467e6c901dce,b771f4d4-8311-408f-b282-61be7b6448e6,2b9df1c2-9d40-4363-9c44-ef42e5bb5696,ccf46264-a897-4727-b58e-7181d2069fcd,8e788abe-9958-411d-84de-9123214a181a,dcc43f92-56e1-49e3-91ba-8ccd0aa6da49,73b9fd82-c4af-47bb-9f5e-4f7c2e4b7710,8cd6588e-0517-4395-83f1-bc3ae01979df,f8ebe60c-c05c-4558-af96-6e6555565046,5036c38b-5f0f-4cfb-8e11-32b18aebdc09,d31a6fa2-4276-4011-bafa-0cba1b9b8e29,24fae932-0776-4262-bfcf-7911b2ed053a,388d1c42-b881-4f25-9df6-abc2edb904af,6e67fe65-f7fd-4e6d-8f91-b71f32fa02cc,9434f38e-eaf7-4c47-ac11-2763c0847b75,93df1243-e390-4904-a10e-a3d7f2d24c8a,dd94e25c-2e15-4903-92b3-8a689e240b58,ca01bab5-dd62-4672-baaa-844a916d31b4,054e5ac6-9f9b-4fe4-ac10-e868bcec1fc8,e41d63b2-1ff0-47ca-8567-f79eff0c875a,b594c95e-e640-4a7c-91a9-6d8bc441ca4b,547d8a46-b80d-41ad-be48-91cbb83f9089,466dea32-6f44-4914-bc69-e355d407f0c2,237592da-adf6-4a65-a6e8-72c44b4b9183,1c8f64db-fcb1-49dd-9c6f-276047ab0cce,b0ba0173-b03b-4648-a645-0e112bf19215,3f354506-1e15-49d4-913c-18c0af44afe7,61a5015c-89e1-4135-a9c8-f999a5986126,7494b7e0-6591-4a08-a68e-52c24f72db4a,d7bdb533-c87f-4513-9ae7-dec5b353d3a5,a28d73f3-f0be-49b0-8988-407604eeb285,9a8f393e-7f84-4120-bc2c-6ed01552cdbe,819703fe-45f9-449f-8dcd-3945a1326a57,e44baaf6-cacd-40e8-85e2-cf9ff483ff96,c6291473-78db-4cf4-a991-df8709dc5950,876e6e12-7a88-4643-a7ba-68b5077b50a8,744654f7-d98c-4fe5-bde2-3e05d5ae81db,ce0901ad-f645-423f-aa86-f48653938ecd,75ee4522-bad7-4169-ba35-e4eb088a4975,8c4a7103-1ac9-4e56-a03f-29dc5579ac96,2e7a5bdc-d912-4618-993a-d4f35182a9f6,b5620c6b-b99c-407d-befe-240d5a593d91,800f7de4-d065-4fa0-b485-f833eca81c04,9b31eb6e-2fab-48c9-8298-317171e4b16a,75a03a65-2a03-42a5-8ef4-658ce8ba53cd,771d4fe3-cf5c-4a52-811d-a5661aefc604,c031a4d9-e2a0-42d6-b755-9eff8c8e7c39,f7ac915c-b231-4e5f-8832-81578df61bb2,abdaa2c9-956f-4a0f-a2bc-c9e154179e1d,57f1036b-a225-4b1b-800d-1dcacd56f37e,0e2010bb-312f-4a8c-a6ff-dd41faa0bb06,f94aeac3-a1d6-4911-90c1-2a820ea54485,8c15b9b3-d24d-4dc6-a971-a5f2aa400452,4738ba1f-1938-4ab6-881e-1d5086addb59,2a107b14-8d79-4198-94a0-e68f30e14a02,3fe8b384-2e1b-4f42-bc7b-3b6e414f8ab5,605a8b50-bd47-4195-b0df-84a866056638,3ec0de38-9a3b-4fae-9e91-8e5a326b9a98,a3960813-8f1e-4f01-b626-efccb7e9c097,7a77a13c-56ae-487d-9103-ceb603487cf4,b5063440-0053-46a2-8fe4-35d55f6d9260,1435ec70-69ab-40f6-8ef0-6e0ca15fd4bd,d1d2b686-8aa3-493f-8d42-fb96b31a0678,3f258e00-0140-415c-9828-88ba0946ef98,78f7df03-1ff3-44e0-98ca-6db670917071,c86ccaf0-5223-4ee6-848e-08991449ee51,5ad7724b-9d6a-4375-a0ae-559745a9ac8b,2872538c-f7d2-4346-8d15-7fbf011deb84,e0f53aa3-4f32-43c2-8d43-55408234f3f9,eb126509-7412-4f66-97d4-43542a8305ef,0c076612-9a43-4839-9c08-144cdffb83bb,22179544-9b5b-4a6a-8058-5760c85144e9,4b3fdcfb-f5d5-4a40-9ff7-9a8be6d1eeb4,0d506e27-ffb3-4fe2-8fb9-ce38cae18aca,0c4a5675-becd-4c63-ac19-206f9f4bb6b7,a6627928-b3b4-4258-9b5d-8e8317dfb8c0,a82cd018-fcf6-4c5c-a757-10cec9ac2864,ccba94e1-334e-4076-bae9-4901a029bfb7,23b83aa0-d268-49ea-b16e-658df2f56fe2,9dc0c7e0-a8c8-49cf-b6df-1a94372cab88,035e1910-fa04-4a46-b5b9-a2642d929e60,4e9f574f-0fa1-4d7f-acd7-77eb166a2454,c21628f1-1d1a-4f5b-ae2b-ffd74f2f3f49,214d719b-bf59-4893-b4df-1cdb2de9004c,103963dc-fab1-4182-97cd-fcfba4c1eda8,d0377e84-b229-40d0-98dc-3aceb91afb8a,be4e9fa7-c1ec-4277-bad9-90f2d19a1ce1,83eb5f51-3d23-4246-b9f1-0b298ee2a144,656f32ff-81ad-49af-909a-83fc214da245,ca6ee5de-2b9f-4c0e-b617-dc30dac5b59a,672ba486-e03e-4dfd-86c7-03f6ab77a742,171c840a-7099-470f-8683-77843f4e0342,6821c764-2b11-483a-a629-b2b06dc69561,94274761-6914-4a94-84b2-0e82026bae4e,dda1c4f1-e3b8-4bda-a6b3-10abb086df1f,526d255b-27d4-4384-85f4-e08110216da7,c912b76d-dc42-416b-824b-87c6370d40aa,c2faa347-0265-49b4-bdbb-148cc050e3c7,01e14788-91fd-49e8-a06f-7aa5745a81c7,dd846e41-6f96-4e66-a1e4-960498e0933a,063925cf-c048-472b-9901-841efe1a402f,10e33907-d731-4ddf-b109-4ef5edfb016a,66012b9d-e4e5-4da9-8598-2be9a1db0c33,8a025b08-7ae5-4c2c-b0c5-216428d69b4f,ce8d0df1-e819-4721-8e6e-7336bd77d17e,dcae77b2-fa1a-4f4e-81e3-1b67f645d5b6,128b69ab-462c-4852-8e10-1fe02a7c3dcb,8455346c-347c-4cc4-84d8-b2bd0e3d888a,8dd38495-2887-4a21-a669-5ea62dfdf9fd,aada87e6-e185-4fba-8df1-8e7cb49eaf79,d093b6ca-2153-4aa5-b00c-ed522e0e40e4,8763f450-6fbe-4704-98e8-e4e89943b17d,75f99dfe-b86f-4f95-9463-6d47a2be3d66,9b3444fc-714d-4e2b-bc07-e7bf3956cdf4,d941b704-2c25-4243-b0b2-5ac652905e41,e8b1c296-8eea-4990-80cc-aaf69d4711a4,dd9e61bd-4ef2-4155-9ba6-52136f832fc3,81fb3768-2fa1-4717-aa90-6e8905c0c319,a963af23-a854-4beb-a9e2-5657ce6fc57d,3028a0da-daab-4d57-91a1-8de5856621c5,4a80ffab-f7b5-47f0-b24b-8cbb07dfaf81,5598c046-dee4-4b71-8863-b93fd8a113ad,9c8face7-dd89-4383-a592-7de4a623597c,ee36b5cc-e7f6-42cc-96f3-235d8e644396,6308f171-bade-4319-a0d4-0eeb8c86b584,bf2c1d5f-cb07-4b7b-8b21-b2e82fa55753,b6fe9eb4-9932-4d1c-ad06-b5fb62273640,1c6cab62-6b80-4928-b72d-625c52a86eff,f6980e81-c853-46fc-9b7f-2e52bf2d59c6,5e90baf8-71dc-4f4f-bc54-8f7863151484,55f7b2be-9525-4584-80a4-62c15e79bebd,9fc573d5-a8f0-4b17-b414-50ca52343850,34b7e67c-5397-49bb-81d5-ff498b8d4209,981c6cc5-4e97-4c3b-a277-d6e70678127f,285ef78a-69f6-482e-b601-9a169e3534e2,08f6ec50-d0ee-45aa-96e7-6d671b9bf19a,e1f3ee08-4f95-49fa-8e88-d524c20733b5,b2e69632-9ca8-41ce-bfe5-2e9d2706dd33,251489ef-d234-4106-ab09-6417d3f496e8,959c2914-6735-4fc1-843e-ead3841350dd,72ae75a1-5772-4986-9f73-d5d0666cf7f7,ab712dc5-157a-401a-bb92-09fd824a2534,dc38eb82-c320-45c8-91fb-283335e004e3,fe422740-0516-4d9d-82c3-269818549e76,64242e73-e19c-4b85-b281-11fbfcf7cb96,16fd2ea3-503e-4530-a877-7e19a79428ec,3385efc8-4fd6-4e90-91a7-c27cdfd832b3,7637490e-cacc-49e3-8568-a37223d86cea,7750e4d7-8194-40e7-9229-ac873a75802d,5cc94b01-dc4d-47e9-9be0-d0c8fc509abf,080c9ad9-3ca0-45b3-9bc2-29b84d54a20c,aad0af0a-7e9a-4bd1-90e6-7aa3c18c245f,13d5a51c-506c-471b-89a6-841b34fd57f6,9075b276-35ed-4380-93c7-2b15763ab6e8,aa486bbc-99d9-4adc-8ca3-24be01792e5b,82c28cd0-8499-485c-8c58-b8e9c1dd81e8,16d01e2d-7f2b-4a88-a988-fe30e79188ee,700079e9-b17f-46e0-9429-79822f32f094,bf88be80-4562-40a9-9f43-74b4917fc044,34812cbf-91ef-49a9-bc39-7793842e801e,86c88394-4a59-4cf9-ab9a-7a3ad1e690cc,99f764a8-d090-410b-adad-7902cf9ff730,631e6e3f-dffa-4f48-8819-7dcff82ebbb5,cc68bb2f-0b80-4133-bc97-11716b67c0d0,eb12f702-ae4a-4981-b36d-23a4dc617935,cfeaabb2-4632-4df2-8f0c-56a1c118251c,9767c7e4-bd9b-46bc-821f-62f5cb256d8f,bccde01b-bf14-45de-b878-69999cac9e80,bc5a39ff-b9cf-4ce8-a294-38d886f5bfae,121bb926-f169-46a9-8f47-9ad44982e8d0,1fac2877-42ce-4cba-8017-0747b6e0303a,40e5f26e-3ee7-427c-9a65-bc1842ecc6e3,f9677954-dc74-42ac-800b-2da21da1bf22,0166bb4f-2703-4fc5-98f0-f53987d14077,d6d38dd7-148b-475a-b1d9-9e94724217e1,0c664a93-c8ce-4806-adbd-955bb570a8b8,5a995ffa-8078-454f-9e94-9b508b2cbab2,73145664-e82c-4eac-a3e3-4bfaa39dc762,852f7ed7-53c6-4fc6-b2de-64ed1b45413a,db4349c3-d4e8-44cc-bd28-ae6d7edad552,64b0ccae-7a7b-4191-9c4d-6d0c6a53e838,eaf3a09b-b5c4-40f8-93e3-e4849d59ccc6,e7439c11-3e01-4dd8-8684-a0075ba4e84e,53213eef-2dba-4bb5-9c9d-21ad3a5f3871,41306b2f-197c-47b6-a4f1-91a917ba06bd,59043005-0907-4c8f-8c13-069cbbefa131,98e0509b-0a37-40e5-8222-267743d580fb,101eaac6-ec88-41b2-99fc-5764802e839b,569f637c-b07b-4bca-ab13-58ab7abca696,51f3a43e-982f-4a9c-98c4-9758ea269a4c,5361b059-313a-47a2-bad9-7f26471e1fbc,9b1b0157-0ad8-4605-8806-f5d1e0bbae1a,bdae574f-0fff-40a7-baed-c90d9a15f22c,29008dc2-a71d-491f-b5ba-217cd8044c2d,c2b65380-dd33-45ca-8ed8-4bd1b4da7b8b,d8b0384f-cba8-459e-b47a-1fef1ed3ffb4,66722096-e454-442c-87a7-c0ea30f97c2b,3814abe7-a475-4848-a212-afa8129b838c,353fcd63-3241-4d67-962c-0bbe30449913,39c81582-5706-47b9-b263-0be814cdcfab,7100c55e-7f45-4f89-b306-8b9a556ea3d8,64819c43-3427-47d1-ab31-92c9a671d3fb,52dfb1d8-8d9f-45d3-b8c1-c04fbf12c3e8,15081031-8b64-4433-a8f1-9c7e8e813643,28461263-1a20-44f1-a2c1-45437c777386,96c7c332-8f86-4b18-a1f4-6d3eb808751b,d9b3ea52-03df-4308-a393-29c56394cdfa,6f97ffb4-0465-4095-b02e-3dc05c81318a,10a00bf3-0eab-4ed0-a089-879bcf1331b2,9a1caee4-ba3e-4f33-b295-651f0f2f2c8e,271ee25b-d778-4d64-930b-c78f74e9dc9a,066c49c1-dce3-4049-9d2b-00912cdbd88f,029f8a8f-b4a7-4ea9-9daa-d02a3911b95a,40c22de0-ad59-4ad4-99a2-0c0803afcd28,7810ff5c-4955-45d0-95bd-358decfac8c6,f669b8d3-09a7-41f7-8e72-48c5206fac9d,8fd994ec-d930-4707-8a6a-cdc0d5fe4d8d,c08e5d96-c95a-4d06-98fc-6612766c12f7,8fe3683d-f531-4717-9140-d692420e0f11,92054bbb-6b5c-4fa2-9257-271b6cfe7630,fbfc5cb6-9d31-49f9-8cc7-81ab4425a670,18509369-ad1f-4ac0-82f5-c50f5eb5aab6,93ab1e0d-a1bb-429b-817f-3b34b7988473,dd636bb5-2d2d-4a8d-997b-05d1e9f0deb1,ad77cc04-2259-40ea-98d7-3f714231a7db,a873e301-258b-4545-8948-a763e372691c,b26f3a89-3674-48f1-90fe-1a65cd857b5f,0cd78de8-fa0e-4a30-b6bf-2fbfae2bd7da,6124a585-ea3e-499e-b595-ccc7fb569f0f,2b031b1a-1e76-4663-878c-b58851faf07b,24502aea-94a9-42df-a4ae-d63ea202381b,df802ac0-0a69-47ea-aad5-9c090d17aede,356782dc-c132-4e90-9c38-0875f31e83f0,fe5e9142-f8d1-40e0-b25d-63c1d0ce0e4f,166db212-b997-4072-9282-2cb28086bf3a,028ef1f1-d91f-424d-8d66-fd02fcafc4a8,c1c8bab9-86ae-4332-8394-8e6c2759528a,5b9b64f1-e244-480e-99bc-89d29816e210,d7078c44-28ff-4031-b06a-a38fe5368921,2b2baaef-5de0-4d59-87dc-bd58220f4e4b,a99ec238-7a27-462d-b114-90337976d5a1,aab47b1c-faf1-49af-b4e0-29ed450efb15,f3f85555-6c22-44ae-a0bb-650c721389be,fadb4f81-a261-4b49-9955-ca3c6dc9ee67,19ef700f-d288-41c0-8601-4448abbf8541,b2db0000-097a-40cd-8d1a-5af7645b9c9b,a0b43caa-f708-4c41-91ec-811a47406c93,b92de040-d518-4992-b475-f8195b19b2b2,e96cc3b4-4836-4043-97bc-30a6a77ee1cd,2a62fd45-3b2c-444c-ad3d-133a60194b78,7afc5461-ef17-4dfe-8ea3-3901c5eb2eb5,542040f3-7b03-48c0-905b-e5fd454033ee,493ec0a6-76e4-4a7c-bc6f-f1b999f3a476,fee5602d-00d4-42ba-b49e-1bb3ccea9a8d,ce309310-9d2e-4254-9d46-e975a39d6a3c,6ab8f7b7-13e6-4b37-aa32-c76db8f19771,83232adc-4ec1-407a-977c-29c21a605da9,22d4146e-5563-4405-a2a9-277abbee4f9e,4cae5a90-7d8a-4afe-8703-ee6d4512dfc3,3d0e4c46-f510-46e8-8423-aae7e2250d29,96779fa2-ffa8-488f-b921-2b0b6113b926,1db49d39-1934-4334-ae6e-446f6d682bb7,bd12f1a3-66b8-41a6-a988-de2eca0ff8e2,07a56a36-421c-4069-a0ae-985c236c1e2d,cd210cdf-4768-4dfb-b588-2eb50d5208f4,9f2100a3-4863-458d-94a9-3f3b6ff1d32f,3005e10f-69aa-4cc7-9114-6a3d572fe3ca,8acbed51-c51b-4ace-a75b-ffcf9620ba83,963f2d29-7d0d-45ef-9d16-b9a8f3a45cd9,5d61a499-3bb9-4468-898d-36100f48e8a8,cd37c3be-056e-4050-a959-a336b0d3af7a,2e8d4bca-058b-4b92-9b2e-1cfa438d1061,2d644ca9-e9c0-4993-ad16-f1e00e326ba9,d1f62735-a112-4e1e-ba94-d891b1c08f94,fe2350e2-eb42-4ce7-9c58-7401dc1e2f02,5510ed0b-8f5b-4973-89bc-04883b294edc,3926fa68-581b-4cf1-9362-3433f2026ac5,5eeab6d9-b9f6-4f0c-882d-6bfb69d16f3c,70c8ccff-48ee-4923-b1a9-be7df49c0284,ad6c3cbe-262d-4067-ac3f-9ff1ff0203f3,8881ed50-5b9e-469e-a16c-0334adeffb5a,8906c69a-9727-4df3-800d-880f4257ad91,4a4aac37-c396-4911-b028-9fb8eac50f62,4dc1e978-fed1-4371-b8ab-8fafa6d61004,79c05d05-b7e3-45ed-9865-fabe67c845d8,28c4ad41-04d0-4326-a870-05f3b70a7371,30d76cf3-e71b-4d68-92be-37a072c40ecb,52d4de90-6368-44fc-aebd-992a3afb6996,a9a4de03-3b3f-4137-a0fb-ea356e096ef9,af505a65-d9e5-4a69-afea-5ab0f5943c2a,b9690e16-1b54-4b60-b851-3e07e6912860,c621eac8-166f-4207-beee-9c373d4f3c03,71cc77bb-c4a9-406e-9dfc-1825c1e4c491,5f9ff7ba-24c6-44c0-9a1e-499e39d5f464,19a02527-49b5-4b8b-91ef-c9f114d2a4ac,da376461-436c-49a6-b836-0aee253a09b6,b18b1aa7-a3d6-4960-a9a4-9f5a924cbe72,27c85fb2-19af-4d3a-ac95-63d291544618,a7b4a1ce-6973-4fc0-a13d-62db24b63984,bf02d637-a419-48f9-af52-eadf9a12f893,23859d49-dd1c-4c0c-b9a9-e1890e1ff513,08ee97c5-00eb-4687-ab87-e5f509c3f75e,dc8aa5b0-d08c-460d-96e5-58f50a7c8c7e,bcdeb399-ac63-43fe-a1c6-36f106152ffa,b761566b-ca43-416a-a72a-5bfe753d5970,6053ab44-b615-4a1e-a614-20a48497a241,2681dba6-67ae-417a-b409-a62ecbe9ade5,77f69faa-d662-4f8c-9f2f-e2f5ae1a9c40,88f38ced-3e0c-42cd-97a7-8076ec0a2f91,560f807a-09c2-423b-9348-5d91bcd9f328,cd7308d8-61a0-479b-aac4-bbef96036308,f9d96270-6fa7-4cb2-b102-891bd4e5885c,4bbfb5b4-2302-424f-a0f0-4b203a580780,1c1165b1-8b2f-486b-a5e3-8313c542395e,19250f76-f498-4936-ac05-94bff12b2a45,244458d4-2fac-4b28-a64d-6a9c249268e2,59652127-d611-4de3-ade5-8a46afa753ca,c9432cef-f03d-4c70-b11d-5b6cafed0031,26da4674-f93c-48af-bf0a-224d8bd676ed,12480698-e9c5-4cbd-9232-2d68fffb8eea,cd62d2d1-a262-4ca9-9d89-1cfecb9962d6,b4914117-649f-4d88-80ae-5de21eba1bd8,27a5afb8-dbc4-4347-8034-0e74c5a71ba0,d7b7bfcb-1e69-46e3-bc1f-5341ea336cc6,cc0ce392-1af9-4746-9d5c-893e55557c45,139513b9-0a7e-4b8b-8ed9-a0b5ca59aa1a,bab0d279-25bd-429e-a8a6-40e13ec2a278,53293e61-eb44-4d20-81ef-9715181f30fb,0e17bcfc-0547-4877-9fe5-74a99bc91e9b,029c7ed4-3378-4664-9d24-c84505a0ebad,1a84fea1-4045-43bb-9a69-de68f0bfbdc0,6cd0c6cf-7413-45cf-9ff4-9e68a13c031a,a8ca0f32-6672-48aa-b1b7-e3ccfd002193,9f580290-a4a4-452a-b700-c8d2a2a03592,3a9835b2-8b1b-44b8-a66f-435bde5dd6c6,64ce5325-ac93-418c-9e0b-f58d9278279c,721453fd-d8d1-4995-a57f-f1d1810fde57,8a37199b-b0bb-4ae0-a348-78db10639b89,ba3e9765-ab9b-4e07-871f-e9ff6b30a8b3,36a073a8-8a1a-456a-bc4a-5642c6e1e92d,36d9f233-d314-4856-88fb-ee065c230a76,0f8a5ee8-6fdf-44a8-954e-63df55739fd5,c21dd93d-458b-4670-a915-cff3a8af5c1e,128ee5b0-9055-4ca0-995a-be3b74edcab0,69d4e9b2-c6df-4ecf-8429-5842f35edea2,9e8611b3-ce5a-4afc-87bc-edf5d6a8a60d,cfc6a54e-772f-408b-a699-95bf3bda0346,4f5db544-86be-4564-bafc-617bde6cfda7,d66e4c66-8023-4a31-9e74-5d13d17e697a,426a2324-613f-4e80-9308-446e791bc42d,43433cc9-8b5b-4c0b-948b-ff9fbd015848,818145c6-8086-4d01-9daa-f5cd51205285,530ac8c5-51a2-4756-adc8-787484be5f57,76a156bc-444c-467c-831e-8acc65f92346,71b2770f-624d-4082-8c1c-b50aee2bb428,18949b3c-48a7-47a9-b715-96a8f74f309b,6f6a558b-a868-4a6d-af03-1b81fbb8d2f1,ed1ec007-d99f-4c76-8e90-94dbd223efcb,4ba2acd7-00e8-4ebf-b90d-266192027050,49c61591-9739-4ca7-948b-45d7db9c1621,bd4e2303-a07b-4083-b566-dc4745a7e42b,d76afecb-04ba-408a-92bf-6845d256e414,b2f9e130-32bb-4217-9f4b-3944fe5749ef,5adc1d13-dfe3-4c6b-8321-39883f062a46,c4ca0994-a964-4058-ba77-d59b9ff7edcc,729fda4f-3580-45ef-aa2b-dd54fc028138,2bf6d3da-19c6-41e9-80f9-3532d5ec7be2,41b5ea4e-262a-4795-bcc4-4f3bc1008fc7,bac7af5f-ba84-424c-8765-abb6b33d085d,db9db1d0-5c44-4886-a578-1fa40f14a649,d6c2f7c9-af2e-4af5-a9fc-0c425df7b1eb,8be32b74-38fc-4c26-948b-d928babe4cad,395dc96f-0919-483f-acb5-481c1e5428ba,86ab03ea-8cec-4b85-9377-6798704c6428,753a92c3-bbd3-45fe-b0a9-4d064d74d3cb,dd6bf879-d328-4d12-b183-8c83f0ee167d,ed85779f-05ad-434a-bd6b-de422cddf8af,1e06747c-c925-49eb-a502-f52f9464f91f,3e60b9e8-1c9a-4bbd-8db8-4b6b593e9f9e,8df35c4b-0555-4ff7-be8a-acfa295cef9d,c1b28f30-da23-4a62-87ca-e782e8a7b814,e112a686-ff0e-4581-83c7-0713d0e8b493,b1322d95-9e0e-44ed-880b-a825293b3297,19fb842e-947e-4988-a830-b6e03244bc85,33011465-952c-4a91-84ff-f90e5e984084,69a428f0-716e-4878-8374-443a80d69029,71ed41b5-ec84-4a3b-b9bf-a1ca210967fa,4c91d491-7e9a-4855-ae1f-cca92ac2bdfb,64d2cf17-da60-4b3a-8365-237ede822022,5afd2487-ce2e-40e1-b0e7-2da6a75bcf0f,3c88329d-ee5b-46d3-a61e-f02bd03f6908,181dc449-8e28-458e-ae7a-f69b67c6dd3e,b1912944-35d9-4a81-88c3-af0202e185b7,df433579-6010-4eb5-a1af-c26f00ec47e5,23e34ec8-de76-4efd-8e36-68e7dc30ea85,ce1126cf-86a6-4158-a0c2-1a4336d48996,da43296f-706b-40cd-b5d7-0943171fb588,70a371c9-db5e-4170-b705-510849d9eba0,ad562c15-fcfd-4d6a-889d-8c101c07340a,59573883-f867-4b7c-a9ff-7605e45528b9,c2ead797-90d4-4fe6-9556-3f6cd4e7aee0,a3b31a21-1cb5-4e6b-ac7b-c58b936901e2,62dcd24a-2fc9-4571-a659-90a7145d73ad,dc796788-a6aa-48aa-a624-5cdec7c5da5f,7d53d818-abf7-4d70-bea2-0c2b4c45e6c0,ad997294-53cd-45c8-bc88-daea56726a7c,d49daebb-e08b-4e1f-a9e4-739a9fe51cee,5323ee18-3143-4022-aa41-dd7c7f54f6de,5f5130fc-882d-4f9f-a1c2-1ed33eb017ee,e149b23f-d9ba-4fe8-872e-cd3680b3df83,7f117718-dd22-419f-be40-791d748bf323,03f773e1-35a4-4ff0-b2ee-10e822ec95de,55af771a-4b12-4273-95c2-9f971f743de0,a2490d9d-a359-4827-b666-d8ba246b6457,1d7aeb83-5fe3-4ac0-a954-4973ef80131f,34665c06-522a-4225-825e-d4dd05e117ac,8d1cc0d0-08c1-4185-bc5f-8feddf75fab6,9777154c-a24e-42de-aff0-abe2024dc7d4,f07d8d90-73f7-4157-99b9-d6e492be1af2,6064cc56-6c59-456c-8f84-92c5d4755e1b,6df5af2f-1520-4565-b36e-e6ed166b7fec,eb5b75c4-6bcd-4208-b546-964183041574,0220b431-8341-46c4-a6f9-90bf9ad0deca,831f5c85-bcea-421c-bffc-d32a3a587d84,63c5315d-fc52-43b6-8ea6-5cefd6add378,3d3b4d8c-f98d-4a91-b199-2d0861929470,15fe9b2f-65b7-476d-9bc6-fe01d2597366,48d0264d-20b2-49d8-a25d-f212c963c61f,611c8675-6414-4c6b-9a3b-9998e2869600,411127b8-d4ef-4175-9f96-533c2a190be7,a0685f0a-b160-4f94-ae34-ea13146d126c,59185776-3ac7-45a9-bff4-080b9918ea71,ed9cb2ea-c508-4bd3-b4ec-cd6db6f26c86,a1b92069-9691-4620-9eb4-28cc38ddffc1,837d2d30-51ba-404e-a78b-361ab35bd603,6b7d8bcd-1f25-49dc-a850-37f2106d4fa1,eab0bc25-a3eb-4b33-b0a4-da3d310080a0,db0648b9-d470-43ef-825c-7c002724cac5,0a499343-4715-4dfb-bc8f-b39cf81bdca3,bbd5bfd7-e6b6-4328-a2b5-adf9096a4aeb,4e0dcfc5-accd-483f-aaf6-720401123f55,279667c6-a9b9-4d97-9449-6a6027e016e6,f5472fa3-60f6-46b1-a78c-8ee506668f94,28c99d63-b575-4bf9-9f2c-d41ced11b147,27bf63c7-2cb1-4229-9b03-22c41c0b7ddb,7bc1196f-58d2-4d85-a663-b32b6602731c,8019ee18-c20f-434b-8963-fdb31a0d6197,be0365f0-937d-4818-b60d-5ef4a63e219a,7e27652e-f66a-4099-be0c-2f82e4c3200d,2226fab6-a8ca-49c2-9842-53605bba2087,705e8d15-6537-4f79-943a-1b3f21d0a0d3,cb76b644-5e44-42f8-bd25-16326db8b286,d8be996c-8b8a-4969-a1e4-695220545d73
domain_name,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld,blocksworld
instance_id,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1,Instance_1
question_category,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,object_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,fluent_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,state_tracking,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,action_executability,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,effects,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,numerical_reasoning,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination,hallucination
question_name,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_3,question_3,question_3,question_3,question_3,question_4,question_4,question_4,question_4,question_4,question_4,question_5,question_5,question_5,question_5,question_5,question_5,question_6,question_6,question_6,question_6,question_6,question_6,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_3,question_3,question_3,question_3,question_3,question_4,question_4,question_4,question_4,question_4,question_4,question_5,question_5,question_5,question_5,question_5,question_5,question_6,question_6,question_6,question_6,question_6,question_6,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_3,question_3,question_3,question_3,question_3,question_4,question_4,question_4,question_4,question_4,question_4,question_5,question_5,question_5,question_5,question_5,question_5,question_6,question_6,question_6,question_6,question_6,question_6,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_3,question_3,question_3,question_3,question_3,question_4,question_4,question_4,question_4,question_4,question_4,question_5,question_5,question_5,question_5,question_5,question_5,question_6,question_6,question_6,question_6,question_6,question_6,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_3,question_3,question_3,question_3,question_3,question_4,question_4,question_4,question_4,question_4,question_4,question_5,question_5,question_5,question_5,question_5,question_5,question_6,question_6,question_6,question_6,question_6,question_6,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_4,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_4,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_4,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_4,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_4,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_4,question_5,question_5,question_5,question_5,question_5,question_5,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_4,question_5,question_5,question_5,question_5,question_5,question_5,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_4,question_5,question_5,question_5,question_5,question_5,question_5,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_4,question_5,question_5,question_5,question_5,question_5,question_5,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_4,question_5,question_5,question_5,question_5,question_5,question_5,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_4,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_4,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_4,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_4,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_4,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_3,question_3,question_3,question_3,question_3,question_3,question_4,question_4,question_4,question_5,question_6,question_7,question_8,question_9,question_10,question_10,question_10,question_10,question_10,question_10,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_3,question_3,question_3,question_3,question_3,question_3,question_4,question_4,question_4,question_4,question_4,question_5,question_6,question_7,question_8,question_9,question_10,question_10,question_10,question_10,question_10,question_10,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_3,question_3,question_3,question_3,question_3,question_3,question_4,question_4,question_4,question_4,question_4,question_4,question_5,question_6,question_7,question_8,question_9,question_10,question_10,question_10,question_10,question_10,question_10,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_3,question_3,question_3,question_3,question_3,question_3,question_4,question_4,question_4,question_4,question_4,question_4,question_5,question_6,question_7,question_8,question_9,question_10,question_10,question_10,question_10,question_10,question_10,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_3,question_3,question_3,question_3,question_3,question_3,question_4,question_4,question_4,question_4,question_4,question_4,question_5,question_6,question_7,question_8,question_9,question_10,question_10,question_10,question_10,question_10,question_10,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_3,question_3,question_3,question_3,question_3,question_4,question_4,question_4,question_4,question_4,question_4,question_5,question_5,question_5,question_5,question_5,question_5,question_6,question_6,question_6,question_6,question_6,question_6,question_7,question_7,question_7,question_7,question_7,question_7,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_3,question_3,question_3,question_3,question_3,question_4,question_4,question_4,question_4,question_4,question_4,question_5,question_5,question_5,question_5,question_5,question_5,question_6,question_6,question_6,question_6,question_6,question_6,question_7,question_7,question_7,question_7,question_7,question_7,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_3,question_3,question_3,question_3,question_3,question_4,question_4,question_4,question_4,question_4,question_4,question_5,question_5,question_5,question_5,question_5,question_5,question_6,question_6,question_6,question_6,question_6,question_6,question_7,question_7,question_7,question_7,question_7,question_7,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_3,question_3,question_3,question_3,question_3,question_4,question_4,question_4,question_4,question_4,question_4,question_5,question_5,question_5,question_5,question_5,question_5,question_6,question_6,question_6,question_6,question_6,question_6,question_7,question_7,question_7,question_7,question_7,question_7,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_1,question_1,question_1,question_1,question_1,question_1,question_2,question_2,question_2,question_2,question_2,question_2,question_3,question_3,question_3,question_3,question_3,question_3,question_4,question_4,question_4,question_4,question_5,question_5,question_5,question_5,question_5,question_5,question_6,question_6,question_6,question_6,question_6,question_6,question_7,question_7,question_7,question_7,question_7,question_7,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8,question_8
answer_type,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,true_false_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer,free_answer
question,"Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b1 is on block b7?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b2 is being held and block b2 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b6 is on the table and block b7 is on block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b5 is clear and block b5 is on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b5 is on the table and block b5 is on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b3 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b2 is not on block b5, block b6 is not on block b2, block b2 is not on block b3, block b2 is not on block b4, block b2 is not on block b7, block b2 is not being held and block b7 is not on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b6 is not being held, block b1 is not on block b6, block b6 is not on the table, block b2 is not on block b6, block b6 is not clear, block b6 is not on block b7, block b6 is not on block b2, block b4 is not on block b6, block b6 is not on block b1, block b3 is not on block b6, block b6 is not on block b5 and block b5 is not on block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b2 is not on block b4, block b4 is not clear, block b7 is not on block b4, block b3 is not on block b4, block b1 is not on block b4, block b4 is not on block b5, block b4 is not being held and block b4 is not on block b7?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b4 is not clear, block b4 is not on block b2, block b4 is not on block b6, block b4 is not being held, block b3 is not on block b4, block b4 is not on block b5, block b4 is not on block b7, block b1 is not on block b4, block b4 is not on the table, block b2 is not on block b4, block b4 is not on block b3 and block b6 is not on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b4 is not clear, block b2 is not on block b4, block b4 is not on the table, block b4 is not on block b5, block b4 is not on block b3, block b3 is not on block b4, block b4 is not on block b7, block b4 is not on block b1, block b4 is not being held, block b7 is not on block b4, block b4 is not on block b6 and block b4 is not on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b4 is not on the table, block b4 is not clear, block b1 is not on block b4, block b4 is not being held and block b4 is not on block b7?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b2 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b7 is on block b6 and block b7 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b5 is on block b2 and block b5 is on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b3 is clear and block b3 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b5 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b3 is being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b3 is not on block b5, block b5 is not on block b6, block b6 is not on block b5 and block b4 is not on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b2 is not on block b1, block b6 is not on block b2, block b2 is not on block b3, block b2 is not on block b5, block b7 is not on block b2, block b1 is not on block b2 and block b2 is not on block b7?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b2 is not on block b1, block b4 is not on block b1 and block b7 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b3 is not on block b5, block b5 is not on block b3, block b4 is not on block b5, block b5 is not on block b4, block b5 is not on the table, block b2 is not on block b5, block b5 is not on block b6, block b7 is not on block b5, block b5 is not being held, block b5 is not on block b7 and block b5 is not on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b6 is not being held, block b1 is not on block b6, block b6 is not on block b2, block b6 is not on block b7, block b6 is not on block b1, block b4 is not on block b6, block b6 is not on block b4, block b3 is not on block b6, block b6 is not on block b5 and block b6 is not clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b4 is not on block b7, block b2 is not on block b4, block b4 is not on block b3, block b3 is not on block b4 and block b4 is not on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b2 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b5 is on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b3 is on the table and block b3 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b4 is on block b5 and block b5 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b5 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b7 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b6 is not on block b5, block b1 is not on block b6, block b6 is not being held, block b6 is not on block b1, block b4 is not on block b6, block b6 is not on block b7, block b6 is not on block b2, block b3 is not on block b6, block b7 is not on block b6, block b5 is not on block b6, block b6 is not on block b3, block b6 is not on block b4 and block b2 is not on block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b2 is not on block b5, block b5 is not on block b6 and block b1 is not on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b4 is not on block b2, block b2 is not on block b7, block b2 is not on block b4, block b3 is not on block b2, block b6 is not on block b2, block b2 is not on block b6, block b2 is not on block b3, block b2 is not on block b5, block b7 is not on block b2, block b2 is not on block b1 and block b5 is not on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b2 is not on block b1 and block b2 is not on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b6 is not on block b7, block b3 is not on block b6, block b4 is not on block b6 and block b6 is not on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b4 is not on block b1 and block b2 is not on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b7 is on block b4 and block b4 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b7 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b7 is on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b6 is on block b5 and block b2 is on block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b2 is on block b6 and block b2 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b6 is on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b3 is not on block b4, block b5 is not on block b4 and block b4 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b2 is not on block b7, block b3 is not on block b2, block b2 is not clear, block b2 is not on block b3, block b6 is not on block b2, block b2 is not on block b4, block b1 is not on block b2, block b4 is not on block b2, block b2 is not on block b5, block b5 is not on block b2 and block b2 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b3 is not clear, block b5 is not on block b3, block b3 is not on the table, block b3 is not on block b4, block b3 is not on block b2, block b3 is not on block b5, block b7 is not on block b3 and block b2 is not on block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b5 is not on block b7, block b5 is not on block b1, block b5 is not on block b2, block b5 is not on block b6, block b1 is not on block b5, block b2 is not on block b5, block b5 is not on the table, block b5 is not being held, block b7 is not on block b5 and block b5 is not on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b6 is not on block b4, block b6 is not on block b1, block b6 is not on block b7, block b6 is not clear, block b3 is not on block b6, block b6 is not being held, block b6 is not on block b5 and block b1 is not on block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b5 is not on block b7, block b7 is not on block b3, block b7 is not being held, block b7 is not on block b2, block b1 is not on block b7, block b6 is not on block b7, block b2 is not on block b7, block b7 is not on block b1 and block b3 is not on block b7?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b4 is on block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b6 is on block b5 and block b5 is on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b4 is being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b2 is on block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b4 is on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b6 is on block b5 and block b7 is on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b3 is not on block b4, block b3 is not on block b6, block b3 is not on the table, block b4 is not on block b3, block b6 is not on block b3, block b5 is not on block b3, block b3 is not on block b1, block b2 is not on block b3, block b3 is not on block b7, block b1 is not on block b3, block b3 is not on block b5 and block b3 is not clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b6 is not on block b1, block b6 is not on block b4 and block b6 is not on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b1 is not on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b6 is not on block b7, block b6 is not on the table, block b6 is not on block b4, block b6 is not on block b2, block b3 is not on block b6, block b6 is not on block b1 and block b7 is not on block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b5 is not on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b2 is not on block b7, block b4 is not on block b2, block b2 is not on the table, block b2 is not on block b5, block b2 is not on block b3, block b5 is not on block b2 and block b6 is not on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b2 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b4 is on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b6 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b7 is on block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b4 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b3 is on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b6 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b2 is not on block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b7 is not on block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b1 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b3 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b6 is not on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6, block b2 is on the table, block b3 is being held and block b4 is on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is being held, block b3 is on block b4, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6 and block b2 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is on block b4, block b1 is on block b5, block b4 is on block b3, block b1 is on block b4, block b7 is on block b5, block b3 is on block b7, block b2 is clear, block b5 is on block b4, block b7 is clear and block b1 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is on block b3, block b5 is on block b3, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6 and block b2 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is being held, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6, block b2 is on the table and block b3 is being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is on block b7, block b4 is clear, block b7 is on the table, block b2 is on block b6, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear and block b6 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is not on block b1, block b1 is not on the table, block b7 is not clear, block b2 is not clear, block b2 is not on the table, block b3 is not being held, block b7 is not on block b6, block b5 is not clear, block b6 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2 and block b1 is not on block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is not on the table, block b2 is not clear, block b7 is not on block b6, block b1 is not on the table, block b7 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty and block b3 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not clear, block b1 is not on the table, block b2 is not clear, block b2 is not on the table, block b7 is not on block b6, block b3 is not being held, block b7 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear and block b3 is not on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not being held, block b5 is not on block b4, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1 and block b2 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held and block b1 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve b2. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve b5. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve b1. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve b4. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b2. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b7. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b3. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b5 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b5 is on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b7 is on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b7 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b4 is on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b1 is on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b6 is not on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b5 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b6 is not on block b7?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b4 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b6 is not on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b5 is not clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b4 is being held, block b7 is on block b6, block b6 is on the table and block b2 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is on block b6, block b1 is on block b5, block b1 is on block b6, block b2 is on block b3, block b5 is on block b1, block b2 is clear, block b6 is on block b5, block b4 is on block b3, block b5 is on block b6, block b3 is clear and block b3 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on block b6, block b4 is on block b7, block b5 is on block b3, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear and block b4 is being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on block b7, block b1 is on block b4, block b7 is on block b5, block b3 is on block b7, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table and block b5 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is on block b1, block b6 is clear, block b7 is on block b4, block b4 is on block b5, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table and block b5 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is on block b3, block b5 is on the table, block b4 is on the table, block b3 is being held, block b3 is on block b5, block b7 is on block b5, block b4 is on block b3, block b3 is clear, block b3 is on the table, block b1 is clear and block b5 is on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not on block b2, block b5 is not clear, block b2 is not on the table, block b6 is not on the table, block b3 is not clear, block b3 is not on the table, block b7 is not on block b6, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held and hand is not empty?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not clear, block b2 is not on the table, block b6 is not on the table, block b7 is not on block b6, block b5 is not on block b2, block b3 is not on the table, block b1 is not on the table, block b4 is not being held, block b5 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2 and block b1 is not on block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held and block b1 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held and block b1 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is not on the table, block b3 is not on the table, block b7 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4 and block b5 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve b5. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve b1. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve b2. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve b3. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b3. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b7. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b4 is on block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b1 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b1 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b6 is on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b4 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b3 is on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b5 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b2 is not on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b7 is not on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b3 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b2 is not on block b7?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b1 is not on block b7?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b4, block b2 is on the table and block b5 is on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is on block b2, block b7 is on block b2, block b5 is on block b2, block b2 is on block b3, block b2 is being held, block b6 is on block b4, block b1 is on block b4, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table and block b2 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is on block b4, block b3 is on block b5, block b4 is on block b5, block b3 is being held, block b5 is on block b3, block b6 is on block b1, block b6 is on block b7, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table and block b2 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is on block b6, block b1 is on block b4, block b7 is on block b2, block b2 is on block b6, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table and block b5 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is clear, block b6 is on block b2, block b5 is on block b4, block b1 is on block b3, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table and block b5 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is on block b4, block b1 is on block b5, block b2 is on block b1, block b1 is on block b3, block b6 is on block b1, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear and block b1 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: hand is not empty, block b2 is not on the table, block b7 is not clear, block b6 is not on the table, block b6 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1 and block b3 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is not on the table, block b7 is not clear, block b2 is not clear, block b6 is not on the table, hand is not empty, block b1 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3 and block b4 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is not on the table, block b3 is not clear, block b2 is not on the table, block b6 is not on the table, block b7 is not clear, block b6 is not clear, block b5 is not on block b1, block b3 is not on the table, block b4 is not on the table, block b5 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2 and block b4 is not on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is not on the table, block b5 is not on block b1, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held and block b2 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not clear, block b7 is not clear, block b5 is not on block b1, block b1 is not on the table, block b6 is not clear, hand is not empty, block b2 is not clear, block b6 is not on the table, block b2 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5 and block b7 is not on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve b3. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve b2. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve b4. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve b5. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve b1. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b7. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b3. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b7 is on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b1 is on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b5 is on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b4 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b6 is on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b4 is being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b4 is not on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b1 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b6 is not on block b7?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b4 is not on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b5 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b4 is not on block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b7 is on block b4, block b2 is clear, block b3 is being held and block b5 is on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is on block b5, block b5 is being held, block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b7 is on block b4 and block b2 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is clear, block b3 is on block b6, block b7 is on block b5, block b5 is on block b3, block b5 is clear, block b1 is on block b4, block b3 is on block b1, block b4 is on block b7 and block b6 is on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is on block b6, block b4 is on block b7, block b7 is on block b2, block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table and block b7 is on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is on block b4, block b4 is on block b1, block b4 is on block b5, block b4 is on block b7, block b3 is on block b7, block b1 is on block b4, block b5 is clear, block b6 is on block b1 and block b6 is on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is on block b3, block b2 is being held, block b2 is on block b1, block b2 is on block b4, block b4 is on block b5, block b3 is on block b6, block b7 is on block b2, block b6 is on the table and block b6 is on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b4 is not clear, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not on block b1, block b4 is not on the table, block b1 is not on the table, block b2 is not clear, block b3 is not being held, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1 and block b3 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is not on block b4, block b3 is not being held, block b6 is not on block b5, block b1 is not on the table, block b4 is not on the table, block b2 is not clear, block b5 is not on block b1, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty and block b2 is not on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is not on the table, block b2 is not on block b6, block b6 is not on block b5, block b7 is not clear, block b4 is not on the table, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1 and block b3 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is not on block b4, block b6 is not on block b5, block b7 is not clear, block b2 is not on block b6, block b4 is not on the table, block b3 is not being held, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table and block b4 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not on block b1, block b7 is not on block b4, block b6 is not on block b5, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4 and block b4 is not clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve b5. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve b4. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve b3. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve b2. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve b1. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b2. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b3. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b2 is being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b3 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b7 is on block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b4 is on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b4 is being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b5 is on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b5 is not on block b7?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b7 is not clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b7 is not on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b6 is not on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b2 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b4 is not on block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b4 is being held, block b7 is on block b3 and block b5 is on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on block b5, block b4 is on the table, block b4 is on block b6, block b1 is being held, block b2 is on block b4, block b2 is on the table, block b1 is on block b5 and block b3 is on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is on block b1, block b5 is on block b2, block b1 is on block b5, block b5 is on block b3, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6 and block b7 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is on block b4, block b5 is on the table, block b1 is on block b7, block b4 is on block b6, block b2 is on block b1, block b1 is being held, block b3 is on block b2 and block b6 is on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is on the table, block b5 is on block b6, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table and block b4 is being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on block b1, block b4 is on block b2, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table and block b4 is being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is not being held, block b5 is not on block b1, block b3 is not on block b2, block b6 is not on block b5, block b2 is not on block b6, block b1 is not on the table, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table and block b4 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is not being held, block b7 is not clear, block b6 is not on block b5, block b2 is not on block b6, block b3 is not on block b2, block b7 is not on block b3, block b5 is not on block b1, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty and block b2 is not on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is not being held, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held and block b1 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is not on the table, block b4 is not being held, block b2 is not on block b6, block b6 is not on block b5, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1 and block b1 is not on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is not clear, block b5 is not on block b1, block b4 is not being held, block b2 is not on block b6, block b6 is not on block b5, block b3 is not on block b2, block b7 is not on block b3, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty and block b2 is not on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve b4. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve b3. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve b1. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve b2. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b2. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b7. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b1 is being held, block b7 is on block b4, block b3 is on block b6, block b1 is on block b5, block b3 is on block b2, block b6 is being held, block b7 is on block b1, block b2 is clear, block b5 is on block b4 and block b7 is clear, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b6 is on block b1, block b2 is on block b1, block b3 is on block b4, block b3 is on block b1, block b3 is on block b7, block b6 is on block b5, block b1 is on block b5, block b4 is on block b5, block b7 is on block b1 and block b2 is clear, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b5 is on block b2, block b5 is on block b3, block b1 is clear, block b3 is on block b4, block b4 is on the table, block b2 is on block b1, block b7 is being held, block b3 is clear, block b4 is clear and block b2 is clear, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6, block b2 is on the table, block b3 is being held and block b4 is on block b1, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b6 is on block b4, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6, block b2 is on the table and block b3 is being held, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b6 is on block b4, hand is empty, block b4 is on block b3, block b2 is on block b7, block b6 is on block b2, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table and block b5 is clear, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b2 is not clear, block b6 is not on the table, block b4 is not on block b1, block b5 is not on block b4, block b1 is not on the table, block b7 is not on block b6, block b7 is not clear, block b2 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3 and block b3 is not clear, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b5 is not on block b4, block b6 is not on the table, block b5 is not clear, block b2 is not clear, block b4 is not on block b1, block b1 is not on the table, block b3 is not being held, block b7 is not on block b6, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3 and block b3 is not clear, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b3 is not being held, block b2 is not on the table, block b7 is not on block b6, block b5 is not clear, block b7 is not clear, block b5 is not on block b4, block b6 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear and block b3 is not on the table, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b6 is not on the table, block b4 is not on block b1, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1 and block b2 is not being held, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b5 is not clear, block b4 is not on block b1, block b1 is not on the table, block b7 is not on block b6, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1 and block b1 is not on block b4, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b6 is being held, block b1 is on block b3, block b7 is on block b1, block b5 is on block b4, block b5 is on block b6, block b5 is on block b3, block b2 is clear, block b7 is on the table, block b3 is clear, block b3 is on the table and block b1 is clear, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b4 is being held, block b7 is on block b6, block b6 is on the table and block b2 is on the table, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b4 is on the table, block b6 is on block b2, block b1 is on block b2, block b4 is on block b5, block b5 is on the table, block b3 is being held, block b7 is on the table, block b7 is on block b4, block b4 is clear, block b5 is on block b4 and block b3 is clear, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b7 is on block b2, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b4 is being held, block b7 is on block b6 and block b6 is on the table, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b5 is on block b6, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b4 is being held, block b7 is on block b6 and block b6 is on the table, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b1 is on block b6, block b4 is on block b5, block b6 is on block b5, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear and block b4 is being held, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b3 is not on the table, block b3 is not clear, block b6 is not on the table, block b2 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1 and block b1 is not on block b4, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b3 is not on the table, block b2 is not on the table, block b5 is not clear, block b1 is not clear, block b3 is not clear, block b5 is not on block b2, block b4 is not being held, block b7 is not on block b6, block b6 is not on the table, block b7 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table and block b6 is not on block b2, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b6 is not on the table, block b3 is not clear, block b4 is not being held, block b5 is not clear, block b5 is not on block b2, block b2 is not on the table, block b1 is not clear, block b7 is not clear, block b3 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2 and block b1 is not on block b3, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b2 is not on the table, block b5 is not on block b2, block b1 is not on the table, block b3 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1 and block b1 is not on block b4, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b5 is not clear, block b5 is not on block b2, block b3 is not clear, block b2 is not on the table, block b7 is not on block b6, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1 and block b3 is not on block b1, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b4 is on block b2, block b6 is on block b5, block b5 is on block b6, block b7 is on the table, block b7 is on block b6, block b5 is on block b7, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear and block b7 is clear, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b4, block b2 is on the table and block b5 is on block b1, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b3 is on block b2, block b3 is being held, block b4 is on block b1, block b1 is on block b3, block b6 is on block b4, block b2 is being held, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear and block b7 is clear, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b2 is on block b7, block b7 is on block b5, block b3 is on block b6, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table, block b5 is clear and block b6 is on the table, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b5 is on the table, block b6 is on block b5, block b1 is being held, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table, block b5 is clear and block b6 is on the table, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b7 is on block b3, block b4 is being held, block b5 is on block b3, block b5 is on the table, block b3 is on block b1, block b7 is on the table, block b2 is on block b7, block b7 is on block b2, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty and block b3 is on the table, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b6 is not clear, hand is not empty, block b7 is not clear, block b2 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1 and block b1 is not on block b4, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b4 is not on the table, block b6 is not on the table, block b5 is not clear, block b5 is not on block b1, hand is not empty, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1 and block b3 is not on block b1, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b3 is not clear, block b2 is not on the table, hand is not empty, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4 and block b3 is not being held, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b5 is not on block b1, block b7 is not clear, block b2 is not on the table, block b6 is not clear, block b4 is not on the table, hand is not empty, block b3 is not on the table, block b3 is not clear, block b5 is not clear, block b2 is not clear, block b6 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5 and block b1 is not on block b2, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b1 is not on the table, block b6 is not on the table, block b7 is not clear, block b5 is not clear, block b5 is not on block b1, block b2 is not clear, block b4 is not on the table, block b7 is not on block b4, block b6 is not clear, block b3 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2 and block b4 is not on block b5, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b7 is on block b4, block b2 is clear, block b3 is being held and block b5 is on block b1, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b6 is on block b4, block b4 is on block b6, block b5 is on block b3, block b6 is on block b1, block b2 is on block b1, hand is empty, block b2 is being held, block b6 is on block b5 and block b4 is on the table, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b2 is on the table, block b7 is on block b1, block b1 is on block b5, block b6 is on block b2, block b5 is on block b3, block b6 is on block b5, block b4 is on the table, block b2 is on block b6 and block b7 is clear, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b5 is clear, block b4 is on block b6, block b2 is being held, block b2 is on block b5, block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear and block b1 is on the table, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b1 is being held, block b6 is being held, block b4 is on block b7, block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table and block b7 is on block b4, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b5 is clear, block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b7 is on block b4, block b2 is clear and block b3 is being held, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b1 is not on the table, block b2 is not clear, block b3 is not being held, block b7 is not on block b4, block b4 is not on the table, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1 and block b3 is not on block b1, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b4 is not clear, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b5 is not on block b1, block b7 is not on block b4, block b2 is not clear, block b4 is not on the table, block b2 is not on block b6, block b7 is not clear, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table and block b4 is not on block b1, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b2 is not on block b6, block b7 is not on block b4, block b4 is not on the table, block b3 is not being held, block b2 is not clear, block b1 is not on the table, block b5 is not on block b1, block b7 is not clear, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table and hand is not empty, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b2 is not clear, block b5 is not on block b1, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b4 is not clear and block b2 is not being held, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b5 is not on block b1, block b7 is not on block b4, block b3 is not being held, block b2 is not on block b6, block b7 is not clear, block b2 is not clear, block b6 is not on block b5, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty and block b2 is not on the table, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b7 is on the table, block b3 is on block b1, block b1 is on block b3, block b4 is on block b1, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6 and block b7 is clear, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b4 is on block b2, block b5 is on block b2, hand is empty, block b2 is on the table, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6 and block b7 is clear, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b2 is on block b4, block b1 is on block b5, block b6 is on block b7, block b6 is on block b3, block b4 is on block b1, block b3 is on block b2, block b6 is on block b5 and block b2 is on block b6, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b4 is being held, block b7 is on block b3 and block b5 is on block b1, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b5 is clear, block b7 is on the table, block b3 is clear, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear and block b1 is on the table, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b7 is on the table, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b4 is being held and block b7 is on block b3, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b3 is not on block b2, block b4 is not being held, block b5 is not on block b1, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4 and block b3 is not being held, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b1 is not on the table, block b2 is not on block b6, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held and block b2 is not being held, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b7 is not clear, block b6 is not on block b5, block b7 is not on block b3, block b4 is not being held, block b2 is not on block b6, block b5 is not on block b1, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table and block b4 is not on block b1, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b7 is not on block b3, block b6 is not on block b5, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held and block b2 is not being held, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b3 is not on block b2, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held and block b1 is not being held, correct? Respond with True or False.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b6 is stacked on top block b3. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b2 is stacked on top block b4. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b1 is stacked on top block b4. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b7 is stacked on top block b1. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b7 is unstacked from block b4. Is it possible to execute it, True or False?","Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: block b3 is unstacked from block b7. Is the action: block b3 is unstacked from block b7 executable at step 1, True or False?","Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: block b7 is picked up. Is the action: block b7 is picked up executable at step 1, True or False?","Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: block b4 is unstacked from block b7. Is the action: block b4 is unstacked from block b7 executable at step 1, True or False?","Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: block b4 is stacked on top block b3. Is the action: block b4 is stacked on top block b3 executable at step 1, True or False?","Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: block b3 is picked up. Is the action: block b3 is picked up executable at step 1, True or False?","Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: block b6 is unstacked from block b4. Is the action: block b6 is unstacked from block b4 executable at step 1, True or False?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all executable actions. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.","Given the initial condition, the following actions are performed: block b2 is unstacked from block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b4 is unstacked from block b5 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b2 is stacked on top block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b5 is stacked on top block b7 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b7 is unstacked from block b6 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b1 is stacked on top block b5 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b6 is stacked on top block b1 and block b4 is unstacked from block b1. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b5 is picked up, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b3 is unstacked from block b2, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b4 is stacked on top block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b4 is stacked on top block b1, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is it possible to execute it, True or False?","Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is the action: block b5 is stacked on top block b2 executable at step 4, True or False?","Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b1 is stacked on top block b5, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is the action: block b1 is stacked on top block b5 executable at step 3, True or False?","Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b3 is unstacked from block b7, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is the action: block b3 is unstacked from block b7 executable at step 3, True or False?","Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b2 is unstacked from block b6 and block b4 is unstacked from block b1. Is the action: block b2 is unstacked from block b6 executable at step 4, True or False?","Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is the action: block b3 is put down executable at step 2, True or False?","Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: block b7 is unstacked from block b6, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is the action: block b7 is unstacked from block b6 executable at step 1, True or False?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all executable actions. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b4 is stacked on top block b2, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b1 is stacked on top block b5, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b2 is unstacked from block b5 and block b4 is unstacked from block b1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b2 is stacked on top block b3 and block b4 is unstacked from block b1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b5 is stacked on top block b3, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b3 is unstacked from block b1 and block b7 is stacked on top block b4. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b7 is unstacked from block b6, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b2 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b6 is stacked on top block b5, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is it possible to execute it, True or False?","Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is the action: block b3 is unstacked from block b7 executable at step 1, True or False?","Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b1 is unstacked from block b7, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is the action: block b1 is unstacked from block b7 executable at step 7, True or False?","Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is the action: block b4 is put down executable at step 6, True or False?","Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b2 is unstacked from block b6, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is the action: block b2 is unstacked from block b6 executable at step 5, True or False?","Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: block b3 is unstacked from block b7, block b2 is unstacked from block b7, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is the action: block b2 is unstacked from block b7 executable at step 2, True or False?","Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b6 is unstacked from block b3 and block b7 is stacked on top block b4. Is the action: block b6 is unstacked from block b3 executable at step 9, True or False?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all executable actions. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b1 is picked up, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b5 is put down and block b7 is stacked on top block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b2 is unstacked from block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b5 is stacked on top block b3, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b7 is stacked on top block b6, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b5 is stacked on top block b7, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is unstacked from block b2, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b1 is stacked on top block b3, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is unstacked from block b1. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b1 is unstacked from block b7, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is it possible to execute it, True or False?","Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is the action: block b7 is unstacked from block b6 executable at step 9, True or False?","Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b6 is unstacked from block b2. Is the action: block b6 is unstacked from block b2 executable at step 15, True or False?","Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: block b3 is unstacked from block b2, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is the action: block b3 is unstacked from block b2 executable at step 1, True or False?","Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b2 is stacked on top block b5, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is the action: block b2 is stacked on top block b5 executable at step 9, True or False?","Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is the action: block b6 is picked up executable at step 11, True or False?","Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is picked up, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is the action: block b5 is picked up executable at step 7, True or False?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all executable actions. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all inexecutable actions. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b4 is stacked on top block b7 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b7, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b1 is unstacked from block b6, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b7 is stacked on top block b6 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b1 is put down, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b1 is unstacked from block b5, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b4 is unstacked from block b1, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b6 is stacked on top block b1. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b2 is unstacked from block b3, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is it possible to execute it, True or False?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is unstacked from block b3. Is it possible to execute it, True or False?","Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is the action: block b6 is picked up executable at step 11, True or False?","Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is the action: block b3 is stacked on top block b2 executable at step 16, True or False?","Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b3 is unstacked from block b5, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is the action: block b3 is unstacked from block b5 executable at step 8, True or False?","Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b2 is put down, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is the action: block b2 is put down executable at step 8, True or False?","Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b3 is stacked on top block b6, block b7 is stacked on top block b3 and block b4 is picked up. Is the action: block b3 is stacked on top block b6 executable at step 17, True or False?","Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b3 is put down, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is the action: block b3 is put down executable at step 10, True or False?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all executable actions. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all inexecutable actions. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b3 is stacked on top block b4, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b2 is unstacked from block b1, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b5 is unstacked from block b4, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b1 is put down, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b7 is unstacked from block b1, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that hand is empty, block b3 is clear, block b3 is on the table and block b3 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that hand is empty, block b3 is on the table, block b3 is not being held and block b3 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b3 is not being held, hand is empty, block b3 is on the table and block b3 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b3 is on the table, hand is empty, block b3 is not being held and block b3 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b3 is clear, hand is empty, block b3 is on the table and block b3 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b3 is not being held, block b3 is clear, hand is empty and block b3 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b3 is clear, block b2 is not on block b3, block b1 is not on block b2 and block b7 is on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b7 is not being held, block b1 is not on block b6, hand is empty and block b3 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b3 is not being held, block b7 is clear, hand is empty and block b3 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b3 is clear, block b5 is being held, hand is empty and block b7 is not on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that hand is empty, block b3 is clear, block b3 is being held and block b3 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b3 is clear, hand is empty, block b1 is not on block b6 and block b3 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, what would be all of the valid properties of the state? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, what would be all of the valid properties of the state that involve negations? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that hand is empty, block b4 is not being held, block b4 is on the table and block b4 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b4 is not being held, block b4 is clear, hand is empty and block b4 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b4 is on the table, hand is empty, block b4 is not being held and block b4 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b4 is clear, block b4 is not being held, hand is empty and block b4 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b4 is not being held, hand is empty, block b4 is clear and block b4 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b4 is clear, hand is empty, block b4 is not being held and block b4 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b3 is on block b2, hand is empty, block b4 is not being held and block b5 is not on block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b5 is not being held, block b4 is not being held, block b4 is not clear and block b7 is on block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b4 is not being held, block b7 is not on block b3, block b5 is not on the table and hand is empty?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b2 is not on block b6, hand is empty, block b4 is not being held and block b5 is not on block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b5 is not being held, hand is empty, block b4 is not being held and block b6 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b5 is clear, block b4 is not being held, hand is empty and block b4 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, what would be all of the valid properties of the state? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, what would be all of the valid properties of the state that involve negations? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that hand is not empty, block b6 is not on the table, block b6 is being held and block b6 is not clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b6 is not on the table, block b6 is not clear, hand is not empty and block b6 is being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b6 is not on the table, hand is not empty, block b6 is being held and block b6 is not clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that hand is not empty, block b6 is being held, block b6 is not clear and block b6 is not on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b6 is being held, hand is not empty, block b6 is not clear and block b6 is not on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b6 is not on the table, block b6 is being held, block b6 is not clear and hand is not empty?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b5 is not being held, block b6 is not on the table, block b6 is being held and block b7 is not on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b6 is on block b5, block b6 is not on the table, block b6 is being held and block b5 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b6 is being held, block b3 is on block b2, block b4 is not clear and block b1 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b3 is not clear, block b6 is being held, block b3 is on block b2 and block b2 is not on block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b2 is not being held, block b4 is not on block b7, block b6 is being held and block b2 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b6 is being held, block b5 is not being held, block b4 is on the table and block b7 is not on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, what would be all of the valid properties of the state? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, what would be all of the valid properties of the state that involve negations? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b3 is clear, hand is empty, block b3 is on block b2, block b3 is not being held and block b2 is not clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b3 is not being held, hand is empty, block b2 is not clear, block b3 is clear and block b3 is on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b2 is not clear, block b3 is not being held, block b3 is clear, block b3 is on block b2 and hand is empty?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b2 is not clear, hand is empty, block b3 is on block b2, block b3 is clear and block b3 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b2 is not clear, hand is empty, block b3 is clear, block b3 is on block b2 and block b3 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b3 is on block b2, block b2 is not clear, block b3 is clear, block b3 is not being held and hand is empty?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b3 is clear, block b3 is not being held, hand is empty, block b3 is on block b2 and block b1 is not on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b6 is on block b5, block b2 is not on block b5, hand is empty, block b3 is on block b2 and block b4 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b6 is not being held, block b4 is not on the table, block b5 is on block b1, hand is empty and block b2 is not on block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that hand is empty, block b5 is not on block b1, block b4 is clear, block b3 is on block b2 and block b1 is not on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b6 is not on the table, block b7 is not on block b5, block b2 is not on block b7, hand is empty and block b4 is not on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b5 is on block b2, hand is empty, block b1 is on the table, block b4 is not on block b3 and block b5 is not on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, what would be all of the valid properties of the state? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, what would be all of the valid properties of the state that involve negations? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b4 is on block b7, block b4 is clear, block b7 is not clear, hand is empty and block b4 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that hand is empty, block b7 is not clear, block b4 is on block b7, block b4 is not being held and block b4 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b4 is not being held, block b4 is on block b7, hand is empty, block b7 is not clear and block b4 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b4 is on block b7, block b4 is clear, block b4 is not being held, block b7 is not clear and hand is empty?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that hand is empty, block b4 is on block b7, block b4 is not being held, block b4 is clear and block b7 is not clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b4 is not being held, block b4 is on block b7, block b4 is clear, block b7 is not clear and hand is empty?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b6 is not on block b1, hand is empty, block b2 is not being held, block b7 is not clear and block b4 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b7 is not clear, block b3 is not on block b5, block b2 is not on block b4, block b3 is not on block b1 and block b6 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b6 is not on block b4, block b1 is not clear, block b7 is not on block b1, block b7 is not clear and block b5 is not on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b7 is not clear, block b6 is not on block b5, hand is empty, block b4 is not being held and block b4 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b4 is not on block b7, block b5 is not on block b3, block b6 is not on block b7, block b7 is not clear and block b1 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that hand is empty, block b4 is clear, block b2 is on the table, block b4 is not being held and block b7 is not clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, what would be all of the valid properties of the state? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, what would be all of the valid properties of the state that involve negations? Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of objects equal to 5? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of objects equal to 7? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of objects equal to 9? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of objects equal to 8? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of objects equal to 6? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of executable actions equal to 5? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of executable actions equal to 4? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of executable actions equal to 3? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 94? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 93? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 109? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 97? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 76? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 84? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 0?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b1 is stacked on top block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b7 is unstacked from block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b5 is unstacked from block b6 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b4 is stacked on top block b7 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b2 is unstacked from block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b5 is stacked on top block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of objects equal to 7? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of objects equal to 5? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of objects equal to 8? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of objects equal to 6? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of objects equal to 9? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of executable actions equal to 7? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of executable actions equal to 4? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of executable actions equal to 6? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of executable actions equal to 5? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of executable actions equal to 3? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 93? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 77? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 90? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 96? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 89? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 109? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 7?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b7 is stacked on top block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b6 is stacked on top block b3 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b7 is stacked on top block b5 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b6, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b5, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b4 is unstacked from block b5, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of objects equal to 5? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of objects equal to 9? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of objects equal to 7? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of objects equal to 8? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of objects equal to 6? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of executable actions equal to 5? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of executable actions equal to 4? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of executable actions equal to 6? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of executable actions equal to 3? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of executable actions equal to 7? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 93? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 77? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 89? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 86? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 108? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 101? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 10?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 12?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 11?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 9?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 8?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 13?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b3 is put down, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b1 is stacked on top block b5, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b1 is picked up, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b2 is unstacked from block b4, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b3 is unstacked from block b4, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b6 is stacked on top block b7, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of objects equal to 9? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of objects equal to 7? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of objects equal to 8? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of objects equal to 6? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of objects equal to 5? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of executable actions equal to 2? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of executable actions equal to 3? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of executable actions equal to 4? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 103? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 85? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 96? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 95? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 97? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 78? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 11?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 17?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 12?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 16?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b3 is stacked on top block b7, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is unstacked from block b4 and block b3 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b1 is stacked on top block b3, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b2 is put down, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b4 is stacked on top block b7, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b4 is put down, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of objects equal to 7? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of objects equal to 8? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of objects equal to 5? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of objects equal to 9? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of objects equal to 6? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of executable actions equal to 1? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of executable actions equal to 2? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of executable actions equal to 3? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 96? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 116? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 108? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 112? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 93? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 94? True or False","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 23?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 20?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 22?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 17?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b1 is unstacked from block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b7 is stacked on top block b2, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b2 is stacked on top block b4, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b1 is unstacked from block b5, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b6 is unstacked from block b7, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b6, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b1 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b2 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b5 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is being thrown?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is under the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is under block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is on block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not under block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not under block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not under block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is not under block b7?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not on block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not on block b1?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is crashed from block b7, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is stacked on top block b2, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is lowered, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is stacked on top block b5, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is put down, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is stacked on top block b7, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b6 is crashed from block b2, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b5 is stacked on top block b7, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b2 is crashed from block b4, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b2 is crashed from block b1, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b7 is stacked on top block b4, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b2 is crashed from block b5, is defined?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b2, b6, b5 and b4, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b2, b3, b6, b4 and b1, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b2, b7, b1 and b8, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b3, b6, b4, b2 and b7, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b7, b6, b3, b5, b4 and b2, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b4, b8 and b3, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b6 is on the table, block b2 is on the table, block b3 is being held, block b1 is on the table, block b2 is clear, block b5 is on block b4, block b7 is on block b6, block b5 is clear, block b7 is clear and block b4 is on block b1, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is being held and block b5 is under block b4, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b6 is on the table, block b5 is under block b4, block b2 is on the table, block b5 is clear, block b7 is clear, block b7 is on block b6 and block b1 is on the table, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b4 is on block b1 and block b2 is on the table, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b4 is on block b1, block b1 is under the table, block b7 is on block b6, block b2 is on the table, block b5 is clear and block b6 is on the table, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is being held, block b7 is lost, block b4 is on block b1, block b5 is clear, block b1 is on the table, block b6 is on the table and block b5 is on block b4, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not clear, block b7 is not being held, block b1 is not on block b3, block b1 is not on block b6, block b2 is not being held, block b2 is not on block b7, block b4 is not on block b5, block b6 is not clear, block b4 is not on block b7, block b4 is not on block b3, block b2 is not on block b4, block b7 is not on block b3, block b2 is not on block b5, block b1 is not on block b7, hand is not empty, block b1 is not on block b2, block b2 is not on block b3, block b3 is not on block b1, block b5 is not being held, block b6 is not on block b1, block b3 is not on block b7, block b7 is not on block b2, block b7 is not on block b4, block b6 is not on block b5, block b5 is not on block b3, block b6 is not on block b2, block b6 is not on block b4, block b6 is not on block b7, block b5 is not on block b7, block b3 is not on block b5 and block b3 is not on the table, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, hand is not empty, block b6 is not on block b4, block b1 is not clear, block b6 is not on block b1, block b3 is not on block b7, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b5, block b7 is not on the table, block b1 is not on block b5, block b5 is not on block b6, block b2 is not on block b1, block b4 is not on block b5, block b1 is not on block b2, block b6 is not clear, block b5 is not on block b3, block b3 is not clear, block b2 is not on block b4, block b4 is not on block b2, block b7 is not on block b2, block b7 is not on block b3, block b6 is not on block b7, block b2 is not on block b7, block b1 is not on block b6, block b1 is not on block b7, block b2 is not on block b5, block b6 is not on block b2, block b5 is not on block b2, block b4 is not clear, block b4 is not being held, block b7 is not on block b5, block b3 is not on the table, block b5 is not being held, block b4 is not on block b3, block b7 is not being held, block b7 is not on block b1, block b3 is not on block b1, block b1 is not on block b3 and block b4 is not on block b7, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b1 is not being held, block b2 is not on block b1, block b5 is not on block b1, block b2 is not being held, block b1 is not on block b5, block b3 is not on block b6, block b4 is not on block b3, block b2 is not on block b4, block b6 is not on block b1, block b4 is not on block b5, block b2 is not under block b6, block b2 is not on block b5, block b6 is not on block b2 and block b7 is not on block b1, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b7 is not on block b2, block b7 is not on the table and hand is not empty, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on block b6, block b1 is not on block b4, block b6 is not on block b2, block b1 is not on block b2, block b2 is not on block b3, block b7 is not on block b3, block b3 is not on block b2, block b7 is not on block b1, block b1 is not being held, block b3 is not on block b6, block b7 is not on block b2, block b4 is not clear, block b2 is not on block b6, block b4 is not being held, block b3 is not on block b1, block b7 is not on the table, block b6 is not on block b1, hand is not empty, block b7 is not being held, block b5 is not on block b1, block b3 is not on block b4, block b1 is not on block b6, block b5 is not on block b3, block b1 is not on block b7, block b4 is not on block b7, block b4 is not on block b3, block b6 is not on block b3, block b7 is not on block b5, block b2 is not on block b7, block b3 is not on block b5, block b3 is not on the table, block b6 is not clear, block b6 is not on block b7, block b4 is not on block b5, block b6 is not on block b4, block b2 is not on block b1, block b4 is not on block b6, block b1 is not clear, block b5 is not on the table, block b3 is not on block b7, block b5 is not under block b7, block b1 is not on block b3, block b1 is not on block b5, block b6 is not being held, block b7 is not on block b4, block b4 is not on block b2, block b2 is not being held, block b3 is not clear and block b2 is not on block b4, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on block b2, block b6 is not on block b2, block b4 is not under block b6, block b4 is not on block b5, block b2 is not being held, block b1 is not clear, block b7 is not on block b2, hand is not empty, block b2 is not on block b1, block b4 is not on block b2, block b4 is not on block b3, block b1 is not on block b2, block b5 is not on block b1, block b6 is not on block b7, block b7 is not on block b4, block b4 is not being held, block b6 is not on block b3, block b2 is not on block b3, block b7 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b3, block b5 is not on block b6, block b2 is not on block b4, block b6 is not on block b5, block b3 is not clear and block b7 is not on block b3, is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is removed from from block b7 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b7 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b5 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b1 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is lost?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is under block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is not under block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that hand is not empty?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not under the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not under block b7?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not on block b1?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is crashed from block b7, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is stacked on top block b7, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is stacked on top block b1, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is put down, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is crashed from block b1, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is crashed from block b3, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b3 is unstacked from block b5, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b6 is picked up, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b1 is lowered, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b4 is stacked on top block b6, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b2 is lowered, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b1 is unstacked from block b2, is defined?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b3, b6 and b2, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b5, b8 and b4, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b6 and b3, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b7, b3, b1, b5, b4 and b6, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b4, b5, b1, b3 and b2, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b4, b6, b8, b2 and b7, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b4 is being held, block b7 is on block b6, block b5 is clear, block b1 is on the table, block b3 is on the table, block b6 is under the table, block b1 is clear, block b7 is clear, block b2 is on the table, block b3 is clear and block b5 is on block b2, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is on block b6, block b3 is clear, block b3 is on the table, block b6 is on the table, block b1 is clear and block b2 is on the table, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b6 is on the table, block b5 is on block b2, block b1 is clear, block b5 is clear, block b3 is under the table, block b2 is on the table, block b7 is clear, block b3 is clear and block b1 is on the table, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is on block b2, block b7 is on block b6, block b3 is clear, block b2 is on the table, block b1 is clear, block b6 is on the table, block b1 is on the table, block b7 is clear, block b5 is lost and block b3 is on the table, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b2 is on the table, block b1 is clear, block b7 is clear, block b3 is clear, block b4 is being held, block b7 is on block b6 and block b1 is on the table, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is on block b6 and block b5 is lost, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not under block b7, block b5 is not on block b7, block b1 is not on block b4, block b6 is not being held, block b1 is not on block b7, block b3 is not on block b1, block b7 is not on block b4, block b5 is not on block b1, block b4 is not on block b1, block b1 is not on block b5, block b6 is not on block b5, block b5 is not being held, hand is not empty and block b2 is not on block b5, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b2 is not being held, block b4 is not on block b7, block b3 is not on block b2, block b2 is not clear, block b3 is not being thrown, block b7 is not on the table, hand is not empty, block b7 is not on block b2, block b5 is not on block b4, block b4 is not on block b6, block b1 is not on block b7, block b7 is not on block b4, block b5 is not on block b1, block b1 is not on block b6, block b2 is not on block b1, block b2 is not on block b5, block b4 is not on block b2, block b3 is not on block b7, block b5 is not on block b3, block b3 is not on block b1, block b2 is not on block b4, block b6 is not on block b7, block b4 is not clear, block b4 is not on block b1, block b3 is not on block b4, block b7 is not on block b5, block b5 is not on the table, block b6 is not being held, block b7 is not on block b3, block b5 is not being held, block b2 is not on block b3, block b1 is not on block b5, block b6 is not on block b3, block b6 is not on block b1, block b2 is not on block b7, block b4 is not on block b5, block b5 is not on block b7, block b6 is not on block b4 and block b6 is not on block b2, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on block b3, block b5 is not being held, block b7 is not on block b3, block b7 is not on the table, block b3 is not being held, block b3 is not on block b6, block b5 is not on block b4, block b7 is not on block b2, block b7 is not on block b1, block b1 is not on block b5, block b1 is not on block b6, block b2 is not on block b5, block b6 is not on block b1, block b5 is not on block b7, block b4 is not on block b6, block b6 is not being held, block b7 is not on block b4, block b5 is not on block b1, block b4 is not on block b5, block b5 is not on block b6, block b4 is not on block b2, block b4 is not on block b7, block b2 is not on block b4, block b7 is not being held, block b3 is not on block b1, block b6 is not on block b4 and block b4 is not on the table, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b1 is not on block b4, block b5 is not being held, block b1 is not on block b5, block b7 is not on the table, block b6 is not on block b1, block b4 is not on block b3, block b1 is not on block b7, block b4 is not under block b5, block b7 is not on block b4, block b3 is not on block b2 and block b5 is not on block b7, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not being held, block b6 is not on block b7, block b5 is not on block b3, block b4 is not on block b1, block b4 is not on block b3, block b7 is not on block b2, block b7 is not on block b1, block b5 is not being held, block b4 is not on the table, block b2 is not clear, block b5 is not on block b1, block b2 is not on block b1, block b2 is not on block b3, block b1 is not being held, block b1 is not on block b7, block b3 is not on block b5, block b2 is not on block b5, block b1 is not on block b3, block b7 is not being held, block b4 is not clear, block b4 is not on block b2, block b3 is not on block b2, block b3 is not on block b4, block b3 is not on block b7, hand is not empty, block b6 is not on block b5, block b4 is not on block b6 and block b5 is not on block b6, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on block b7, block b6 is not on block b7, block b1 is not on block b3, block b1 is not on block b7, block b6 is not being held, block b2 is not on block b7, hand is not empty, block b1 is not on block b2, block b7 is not on the table, block b6 is not on block b3, block b7 is not on block b5, block b2 is not on block b6, block b4 is not on block b3, block b3 is not on block b5, block b3 is not on block b6, block b7 is not on block b1, block b1 is not on block b6, block b3 is not being held, block b7 is not on block b3, block b5 is not on block b1, block b6 is not clear, block b6 is not on block b2 and block b7 is not on block b4, is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is lowered, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is removed from from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is crashed from block b2 and block b4 is unstacked from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is removed from from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is removed from from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b1 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b2 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b7 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b5 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b3 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is under the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is lost?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that hand is broken?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is not on block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not under block b4?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is not under block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not on block b2?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b2 is lifted, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b6 is picked up, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b6 is lifted, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is lifted, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b2 is picked up, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is picked up, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b3 is unstacked from block b4, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b2 is stacked on top block b7, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b6 is unstacked from block b3, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b3 is stacked on top block b5, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b6 is stacked on top block b7, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b6 is lowered, is defined?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b2, b5, b4 and b6, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b4, b6 and b5, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b4, b5, b6 and b2, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b3, b2, b1, b7 and b4, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b6, b7, b8, b2 and b1, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b2, b4, b7, b6, b3 and b1, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b2 is clear, block b3 is clear, block b6 is under the table, block b4 is on the table, block b7 is clear, block b2 is on the table, block b1 is on the table, block b5 is clear, block b5 is on block b1, hand is empty, block b3 is on the table and block b6 is clear, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b2 is on the table, block b2 is lost, block b3 is on the table, block b1 is on the table, block b5 is on block b1, block b6 is clear and block b7 is on block b4, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b2 is clear, block b2 is on the table and block b5 is clear, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is clear, block b3 is on the table, block b2 is lost, block b5 is clear, block b4 is on the table, block b6 is clear, block b7 is on block b4, block b2 is on the table and block b5 is on block b1, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is on the table, block b5 is clear, block b4 is under the table, hand is empty, block b2 is on the table, block b6 is clear, block b3 is on the table, block b7 is on block b4 and block b6 is on the table, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is clear, block b5 is on block b1, block b7 is clear, block b2 is under the table, block b1 is on the table, hand is empty and block b6 is clear, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b2 is not on block b7 and block b3 is not on block b7, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not on block b4, block b6 is not on block b3, block b5 is not on block b7, block b7 is not on block b1, block b4 is not on block b2, block b1 is not on block b4, block b4 is not on block b5, block b4 is not being held, block b6 is not on block b4, block b5 is not on block b6, block b7 is not on block b2, block b2 is not on block b3, block b6 is not on block b5, block b2 is not on block b7, block b5 is not on block b3, block b1 is not being held, block b4 is not on block b6, block b2 is not on block b5, block b6 is not on block b7, block b4 is not clear, block b6 is not being held, block b3 is not being held, block b6 is not on block b1, block b7 is not being held, block b3 is not on block b6, block b7 is not on block b5, block b3 is not on block b2, block b1 is not on block b3, block b5 is not being held, block b3 is not on block b5, block b1 is not clear, block b1 is not on block b2, block b7 is not on block b3, block b4 is not on block b7, block b4 is not on block b3, block b3 is not on block b7, block b5 is not on block b2, block b7 is not on the table, block b3 is not on block b1, block b2 is not being held, block b2 is not on block b6, block b6 is not on block b2, block b4 is not on block b1, block b5 is not on block b4 and block b2 is not on block b1, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on block b3, block b3 is not on block b5, block b2 is not on block b1, block b1 is not on block b3, block b7 is not on block b2, block b6 is not on block b1, block b7 is not on block b1, block b7 is not on block b5, block b7 is not being held, block b1 is not on block b7, block b5 is not on block b2, block b3 is not on block b6, block b3 is not on block b1, block b2 is not being held, block b4 is not being held, block b1 is not on block b2, block b1 is not clear, block b4 is not on block b1, block b2 is not on block b7, block b6 is not on block b7, block b3 is not on block b7, block b2 is not on block b6, block b4 is not on block b7, block b5 is not on block b6, block b7 is not on block b6, block b1 is not on block b6, block b5 is not on block b4, block b3 is not on block b2, block b5 is not on block b7, block b2 is not on block b3, block b1 is not on block b5, block b4 is not clear, block b6 is not on block b2, block b6 is not on block b5, block b3 is not being held, block b4 is not on block b3, block b7 is not on the table and block b2 is not on block b4, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b2 is not on block b4, block b6 is not on block b5, block b2 is not on block b1, block b1 is not on block b2, block b7 is not under block b5, block b1 is not on block b5 and block b2 is not on block b5, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not under block b2, block b7 is not on block b6, block b1 is not on block b7, block b6 is not on block b4, block b2 is not on block b1, block b2 is not on block b4, block b5 is not on block b6, block b6 is not on block b7, block b3 is not on block b6, block b1 is not on block b6, block b6 is not on block b1, block b7 is not on block b5, block b1 is not clear, block b4 is not on block b3, block b4 is not on block b6, block b1 is not on block b5, block b5 is not on block b2, block b6 is not being held, block b1 is not being held, block b3 is not on block b1, block b5 is not on the table, block b1 is not on block b3, block b3 is not on block b5, block b2 is not on block b5, block b2 is not being held, block b5 is not on block b4, block b3 is not on block b4, block b7 is not on the table, block b7 is not on block b3, block b2 is not on block b6, block b2 is not on block b7, block b4 is not on block b5, block b3 is not on block b7, block b5 is not on block b7, block b4 is not clear, block b6 is not on block b2, block b4 is not on block b7, block b5 is not being held and block b6 is not on block b5, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not on block b4, block b6 is not on block b1, block b4 is not on block b2, block b2 is not on block b5, block b1 is not on block b7, block b6 is not on block b5, block b1 is not clear, block b5 is not on block b4, block b7 is not on block b1, block b3 is not on block b6, block b5 is not on block b2, block b3 is not on block b2, block b3 is not on block b1, block b4 is not on block b5, block b1 is not on block b4, block b7 is not on the table, block b5 is not on block b6, block b1 is not on block b6, block b3 is not on block b5, block b1 is not being held, block b2 is not being held, block b5 is not on the table, block b4 is not on block b3, block b7 is not on block b6, block b7 is not on block b5, block b6 is not on block b7, block b5 is not on block b3, block b1 is not on block b2, block b5 is not being held, block b2 is not on block b3, block b7 is not on block b3, block b2 is not on block b1, block b1 is not on block b5, block b2 is not on block b4, block b4 is not clear, block b5 is not on block b7, block b2 is not on block b7, block b4 is not being held, block b6 is not being held, block b2 is not on block b6, block b3 is not being held, block b7 is not on block b2, block b6 is not on block b4, block b4 is not on block b1, block b3 is not on block b7, block b1 is not on block b3, block b4 is not on block b7 and block b7 is not being held, is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is removed from from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is removed from from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is lowered, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is removed from from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is crashed from block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b3 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b1 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b7 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is lost?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is under block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is under the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is under block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not on block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is not being held?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not under block b1?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not on block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not under block b6?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is stacked on top block b7, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is crashed from block b7, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is crashed from block b2, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is lowered, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is stacked on top block b2, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is put down, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b7 is unstacked from block b2, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b1 is crashed from block b6, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b4 is stacked on top block b5, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b2 is crashed from block b5, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b1 is removed from from block b3, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b4 is unstacked from block b2, is defined?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b6, b4, b2, b7, b3 and b5, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b5, b4, b6, b7 and b2, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b3, b1 and b4, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b8, b1, b7 and b5, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b8, b6 and b3, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b3, b8, b2, b7, b6 and b1, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is on the table, block b4 is on the table, block b7 is clear, block b2 is clear, block b7 is under block b4 and block b2 is on block b6, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b2 is on block b6, block b5 is on block b1, block b7 is clear and block b3 is being held, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is on block b1, block b7 is on block b4 and block b4 is on the table, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is being held, block b7 is on block b4, block b5 is on block b1, block b1 is on the table, block b7 is clear and block b2 is on block b6, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is clear, block b7 is under block b4, block b1 is on the table, block b2 is on block b6 and block b3 is being held, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is under block b1 and block b3 is being held, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b4 is not on block b7, block b1 is not on block b7, block b4 is not on block b2, block b7 is not being held, block b1 is not on block b5, block b5 is not being held, block b6 is not on the table, block b3 is not on block b1, block b2 is not being held, block b4 is not on block b1, block b2 is not on block b1, block b3 is not on block b4, block b2 is not on the table, block b6 is not being held, block b4 is not on block b6, block b5 is not on block b6, block b4 is not on block b5, block b7 is not under block b5, block b5 is not on block b3, block b7 is not on block b6, block b5 is not on block b2, block b6 is not on block b3, block b5 is not on block b7, block b4 is not on block b3 and block b5 is not on the table, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b7 is not on block b6, block b2 is not on block b7, block b3 is not on block b2, block b5 is not on block b4, block b5 is not on block b2, block b1 is not on block b6 and block b2 is not on block b1, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b2 is not on block b7, block b1 is not being held, block b4 is not being held, block b2 is not on the table, block b4 is not on block b5, block b7 is not on block b6, block b5 is not on block b6, block b5 is not on block b3, block b1 is not on block b7, block b1 is not on block b6, block b5 is not on block b7, block b4 is not clear, block b1 is not clear, block b6 is not on block b7 and block b5 is not lost, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not on block b3, block b6 is not on the table, block b7 is not on the table, block b5 is not on block b6, block b4 is not on block b5, block b6 is not clear, block b7 is not on block b5, block b2 is not on block b5, block b1 is not being held, block b3 is not on block b4, block b3 is not clear, block b1 is not on block b7, block b5 is not on the table, block b6 is not being held, block b5 is not on block b3, block b5 is not on block b2, block b4 is not on block b1, block b1 is not on block b6, block b3 is not on block b1, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b2, block b2 is not on block b3, block b7 is not on block b2, block b3 is not on the table, block b1 is not clear, block b4 is not on block b6, block b1 is not on block b2, block b3 is not on block b6, block b7 is not being held, block b4 is not on block b7, block b7 is not on block b1, block b5 is not being held, block b7 is not on block b3, block b2 is not on block b1, block b6 is not on block b1, block b6 is not on block b7, block b3 is not on block b2, block b4 is not on block b3, block b1 is not on block b4, block b5 is not on block b7, block b3 is not on block b7, block b5 is not clear, block b2 is not being held, block b2 is not on the table, block b7 is not on block b6, block b5 is not on block b4, block b2 is not on block b4, block b4 is not clear, block b6 is not on block b4, block b4 is not being held, block b1 is not under block b5, block b3 is not on block b5, hand is not empty and block b2 is not on block b7, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not on block b6, block b6 is not on block b4, block b7 is not on the table, block b7 is not on block b6, block b2 is not on block b7, block b2 is not on the table, block b1 is not on block b4, block b2 is not on block b5, block b3 is not on block b7, block b5 is not on block b2, block b7 is not on block b2, block b6 is not clear, block b4 is not on block b5, block b1 is not being held, block b5 is not on block b3, block b1 is not clear, block b4 is not on block b6, block b7 is not on block b3, block b4 is not on block b3, block b3 is not on the table, block b1 is not on block b2, block b5 is not being held, block b4 is not on block b2, block b6 is not on the table, block b6 is not on block b2, block b7 is not on block b5, block b7 is not on block b1, block b5 is not on the table, block b4 is not clear, block b4 is not on block b7, block b4 is not on block b1, block b2 is not on block b4, block b3 is not on block b4 and block b1 is not on block b3, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not on block b4, block b1 is not on block b5, block b5 is not on block b7, block b2 is not being held, block b3 is not on block b4, block b7 is not on the table, block b6 is not on block b2, block b4 is not on block b5, block b6 is not on the table, block b2 is not on block b1, block b1 is not on block b4, block b4 is not clear, block b2 is not on the table, block b7 is not on block b3, block b1 is not on block b7, block b5 is not clear, block b3 is not on block b5, block b4 is not on block b2, block b4 is not on block b7, block b2 is not on block b3, block b6 is not clear, block b1 is not on block b6, block b2 is not on block b5, block b5 is not on block b2, block b3 is not on the table, block b7 is not on block b5, block b5 is not on block b4 and block b7 is not on block b6, is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is crashed from block b6 and block b3 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is crashed from block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is removed from from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is removed from from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is removed from from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b5 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b3 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b7 is part of the state?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is under block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is under block b6?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is clear?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is lost?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is under block b3?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is under the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is not on block b2?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not on block b7?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is not on the table?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not on block b5?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is not on block b7?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not being held?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is lowered, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is crashed from block b7, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is put down, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is stacked on top block b7, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b2 is stacked on top block b4, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b4 is unstacked from block b7, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b7 is unstacked from block b6, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b3 is crashed from block b1, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b7 is unstacked from block b4, is defined?","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b6 is crashed from block b4, is defined?","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b2, b3 and b1, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b2, b4, b1, b7, b6, b3 and b5, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b3, b4, b1, b7 and b2, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b6, b4, b3, b2 and b5, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b3 and b6, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b4, b2, b7, b8, b1 and b3, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is on the table and block b6 is on block b5, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is on block b1, block b1 is on the table and block b2 is on block b6, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is on block b2, block b2 is on block b6, block b4 is being thrown, block b6 is on block b5, block b7 is clear, block b7 is on block b3, block b1 is on the table and block b5 is on block b1, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b4 is being held, block b1 is on the table, block b7 is clear, block b5 is under block b1 and block b3 is on block b2, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is on block b3 and block b4 is being held, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is on block b1, block b7 is clear, block b4 is being held, block b1 is on the table, block b3 is on block b2, block b2 is on block b6 and block b6 is on block b5, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b4 is not on the table, block b3 is not on block b1, block b6 is not on block b1, block b1 is not on block b6, block b5 is not on block b4, block b2 is not on block b7, block b1 is not on block b7, block b1 is not on block b2, block b2 is not on block b1, block b4 is not on block b2, block b4 is not on block b5, block b3 is not on block b5, block b7 is not on block b4, block b7 is not being held, block b5 is not on block b6, block b5 is not under block b3, block b7 is not on block b5 and block b5 is not on the table, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not on block b3, block b4 is not on block b3, block b5 is not on block b6, block b3 is not on block b7, block b4 is not on block b2, block b2 is not on block b1, block b7 is not on block b6, block b7 is not on block b4, block b3 is not on block b6, block b5 is not on block b2, hand is not empty, block b7 is not being held, block b1 is not on block b3, block b2 is not on the table, block b5 is not clear, block b6 is not on block b2, block b3 is not on block b4, block b2 is not on block b7, block b3 is not on block b5, block b6 is not on the table, block b5 is not on block b7, block b5 is not on block b3, block b7 is not on block b5, block b1 is not clear, block b1 is not on block b6, block b7 is not on block b1 and block b4 is not on block b7, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not on block b1, block b2 is not clear, block b6 is not on block b7, block b5 is not being held, block b5 is not on the table and block b6 is not being held, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not on the table, block b3 is not on block b4, block b1 is not being held, block b6 is not on block b4, block b2 is not on block b5, block b7 is not being held, block b4 is not on block b3, hand is not empty, block b5 is not clear, block b2 is not clear, block b3 is not on block b5, block b5 is not being held, block b6 is not on the table, block b7 is not on the table, block b7 is not on block b5, block b4 is not on block b6, block b6 is not clear, block b3 is not clear, block b6 is not being held, block b4 is not on block b5, block b2 is not on the table, block b1 is not on block b2, block b1 is not on block b3, block b6 is not on block b3, block b7 is not on block b6, block b4 is not clear, block b2 is not on block b4, block b4 is not on the table, block b1 is not on block b5, block b6 is not on block b1, block b1 is not clear and block b2 is not on block b1, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not being held, block b7 is not on block b6, block b3 is not on block b6, block b7 is not on block b4, block b5 is not on block b7, block b4 is not on block b7, block b3 is not on block b1, block b6 is not on block b4, block b5 is not on block b4, block b1 is not on block b4, block b6 is not on block b1, block b2 is not clear, block b5 is not on block b2, block b3 is not on block b5, block b1 is not on block b3, block b2 is not being held, block b4 is not on the table, block b1 is not on block b7, block b2 is not on block b5, block b1 is not on block b2, block b3 is not being held and block b1 is not on block b5, is not defined? Write None if all are defined.","Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not on block b3, block b3 is not on block b1, hand is not empty, block b3 is not being held, block b4 is not on block b3, block b5 is not on block b7, block b3 is not on block b5, block b7 is not on block b1, block b2 is not under block b5, block b2 is not on block b3, block b2 is not being held, block b6 is not on block b2, block b1 is not on block b7, block b6 is not on the table, block b1 is not clear, block b1 is not being held, block b3 is not on block b6, block b7 is not on the table, block b5 is not on block b3, block b4 is not clear, block b4 is not on the table, block b4 is not on block b6, block b6 is not being held, block b4 is not on block b7, block b5 is not on block b6, block b3 is not on the table, block b3 is not on block b7, block b3 is not on block b4, block b2 is not on block b1, block b6 is not on block b4, block b6 is not on block b1, block b1 is not on block b3, block b7 is not on block b5, block b5 is not on block b2, block b6 is not clear, block b5 is not being held, block b2 is not on block b7, block b1 is not on block b2, block b2 is not on the table, block b5 is not clear, block b1 is not on block b4, block b2 is not on block b4, block b2 is not clear, block b7 is not on block b6, block b7 is not on block b2, block b4 is not on block b1, block b5 is not on the table, block b6 is not on block b7 and block b4 is not on block b2, is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is crashed from block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is lifted to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is removed from from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is removed from from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.","Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is crashed from block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined."
answer,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,False,False,True,True,True,True,False,False,True,True,False,True,False,True,True,False,False,False,False,False,False,True,False,False,False,False,block b6 is on the table and block b7 is on block b6,block b7 is clear and block b7 is on block b6,block b2 is clear and block b2 is on the table,block b5 is on block b4 and block b5 is clear,block b1 is on the table and block b4 is on block b1,block b5 is on block b4 and block b4 is on block b1,"block b4 is not on block b2, block b2 is not on block b1, block b2 is not on block b3, block b5 is not on block b2, block b2 is not on block b4, block b2 is not on block b7, block b7 is not on block b2, block b2 is not on block b5, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b2, block b6 is not on block b2 and block b2 is not being held","block b7 is not on block b4, block b1 is not on block b7, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b4 is not on block b7, block b7 is not being held, block b2 is not on block b7, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7 and block b7 is not on the table","block b3 is not on block b5, block b6 is not on block b5, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b5 is not on block b3, block b5 is not on block b6, block b5 is not on the table, block b2 is not on block b5, block b5 is not being held, block b1 is not on block b5, block b4 is not on block b5 and block b5 is not on block b1","block b4 is not on block b6, block b3 is not on block b6, block b6 is not on block b1, block b6 is not on block b5, block b6 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b6, block b6 is not clear, block b6 is not on block b2 and block b6 is not on block b3","block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b4 is not on block b3, block b4 is not being held, block b4 is not on block b7, block b6 is not on block b4, block b3 is not on block b4, block b4 is not on the table, block b2 is not on block b4, block b4 is not clear, block b4 is not on block b5 and block b1 is not on block b4","block b3 is not on block b5, block b3 is not on block b6, block b4 is not on block b3, block b2 is not on block b3, block b7 is not on block b3, block b5 is not on block b3, block b3 is not on block b4, block b3 is not on block b7, block b3 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, block b3 is not on block b1 and block b6 is not on block b3",True,True,False,True,False,False,True,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,False,False,block b7 is on block b6 and block b6 is on the table,block b5 is on block b2 and block b5 is clear,block b1 is clear and block b1 is on the table,block b7 is clear and block b7 is on block b6,block b5 is on block b2 and block b2 is on the table,block b3 is clear and block b3 is on the table,"block b3 is not on block b5, block b3 is not on block b6, block b4 is not on block b3, block b2 is not on block b3, block b7 is not on block b3, block b5 is not on block b3, block b3 is not on block b4, block b3 is not on block b7, block b3 is not on block b2, block b1 is not on block b3, block b3 is not being held, block b3 is not on block b1 and block b6 is not on block b3","block b7 is not on block b4, block b1 is not on block b7, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b4 is not on block b7, block b7 is not being held, block b2 is not on block b7, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7 and block b7 is not on the table","block b4 is not on block b6, block b3 is not on block b6, block b6 is not on block b1, block b6 is not on block b5, block b6 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b6, block b6 is not clear, block b6 is not on block b2 and block b6 is not on block b3","block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b4 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b3 is not on block b4, block b4 is not on the table, block b2 is not on block b4, block b5 is not on block b4, block b4 is not clear, block b4 is not on block b5, block b4 is not on block b1 and block b1 is not on block b4","block b2 is not on block b1, block b1 is not on block b7, block b6 is not on block b1, block b7 is not on block b1, block b1 is not on block b6, block b1 is not on block b5, block b1 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1 and block b1 is not being held","block b3 is not on block b5, block b6 is not on block b5, block b5 is not on block b7, block b7 is not on block b5, block b5 is not on block b3, block b5 is not on block b6, block b5 is not on block b4, block b5 is not on the table, block b2 is not on block b5, block b5 is not being held, block b1 is not on block b5, block b4 is not on block b5 and block b5 is not on block b1",False,True,False,False,False,False,False,True,True,True,True,True,True,False,False,False,False,False,False,False,False,False,False,True,block b6 is clear and block b6 is on the table,block b3 is clear and block b3 is on the table,block b2 is clear and block b2 is on the table,block b4 is on the table and block b7 is on block b4,block b5 is clear and block b5 is on block b1,block b1 is on the table and block b5 is on block b1,"block b1 is not on block b7, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b4 is not on block b7, block b7 is not being held, block b2 is not on block b7, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7 and block b7 is not on the table","block b3 is not on block b5, block b6 is not on block b5, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b5 is not on block b3, block b5 is not on block b6, block b5 is not on block b4, block b5 is not on the table, block b2 is not on block b5, block b5 is not being held, block b1 is not on block b5 and block b4 is not on block b5","block b2 is not on block b1, block b1 is not on block b7, block b6 is not on block b1, block b1 is not clear, block b7 is not on block b1, block b1 is not on block b6, block b1 is not on block b5, block b1 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4 and block b1 is not being held","block b3 is not on block b5, block b3 is not on block b6, block b4 is not on block b3, block b2 is not on block b3, block b7 is not on block b3, block b5 is not on block b3, block b3 is not on block b4, block b3 is not on block b7, block b3 is not on block b2, block b1 is not on block b3, block b3 is not on block b1, block b3 is not being held and block b6 is not on block b3","block b4 is not on block b6, block b4 is not on block b2, block b4 is not on block b3, block b4 is not being held, block b4 is not on block b7, block b6 is not on block b4, block b3 is not on block b4, block b2 is not on block b4, block b5 is not on block b4, block b4 is not clear, block b4 is not on block b5, block b4 is not on block b1 and block b1 is not on block b4","block b4 is not on block b6, block b3 is not on block b6, block b6 is not on block b1, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b6 is not on block b4, block b5 is not on block b6, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b6, block b6 is not on block b2 and block b6 is not on block b3",False,False,False,True,True,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,False,False,False,False,block b6 is on block b5 and block b5 is on block b1,block b4 is on the table and block b7 is on block b4,block b3 is being held,block b2 is on block b6 and block b2 is clear,block b1 is on the table and block b5 is on block b1,block b7 is clear and block b7 is on block b4,"block b4 is not on block b2, block b2 is not on block b1, block b2 is not on block b3, block b5 is not on block b2, block b2 is not on block b4, block b2 is not on block b7, block b7 is not on block b2, block b2 is not on block b5, block b3 is not on block b2, block b1 is not on block b2, block b6 is not on block b2, block b2 is not on the table and block b2 is not being held","block b3 is not on block b5, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b5 is not on block b3, block b5 is not on block b6, block b5 is not on block b4, block b5 is not on the table, block b2 is not on block b5, block b5 is not being held, block b1 is not on block b5 and block b4 is not on block b5","block b4 is not on block b6, block b4 is not on block b2, block b4 is not on block b3, block b4 is not being held, block b4 is not on block b7, block b6 is not on block b4, block b3 is not on block b4, block b2 is not on block b4, block b5 is not on block b4, block b4 is not on block b5, block b4 is not on block b1, block b1 is not on block b4 and block b4 is not clear","block b6 is not on the table, block b4 is not on block b6, block b3 is not on block b6, block b6 is not on block b1, block b6 is not on block b7, block b7 is not on block b6, block b6 is not on block b4, block b5 is not on block b6, block b1 is not on block b6, block b6 is not being held, block b6 is not clear, block b6 is not on block b2 and block b6 is not on block b3","block b2 is not on block b1, block b1 is not on block b7, block b6 is not on block b1, block b1 is not clear, block b7 is not on block b1, block b1 is not on block b6, block b1 is not on block b5, block b1 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4 and block b1 is not being held","block b3 is not on block b5, block b3 is not on block b6, block b4 is not on block b3, block b2 is not on block b3, block b7 is not on block b3, block b5 is not on block b3, block b3 is not on block b4, block b3 is not on block b7, block b3 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, block b3 is not on block b1 and block b6 is not on block b3",False,False,True,False,True,True,True,False,True,True,True,True,True,False,False,False,False,False,False,True,False,False,False,False,block b4 is being held,block b3 is on block b2 and block b7 is on block b3,block b6 is on block b5 and block b2 is on block b6,block b1 is on the table and block b5 is on block b1,block b7 is clear and block b7 is on block b3,block b3 is on block b2 and block b2 is on block b6,"block b3 is not on block b5, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b5 is not on block b3, block b5 is not on block b6, block b5 is not on block b4, block b5 is not on the table, block b2 is not on block b5, block b5 is not being held, block b1 is not on block b5 and block b4 is not on block b5","block b4 is not on block b2, block b2 is not on block b1, block b2 is not on block b3, block b5 is not on block b2, block b2 is not on block b4, block b2 is not on block b7, block b7 is not on block b2, block b2 is not on block b5, block b2 is not clear, block b1 is not on block b2, block b6 is not on block b2, block b2 is not on the table and block b2 is not being held","block b2 is not on block b1, block b1 is not on block b7, block b6 is not on block b1, block b1 is not clear, block b7 is not on block b1, block b1 is not on block b6, block b1 is not on block b5, block b1 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4 and block b1 is not being held","block b6 is not on the table, block b4 is not on block b6, block b3 is not on block b6, block b6 is not on block b1, block b6 is not on block b7, block b7 is not on block b6, block b6 is not on block b4, block b5 is not on block b6, block b1 is not on block b6, block b6 is not being held, block b6 is not clear, block b6 is not on block b2 and block b6 is not on block b3","block b7 is not on block b4, block b1 is not on block b7, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b7 is not on block b5, block b4 is not on block b7, block b7 is not being held, block b2 is not on block b7, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7 and block b7 is not on the table","block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b4 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b3 is not on block b4, block b4 is not on the table, block b2 is not on block b4, block b5 is not on block b4, block b4 is not clear, block b4 is not on block b5, block b4 is not on block b1 and block b1 is not on block b4",False,False,False,True,False,False,True,False,False,False,False,False,"block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6, block b2 is on the table, block b3 is being held and block b4 is on block b1","block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3",False,True,False,False,False,False,True,False,False,False,False,False,"block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b4 is being held, block b7 is on block b6, block b6 is on the table and block b2 is on the table","block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3",False,True,False,False,False,False,True,False,False,False,False,False,"block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b4, block b2 is on the table and block b5 is on block b1","block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3",True,False,False,False,False,False,False,True,False,False,False,False,"block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b7 is on block b4, block b2 is clear, block b3 is being held and block b5 is on block b1","block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b4 is not clear, block b2 is not being held, block b1 is not being held and block b6 is not on block b3",False,False,False,True,False,False,False,True,False,False,False,False,"block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b4 is being held, block b7 is on block b3 and block b5 is on block b1","block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3",False,False,False,False,True,False,True,False,False,False,False,False,"block b3 is stacked on top block b5, block b3 is stacked on top block b2, block b3 is put down and block b3 is stacked on top block b7","block b4 is unstacked from block b3, block b4 is picked up, block b4 is stacked on top block b6, block b1 is stacked on top block b3, block b4 is stacked on top block b7, block b3 is unstacked from block b4, block b1 is unstacked from block b4, block b1 is unstacked from block b5, block b6 is picked up, block b3 is unstacked from block b1, block b3 is unstacked from block b5, block b3 is stacked on top block b1, block b6 is put down, block b2 is stacked on top block b4, block b4 is unstacked from block b5, block b7 is unstacked from block b2, block b5 is unstacked from block b6, block b3 is unstacked from block b2, block b3 is stacked on top block b4, block b6 is unstacked from block b7, block b4 is unstacked from block b2, block b5 is stacked on top block b4, block b7 is unstacked from block b1, block b4 is put down, block b6 is stacked on top block b5, block b7 is unstacked from block b3, block b5 is stacked on top block b3, block b4 is stacked on top block b3, block b6 is stacked on top block b2, block b5 is stacked on top block b1, block b5 is put down, block b4 is unstacked from block b1, block b5 is unstacked from block b3, block b1 is stacked on top block b7, block b5 is stacked on top block b7, block b7 is unstacked from block b4, block b2 is unstacked from block b5, block b7 is stacked on top block b3, block b2 is unstacked from block b6, block b5 is unstacked from block b1, block b7 is stacked on top block b1, block b7 is unstacked from block b6, block b6 is unstacked from block b3, block b4 is unstacked from block b6, block b3 is unstacked from block b7, block b2 is stacked on top block b6, block b5 is unstacked from block b2, block b2 is stacked on top block b5, block b5 is stacked on top block b2, block b6 is unstacked from block b2, block b7 is unstacked from block b5, block b4 is stacked on top block b5, block b1 is stacked on top block b6, block b3 is picked up, block b1 is put down, block b1 is unstacked from block b2, block b3 is unstacked from block b6, block b2 is picked up, block b1 is picked up, block b1 is stacked on top block b2, block b1 is unstacked from block b3, block b4 is stacked on top block b1, block b4 is stacked on top block b2, block b2 is unstacked from block b4, block b2 is unstacked from block b7, block b2 is unstacked from block b1, block b5 is picked up, block b2 is stacked on top block b3, block b7 is stacked on top block b6, block b7 is stacked on top block b4, block b5 is unstacked from block b4, block b7 is put down, block b5 is stacked on top block b6, block b1 is stacked on top block b5, block b7 is stacked on top block b2, block b2 is stacked on top block b1, block b6 is unstacked from block b5, block b2 is put down, block b6 is unstacked from block b1, block b6 is stacked on top block b1, block b7 is picked up, block b5 is unstacked from block b7, block b1 is unstacked from block b6, block b1 is stacked on top block b4, block b3 is stacked on top block b6, block b6 is unstacked from block b4, block b2 is unstacked from block b3, block b6 is stacked on top block b4, block b6 is stacked on top block b3, block b6 is stacked on top block b7, block b1 is unstacked from block b7, block b2 is stacked on top block b7, block b7 is stacked on top block b5 and block b4 is unstacked from block b7",block b2 is unstacked from block b4,block b4 is unstacked from block b5,block b2 is stacked on top block b3,block b5 is stacked on top block b7,block b7 is unstacked from block b6,block b1 is stacked on top block b5,True,False,False,False,False,False,True,False,False,False,True,False,"block b4 is stacked on top block b7, block b4 is put down, block b4 is stacked on top block b3, block b4 is stacked on top block b5 and block b4 is stacked on top block b1","block b4 is unstacked from block b3, block b4 is picked up, block b4 is stacked on top block b6, block b1 is stacked on top block b3, block b3 is unstacked from block b4, block b1 is unstacked from block b4, block b1 is unstacked from block b5, block b6 is picked up, block b3 is unstacked from block b1, block b3 is unstacked from block b5, block b3 is stacked on top block b1, block b6 is put down, block b2 is stacked on top block b4, block b4 is unstacked from block b5, block b7 is unstacked from block b2, block b5 is unstacked from block b6, block b3 is unstacked from block b2, block b3 is stacked on top block b4, block b6 is unstacked from block b7, block b4 is unstacked from block b2, block b5 is stacked on top block b4, block b7 is unstacked from block b1, block b6 is stacked on top block b5, block b7 is unstacked from block b3, block b3 is stacked on top block b5, block b5 is stacked on top block b3, block b6 is stacked on top block b2, block b5 is stacked on top block b1, block b5 is put down, block b4 is unstacked from block b1, block b5 is unstacked from block b3, block b3 is stacked on top block b2, block b1 is stacked on top block b7, block b5 is stacked on top block b7, block b7 is unstacked from block b4, block b2 is unstacked from block b5, block b7 is stacked on top block b3, block b2 is unstacked from block b6, block b5 is unstacked from block b1, block b7 is stacked on top block b1, block b7 is unstacked from block b6, block b6 is unstacked from block b3, block b4 is unstacked from block b6, block b3 is unstacked from block b7, block b2 is stacked on top block b6, block b5 is unstacked from block b2, block b2 is stacked on top block b5, block b5 is stacked on top block b2, block b6 is unstacked from block b2, block b7 is unstacked from block b5, block b1 is stacked on top block b6, block b3 is put down, block b3 is picked up, block b1 is put down, block b1 is unstacked from block b2, block b3 is unstacked from block b6, block b2 is picked up, block b1 is picked up, block b1 is stacked on top block b2, block b1 is unstacked from block b3, block b4 is stacked on top block b2, block b2 is unstacked from block b4, block b2 is unstacked from block b7, block b2 is unstacked from block b1, block b5 is picked up, block b2 is stacked on top block b3, block b7 is stacked on top block b6, block b7 is stacked on top block b4, block b5 is unstacked from block b4, block b7 is put down, block b5 is stacked on top block b6, block b1 is stacked on top block b5, block b7 is stacked on top block b2, block b2 is stacked on top block b1, block b6 is unstacked from block b5, block b2 is put down, block b6 is unstacked from block b1, block b6 is stacked on top block b1, block b7 is picked up, block b5 is unstacked from block b7, block b1 is unstacked from block b6, block b1 is stacked on top block b4, block b3 is stacked on top block b6, block b6 is unstacked from block b4, block b2 is unstacked from block b3, block b6 is stacked on top block b4, block b6 is stacked on top block b3, block b6 is stacked on top block b7, block b1 is unstacked from block b7, block b3 is stacked on top block b7, block b2 is stacked on top block b7, block b7 is stacked on top block b5 and block b4 is unstacked from block b7",None,block b4 is stacked on top block b2,block b1 is stacked on top block b5,block b2 is unstacked from block b5,block b2 is stacked on top block b3,block b5 is stacked on top block b3,True,False,False,False,False,False,True,False,True,False,False,False,"block b6 is picked up, block b7 is unstacked from block b4, block b5 is unstacked from block b1, block b3 is picked up and block b2 is picked up","block b4 is unstacked from block b3, block b4 is picked up, block b4 is stacked on top block b6, block b1 is stacked on top block b3, block b4 is stacked on top block b7, block b3 is unstacked from block b4, block b1 is unstacked from block b4, block b1 is unstacked from block b5, block b3 is unstacked from block b1, block b3 is unstacked from block b5, block b3 is stacked on top block b1, block b6 is put down, block b2 is stacked on top block b4, block b4 is unstacked from block b5, block b7 is unstacked from block b2, block b5 is unstacked from block b6, block b3 is unstacked from block b2, block b3 is stacked on top block b4, block b6 is unstacked from block b7, block b4 is unstacked from block b2, block b5 is stacked on top block b4, block b7 is unstacked from block b1, block b4 is put down, block b6 is stacked on top block b5, block b7 is unstacked from block b3, block b3 is stacked on top block b5, block b5 is stacked on top block b3, block b4 is stacked on top block b3, block b6 is stacked on top block b2, block b5 is stacked on top block b1, block b5 is put down, block b4 is unstacked from block b1, block b5 is unstacked from block b3, block b3 is stacked on top block b2, block b1 is stacked on top block b7, block b5 is stacked on top block b7, block b2 is unstacked from block b5, block b7 is stacked on top block b3, block b2 is unstacked from block b6, block b7 is stacked on top block b1, block b7 is unstacked from block b6, block b6 is unstacked from block b3, block b4 is unstacked from block b6, block b3 is unstacked from block b7, block b2 is stacked on top block b6, block b5 is unstacked from block b2, block b2 is stacked on top block b5, block b5 is stacked on top block b2, block b6 is unstacked from block b2, block b7 is unstacked from block b5, block b4 is stacked on top block b5, block b1 is stacked on top block b6, block b3 is put down, block b1 is put down, block b1 is unstacked from block b2, block b3 is unstacked from block b6, block b1 is picked up, block b1 is stacked on top block b2, block b1 is unstacked from block b3, block b4 is stacked on top block b1, block b4 is stacked on top block b2, block b2 is unstacked from block b4, block b2 is unstacked from block b7, block b2 is unstacked from block b1, block b5 is picked up, block b2 is stacked on top block b3, block b7 is stacked on top block b6, block b7 is stacked on top block b4, block b5 is unstacked from block b4, block b7 is put down, block b5 is stacked on top block b6, block b1 is stacked on top block b5, block b7 is stacked on top block b2, block b2 is stacked on top block b1, block b6 is unstacked from block b5, block b2 is put down, block b6 is unstacked from block b1, block b6 is stacked on top block b1, block b7 is picked up, block b5 is unstacked from block b7, block b1 is unstacked from block b6, block b1 is stacked on top block b4, block b3 is stacked on top block b6, block b6 is unstacked from block b4, block b2 is unstacked from block b3, block b6 is stacked on top block b4, block b6 is stacked on top block b3, block b6 is stacked on top block b7, block b1 is unstacked from block b7, block b3 is stacked on top block b7, block b2 is stacked on top block b7, block b7 is stacked on top block b5 and block b4 is unstacked from block b7",None,block b1 is picked up,block b5 is put down,block b2 is unstacked from block b4,block b5 is stacked on top block b3,block b7 is stacked on top block b6,True,False,False,False,False,False,True,False,False,False,True,False,"block b3 is stacked on top block b2, block b3 is put down and block b3 is stacked on top block b7","block b4 is unstacked from block b3, block b4 is picked up, block b4 is stacked on top block b6, block b1 is stacked on top block b3, block b4 is stacked on top block b7, block b3 is unstacked from block b4, block b1 is unstacked from block b4, block b1 is unstacked from block b5, block b6 is picked up, block b3 is unstacked from block b1, block b3 is unstacked from block b5, block b3 is stacked on top block b1, block b6 is put down, block b2 is stacked on top block b4, block b4 is unstacked from block b5, block b7 is unstacked from block b2, block b5 is unstacked from block b6, block b3 is unstacked from block b2, block b3 is stacked on top block b4, block b6 is unstacked from block b7, block b4 is unstacked from block b2, block b5 is stacked on top block b4, block b7 is unstacked from block b1, block b4 is put down, block b6 is stacked on top block b5, block b7 is unstacked from block b3, block b3 is stacked on top block b5, block b5 is stacked on top block b3, block b4 is stacked on top block b3, block b6 is stacked on top block b2, block b5 is stacked on top block b1, block b5 is put down, block b4 is unstacked from block b1, block b5 is unstacked from block b3, block b1 is stacked on top block b7, block b5 is stacked on top block b7, block b7 is unstacked from block b4, block b2 is unstacked from block b5, block b7 is stacked on top block b3, block b2 is unstacked from block b6, block b5 is unstacked from block b1, block b7 is stacked on top block b1, block b7 is unstacked from block b6, block b6 is unstacked from block b3, block b4 is unstacked from block b6, block b3 is unstacked from block b7, block b2 is stacked on top block b6, block b5 is unstacked from block b2, block b2 is stacked on top block b5, block b5 is stacked on top block b2, block b6 is unstacked from block b2, block b7 is unstacked from block b5, block b4 is stacked on top block b5, block b1 is stacked on top block b6, block b3 is picked up, block b1 is put down, block b1 is unstacked from block b2, block b3 is unstacked from block b6, block b2 is picked up, block b1 is picked up, block b1 is stacked on top block b2, block b1 is unstacked from block b3, block b4 is stacked on top block b1, block b4 is stacked on top block b2, block b2 is unstacked from block b4, block b2 is unstacked from block b7, block b2 is unstacked from block b1, block b5 is picked up, block b2 is stacked on top block b3, block b7 is stacked on top block b6, block b7 is stacked on top block b4, block b5 is unstacked from block b4, block b7 is put down, block b5 is stacked on top block b6, block b1 is stacked on top block b5, block b7 is stacked on top block b2, block b2 is stacked on top block b1, block b6 is unstacked from block b5, block b2 is put down, block b6 is unstacked from block b1, block b6 is stacked on top block b1, block b7 is picked up, block b5 is unstacked from block b7, block b1 is unstacked from block b6, block b1 is stacked on top block b4, block b3 is stacked on top block b6, block b6 is unstacked from block b4, block b2 is unstacked from block b3, block b6 is stacked on top block b4, block b6 is stacked on top block b3, block b6 is stacked on top block b7, block b1 is unstacked from block b7, block b2 is stacked on top block b7, block b7 is stacked on top block b5 and block b4 is unstacked from block b7",block b4 is stacked on top block b7,block b4 is unstacked from block b7,block b1 is unstacked from block b6,block b7 is stacked on top block b6,block b1 is put down,None,True,False,False,False,False,False,True,True,False,False,False,False,block b4 is stacked on top block b7 and block b4 is put down,"block b4 is unstacked from block b3, block b4 is picked up, block b4 is stacked on top block b6, block b1 is stacked on top block b3, block b3 is unstacked from block b4, block b1 is unstacked from block b4, block b1 is unstacked from block b5, block b6 is picked up, block b3 is unstacked from block b1, block b3 is unstacked from block b5, block b3 is stacked on top block b1, block b6 is put down, block b2 is stacked on top block b4, block b4 is unstacked from block b5, block b7 is unstacked from block b2, block b5 is unstacked from block b6, block b3 is unstacked from block b2, block b3 is stacked on top block b4, block b6 is unstacked from block b7, block b4 is unstacked from block b2, block b5 is stacked on top block b4, block b7 is unstacked from block b1, block b6 is stacked on top block b5, block b7 is unstacked from block b3, block b3 is stacked on top block b5, block b5 is stacked on top block b3, block b4 is stacked on top block b3, block b6 is stacked on top block b2, block b5 is stacked on top block b1, block b5 is put down, block b4 is unstacked from block b1, block b5 is unstacked from block b3, block b3 is stacked on top block b2, block b1 is stacked on top block b7, block b5 is stacked on top block b7, block b7 is unstacked from block b4, block b2 is unstacked from block b5, block b7 is stacked on top block b3, block b2 is unstacked from block b6, block b5 is unstacked from block b1, block b7 is stacked on top block b1, block b7 is unstacked from block b6, block b6 is unstacked from block b3, block b4 is unstacked from block b6, block b3 is unstacked from block b7, block b2 is stacked on top block b6, block b5 is unstacked from block b2, block b2 is stacked on top block b5, block b5 is stacked on top block b2, block b6 is unstacked from block b2, block b7 is unstacked from block b5, block b4 is stacked on top block b5, block b1 is stacked on top block b6, block b3 is put down, block b3 is picked up, block b1 is put down, block b1 is unstacked from block b2, block b3 is unstacked from block b6, block b2 is picked up, block b1 is picked up, block b1 is stacked on top block b2, block b1 is unstacked from block b3, block b4 is stacked on top block b1, block b4 is stacked on top block b2, block b2 is unstacked from block b4, block b2 is unstacked from block b7, block b2 is unstacked from block b1, block b5 is picked up, block b2 is stacked on top block b3, block b7 is stacked on top block b6, block b7 is stacked on top block b4, block b5 is unstacked from block b4, block b7 is put down, block b5 is stacked on top block b6, block b1 is stacked on top block b5, block b7 is stacked on top block b2, block b2 is stacked on top block b1, block b6 is unstacked from block b5, block b2 is put down, block b6 is unstacked from block b1, block b6 is stacked on top block b1, block b7 is picked up, block b5 is unstacked from block b7, block b1 is unstacked from block b6, block b1 is stacked on top block b4, block b3 is stacked on top block b6, block b6 is unstacked from block b4, block b2 is unstacked from block b3, block b6 is stacked on top block b4, block b6 is stacked on top block b3, block b6 is stacked on top block b7, block b1 is unstacked from block b7, block b3 is stacked on top block b7, block b2 is stacked on top block b7, block b7 is stacked on top block b5 and block b4 is unstacked from block b7",block b3 is stacked on top block b4,None,block b2 is unstacked from block b1,block b5 is unstacked from block b4,block b1 is put down,block b7 is unstacked from block b1,True,True,True,True,True,True,False,False,False,False,False,False,"block b3 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6, block b2 is on the table and block b4 is on block b1","block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3",True,True,True,True,True,True,False,False,False,False,False,False,"block b4 is on the table, block b3 is clear, block b4 is clear, hand is empty, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6 and block b2 is on the table","block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3",True,True,True,True,True,True,False,False,False,False,False,False,"block b4 is on the table, block b3 is clear, block b6 is being held, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table, block b5 is clear, block b7 is on block b4, block b2 is on the table and block b5 is on block b1","block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3",True,True,True,True,True,True,False,False,False,False,False,False,"block b3 is on block b2, block b6 is on block b5, block b4 is on the table, block b3 is clear, block b2 is on block b6, hand is empty, block b7 is clear, block b1 is on the table, block b7 is on block b4 and block b5 is on block b1","block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not on the table, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3",True,True,True,True,True,True,False,False,False,False,False,False,"block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b4 is clear, hand is empty, block b1 is on the table, block b4 is on block b7, block b7 is on block b3 and block b5 is on block b1","block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b7 is not clear, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3",False,True,False,False,False,False,True,False,True,False,False,False,False,False,True,False,False,7,10,54,4,94,0,0,0,0,0,0,True,False,False,False,False,False,False,False,True,False,True,False,False,False,False,False,True,False,False,False,False,7,11,53,5,93,4,3,4,0,0,2,False,False,True,False,False,True,False,False,False,False,True,False,False,False,False,False,True,False,False,False,False,False,7,13,51,5,93,2,7,3,0,3,5,False,True,False,False,False,False,True,False,False,False,False,True,False,False,True,False,False,False,False,False,7,9,55,3,95,2,13,6,3,11,10,True,False,False,False,False,False,True,False,True,False,False,False,False,False,False,True,False,False,False,False,7,8,56,2,96,18,4,0,1,16,6,True,False,True,True,True,True,True,False,False,True,False,True,False,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,True,False,b2,b3,b8,b3,b3,b8,None,block b5 is under block b4,block b5 is under block b4,None,block b1 is under the table,block b7 is lost,None,None,block b2 is not under block b6,None,block b5 is not under block b7,block b4 is not under block b6,block b3 is removed from from block b7,None,False,True,True,True,True,True,False,True,True,True,False,True,True,False,True,False,False,True,False,True,True,True,False,False,True,True,False,True,False,True,b1,b8,b5,b7,b2,b8,block b6 is under the table,None,block b3 is under the table,block b5 is lost,None,block b5 is lost,block b3 is not under block b7,block b3 is not being thrown,None,block b4 is not under block b5,None,None,block b3 is lowered,block b5 is removed from from block b4,None,block b5 is crashed from block b2,block b3 is removed from from block b7,block b4 is removed from from block b1,False,True,True,True,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,True,True,True,True,True,True,False,b6,b4,b4,b4,b8,b2,block b6 is under the table,block b2 is lost,None,block b2 is lost,block b4 is under the table,block b2 is under the table,None,None,None,block b7 is not under block b5,block b3 is not under block b2,None,block b5 is removed from from block b4,None,block b5 is removed from from block b2,block b3 is lowered,block b4 is removed from from block b1,block b7 is crashed from block b4,True,True,False,True,True,True,True,False,True,False,False,False,True,True,False,True,True,False,True,False,False,False,True,True,True,False,True,False,False,True,b2,b2,b3,b8,b8,b8,block b7 is under block b4,None,None,None,block b7 is under block b4,block b5 is under block b1,block b7 is not under block b5,None,block b5 is not lost,block b1 is not under block b5,None,None,block b2 is crashed from block b6,None,block b7 is crashed from block b4,block b3 is removed from from block b7,block b7 is removed from from block b6,block b4 is removed from from block b1,True,True,False,True,True,True,False,False,True,False,False,False,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,False,b1,b1,b3,b4,b6,b8,None,None,block b4 is being thrown,block b5 is under block b1,None,None,block b5 is not under block b3,None,None,None,None,block b2 is not under block b5,block b7 is crashed from block b4,None,block b4 is lifted,block b7 is removed from from block b4,block b3 is removed from from block b7,block b5 is crashed from block b2
plan_length,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,10,10,10,10,10,10,10,10,10,10,10,10,15,15,15,15,15,15,15,15,15,15,15,15,19,19,19,19,19,19,19,19,19,19,19,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10,10,10,10,10,10,10,10,10,10,10,10,10,10,15,15,15,15,15,15,15,15,15,15,15,15,15,15,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10,10,10,10,10,10,10,10,10,10,10,10,10,10,15,15,15,15,15,15,15,15,15,15,15,15,15,15,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19
initial_state,"{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}","{'part_of_plan?': True, 'fluents': ['on(b7,b6)', 'clear(b3)', 'handempty', 'clear(b2)', 'ontable(b1)', 'ontable(b6)', 'clear(b5)', 'on(b5,b4)', 'ontable(b2)', 'on(b4,b1)', 'on(b3,b7)'], 'neg_fluents': ['-on(b3,b5)', '-on(b4,b6)', '-on(b4,b2)', '-on(b7,b4)', '-on(b2,b1)', '-on(b1,b7)', '-on(b3,b6)', '-on(b6,b1)', '-on(b4,b3)', '-on(b2,b3)', '-holding(b4)', '-on(b6,b5)', '-on(b6,b7)', '-on(b5,b7)', '-on(b5,b2)', '-on(b7,b5)', '-on(b7,b3)', '-clear(b1)', '-on(b5,b3)', '-on(b4,b7)', '-on(b6,b4)', '-on(b5,b6)', '-on(b3,b4)', '-ontable(b4)', '-holding(b7)', '-clear(b7)', '-on(b2,b4)', '-on(b2,b7)', '-ontable(b5)', '-on(b7,b1)', '-clear(b4)', '-on(b7,b2)', '-on(b1,b6)', '-holding(b6)', '-on(b2,b5)', '-holding(b5)', '-on(b2,b6)', '-on(b3,b2)', '-clear(b6)', '-on(b1,b5)', '-on(b1,b2)', '-on(b4,b5)', '-ontable(b7)', '-on(b6,b2)', '-on(b1,b3)', '-holding(b3)', '-ontable(b3)', '-on(b3,b1)', '-on(b1,b4)', '-on(b5,b1)', '-holding(b2)', '-holding(b1)', '-on(b6,b3)'], 'objects': {'block': ['b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7']}, 'executable?': True}"
action_sequence,"['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']","['action_unstack(b3,b7)', 'action_put_down(b3)', 'action_unstack(b5,b4)', 'action_stack(b5,b2)', 'action_unstack(b4,b1)', 'action_put_down(b4)', 'action_unstack(b5,b2)', 'action_stack(b5,b1)', 'action_unstack(b7,b6)', 'action_stack(b7,b4)', 'action_pick_up(b6)', 'action_stack(b6,b5)', 'action_pick_up(b2)', 'action_stack(b2,b6)', 'action_pick_up(b3)', 'action_stack(b3,b2)', 'action_unstack(b7,b4)', 'action_stack(b7,b3)', 'action_pick_up(b4)', 'action_stack(b4,b7)']"
prompt,"Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b1 is on block b7?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b2 is being held and block b2 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b6 is on the table and block b7 is on block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b5 is clear and block b5 is on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b5 is on the table and block b5 is on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b3 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b2 is not on block b5, block b6 is not on block b2, block b2 is not on block b3, block b2 is not on block b4, block b2 is not on block b7, block b2 is not being held and block b7 is not on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b6 is not being held, block b1 is not on block b6, block b6 is not on the table, block b2 is not on block b6, block b6 is not clear, block b6 is not on block b7, block b6 is not on block b2, block b4 is not on block b6, block b6 is not on block b1, block b3 is not on block b6, block b6 is not on block b5 and block b5 is not on block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b2 is not on block b4, block b4 is not clear, block b7 is not on block b4, block b3 is not on block b4, block b1 is not on block b4, block b4 is not on block b5, block b4 is not being held and block b4 is not on block b7?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b4 is not clear, block b4 is not on block b2, block b4 is not on block b6, block b4 is not being held, block b3 is not on block b4, block b4 is not on block b5, block b4 is not on block b7, block b1 is not on block b4, block b4 is not on the table, block b2 is not on block b4, block b4 is not on block b3 and block b6 is not on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b4 is not clear, block b2 is not on block b4, block b4 is not on the table, block b4 is not on block b5, block b4 is not on block b3, block b3 is not on block b4, block b4 is not on block b7, block b4 is not on block b1, block b4 is not being held, block b7 is not on block b4, block b4 is not on block b6 and block b4 is not on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b4 is not on the table, block b4 is not clear, block b1 is not on block b4, block b4 is not being held and block b4 is not on block b7?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b2 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b7 is on block b6 and block b7 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b5 is on block b2 and block b5 is on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b3 is clear and block b3 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b5 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b3 is being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b3 is not on block b5, block b5 is not on block b6, block b6 is not on block b5 and block b4 is not on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b2 is not on block b1, block b6 is not on block b2, block b2 is not on block b3, block b2 is not on block b5, block b7 is not on block b2, block b1 is not on block b2 and block b2 is not on block b7?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b2 is not on block b1, block b4 is not on block b1 and block b7 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b3 is not on block b5, block b5 is not on block b3, block b4 is not on block b5, block b5 is not on block b4, block b5 is not on the table, block b2 is not on block b5, block b5 is not on block b6, block b7 is not on block b5, block b5 is not being held, block b5 is not on block b7 and block b5 is not on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b6 is not being held, block b1 is not on block b6, block b6 is not on block b2, block b6 is not on block b7, block b6 is not on block b1, block b4 is not on block b6, block b6 is not on block b4, block b3 is not on block b6, block b6 is not on block b5 and block b6 is not clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b4 is not on block b7, block b2 is not on block b4, block b4 is not on block b3, block b3 is not on block b4 and block b4 is not on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b2 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b5 is on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b3 is on the table and block b3 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b4 is on block b5 and block b5 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b5 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b7 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b6 is not on block b5, block b1 is not on block b6, block b6 is not being held, block b6 is not on block b1, block b4 is not on block b6, block b6 is not on block b7, block b6 is not on block b2, block b3 is not on block b6, block b7 is not on block b6, block b5 is not on block b6, block b6 is not on block b3, block b6 is not on block b4 and block b2 is not on block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b2 is not on block b5, block b5 is not on block b6 and block b1 is not on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b4 is not on block b2, block b2 is not on block b7, block b2 is not on block b4, block b3 is not on block b2, block b6 is not on block b2, block b2 is not on block b6, block b2 is not on block b3, block b2 is not on block b5, block b7 is not on block b2, block b2 is not on block b1 and block b5 is not on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b2 is not on block b1 and block b2 is not on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b6 is not on block b7, block b3 is not on block b6, block b4 is not on block b6 and block b6 is not on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b4 is not on block b1 and block b2 is not on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b7 is on block b4 and block b4 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b7 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b7 is on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b6 is on block b5 and block b2 is on block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b2 is on block b6 and block b2 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b6 is on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b3 is not on block b4, block b5 is not on block b4 and block b4 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b2 is not on block b7, block b3 is not on block b2, block b2 is not clear, block b2 is not on block b3, block b6 is not on block b2, block b2 is not on block b4, block b1 is not on block b2, block b4 is not on block b2, block b2 is not on block b5, block b5 is not on block b2 and block b2 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b3 is not clear, block b5 is not on block b3, block b3 is not on the table, block b3 is not on block b4, block b3 is not on block b2, block b3 is not on block b5, block b7 is not on block b3 and block b2 is not on block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b5 is not on block b7, block b5 is not on block b1, block b5 is not on block b2, block b5 is not on block b6, block b1 is not on block b5, block b2 is not on block b5, block b5 is not on the table, block b5 is not being held, block b7 is not on block b5 and block b5 is not on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b6 is not on block b4, block b6 is not on block b1, block b6 is not on block b7, block b6 is not clear, block b3 is not on block b6, block b6 is not being held, block b6 is not on block b5 and block b1 is not on block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b5 is not on block b7, block b7 is not on block b3, block b7 is not being held, block b7 is not on block b2, block b1 is not on block b7, block b6 is not on block b7, block b2 is not on block b7, block b7 is not on block b1 and block b3 is not on block b7?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b4 is on block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b6 is on block b5 and block b5 is on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b4 is being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b2 is on block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b4 is on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b6 is on block b5 and block b7 is on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b3 is not on block b4, block b3 is not on block b6, block b3 is not on the table, block b4 is not on block b3, block b6 is not on block b3, block b5 is not on block b3, block b3 is not on block b1, block b2 is not on block b3, block b3 is not on block b7, block b1 is not on block b3, block b3 is not on block b5 and block b3 is not clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b6 is not on block b1, block b6 is not on block b4 and block b6 is not on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b1 is not on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b6 is not on block b7, block b6 is not on the table, block b6 is not on block b4, block b6 is not on block b2, block b3 is not on block b6, block b6 is not on block b1 and block b7 is not on block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b5 is not on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b2 is not on block b7, block b4 is not on block b2, block b2 is not on the table, block b2 is not on block b5, block b2 is not on block b3, block b5 is not on block b2 and block b6 is not on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b2 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b4 is on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b6 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b7 is on block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b4 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b3 is on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b6 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b2 is not on block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b7 is not on block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b1 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b3 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is it True or False that block b6 is not on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6, block b2 is on the table, block b3 is being held and block b4 is on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is being held, block b3 is on block b4, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6 and block b2 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is on block b4, block b1 is on block b5, block b4 is on block b3, block b1 is on block b4, block b7 is on block b5, block b3 is on block b7, block b2 is clear, block b5 is on block b4, block b7 is clear and block b1 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is on block b3, block b5 is on block b3, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6 and block b2 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is being held, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6, block b2 is on the table and block b3 is being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is on block b7, block b4 is clear, block b7 is on the table, block b2 is on block b6, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear and block b6 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is not on block b1, block b1 is not on the table, block b7 is not clear, block b2 is not clear, block b2 is not on the table, block b3 is not being held, block b7 is not on block b6, block b5 is not clear, block b6 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2 and block b1 is not on block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is not on the table, block b2 is not clear, block b7 is not on block b6, block b1 is not on the table, block b7 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty and block b3 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not clear, block b1 is not on the table, block b2 is not clear, block b2 is not on the table, block b7 is not on block b6, block b3 is not being held, block b7 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear and block b3 is not on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not being held, block b5 is not on block b4, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1 and block b2 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held and block b1 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve b2. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve b5. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve b1. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve b4. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b2. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b7. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b3. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b5 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b5 is on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b7 is on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b7 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b4 is on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b1 is on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b6 is not on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b5 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b6 is not on block b7?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b4 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b6 is not on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is it True or False that block b5 is not clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b4 is being held, block b7 is on block b6, block b6 is on the table and block b2 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is on block b6, block b1 is on block b5, block b1 is on block b6, block b2 is on block b3, block b5 is on block b1, block b2 is clear, block b6 is on block b5, block b4 is on block b3, block b5 is on block b6, block b3 is clear and block b3 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on block b6, block b4 is on block b7, block b5 is on block b3, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear and block b4 is being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on block b7, block b1 is on block b4, block b7 is on block b5, block b3 is on block b7, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table and block b5 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is on block b1, block b6 is clear, block b7 is on block b4, block b4 is on block b5, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table and block b5 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is on block b3, block b5 is on the table, block b4 is on the table, block b3 is being held, block b3 is on block b5, block b7 is on block b5, block b4 is on block b3, block b3 is clear, block b3 is on the table, block b1 is clear and block b5 is on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not on block b2, block b5 is not clear, block b2 is not on the table, block b6 is not on the table, block b3 is not clear, block b3 is not on the table, block b7 is not on block b6, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held and hand is not empty?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not clear, block b2 is not on the table, block b6 is not on the table, block b7 is not on block b6, block b5 is not on block b2, block b3 is not on the table, block b1 is not on the table, block b4 is not being held, block b5 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2 and block b1 is not on block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held and block b1 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held and block b1 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is not on the table, block b3 is not on the table, block b7 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4 and block b5 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve b5. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve b1. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve b2. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve b3. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b3. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b7. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b4 is on block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b1 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b1 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b6 is on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b4 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b3 is on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b5 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b2 is not on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b7 is not on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b3 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b2 is not on block b7?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is it True or False that block b1 is not on block b7?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b4, block b2 is on the table and block b5 is on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is on block b2, block b7 is on block b2, block b5 is on block b2, block b2 is on block b3, block b2 is being held, block b6 is on block b4, block b1 is on block b4, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table and block b2 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is on block b4, block b3 is on block b5, block b4 is on block b5, block b3 is being held, block b5 is on block b3, block b6 is on block b1, block b6 is on block b7, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table and block b2 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is on block b6, block b1 is on block b4, block b7 is on block b2, block b2 is on block b6, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table and block b5 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is clear, block b6 is on block b2, block b5 is on block b4, block b1 is on block b3, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table and block b5 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is on block b4, block b1 is on block b5, block b2 is on block b1, block b1 is on block b3, block b6 is on block b1, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear and block b1 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: hand is not empty, block b2 is not on the table, block b7 is not clear, block b6 is not on the table, block b6 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1 and block b3 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is not on the table, block b7 is not clear, block b2 is not clear, block b6 is not on the table, hand is not empty, block b1 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3 and block b4 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is not on the table, block b3 is not clear, block b2 is not on the table, block b6 is not on the table, block b7 is not clear, block b6 is not clear, block b5 is not on block b1, block b3 is not on the table, block b4 is not on the table, block b5 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2 and block b4 is not on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is not on the table, block b5 is not on block b1, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held and block b2 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not clear, block b7 is not clear, block b5 is not on block b1, block b1 is not on the table, block b6 is not clear, hand is not empty, block b2 is not clear, block b6 is not on the table, block b2 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5 and block b7 is not on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve b3. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve b2. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve b4. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve b5. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve b1. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b7. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b3. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b7 is on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b1 is on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b5 is on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b4 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b6 is on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b4 is being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b4 is not on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b1 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b6 is not on block b7?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b4 is not on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b5 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is it True or False that block b4 is not on block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b7 is on block b4, block b2 is clear, block b3 is being held and block b5 is on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is on block b5, block b5 is being held, block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b7 is on block b4 and block b2 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is clear, block b3 is on block b6, block b7 is on block b5, block b5 is on block b3, block b5 is clear, block b1 is on block b4, block b3 is on block b1, block b4 is on block b7 and block b6 is on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is on block b6, block b4 is on block b7, block b7 is on block b2, block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table and block b7 is on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b6 is on block b4, block b4 is on block b1, block b4 is on block b5, block b4 is on block b7, block b3 is on block b7, block b1 is on block b4, block b5 is clear, block b6 is on block b1 and block b6 is on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is on block b3, block b2 is being held, block b2 is on block b1, block b2 is on block b4, block b4 is on block b5, block b3 is on block b6, block b7 is on block b2, block b6 is on the table and block b6 is on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b4 is not clear, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not on block b1, block b4 is not on the table, block b1 is not on the table, block b2 is not clear, block b3 is not being held, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1 and block b3 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is not on block b4, block b3 is not being held, block b6 is not on block b5, block b1 is not on the table, block b4 is not on the table, block b2 is not clear, block b5 is not on block b1, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty and block b2 is not on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is not on the table, block b2 is not on block b6, block b6 is not on block b5, block b7 is not clear, block b4 is not on the table, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1 and block b3 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is not on block b4, block b6 is not on block b5, block b7 is not clear, block b2 is not on block b6, block b4 is not on the table, block b3 is not being held, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table and block b4 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b5 is not on block b1, block b7 is not on block b4, block b6 is not on block b5, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4 and block b4 is not clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve b5. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve b4. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve b3. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve b2. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve b1. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b2. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b3. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b2 is being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b3 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b7 is on block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b4 is on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b4 is being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b5 is on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b5 is not on block b7?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b7 is not clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b7 is not on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b6 is not on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b2 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is it True or False that block b4 is not on block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b4 is being held, block b7 is on block b3 and block b5 is on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on block b5, block b4 is on the table, block b4 is on block b6, block b1 is being held, block b2 is on block b4, block b2 is on the table, block b1 is on block b5 and block b3 is on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b2 is on block b1, block b5 is on block b2, block b1 is on block b5, block b5 is on block b3, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6 and block b7 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is on block b4, block b5 is on the table, block b1 is on block b7, block b4 is on block b6, block b2 is on block b1, block b1 is being held, block b3 is on block b2 and block b6 is on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is on the table, block b5 is on block b6, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table and block b4 is being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is on block b1, block b4 is on block b2, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table and block b4 is being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is not being held, block b5 is not on block b1, block b3 is not on block b2, block b6 is not on block b5, block b2 is not on block b6, block b1 is not on the table, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table and block b4 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is not being held, block b7 is not clear, block b6 is not on block b5, block b2 is not on block b6, block b3 is not on block b2, block b7 is not on block b3, block b5 is not on block b1, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty and block b2 is not on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b4 is not being held, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held and block b1 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b1 is not on the table, block b4 is not being held, block b2 is not on block b6, block b6 is not on block b5, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1 and block b1 is not on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties of the state True or False: block b7 is not clear, block b5 is not on block b1, block b4 is not being held, block b2 is not on block b6, block b6 is not on block b5, block b3 is not on block b2, block b7 is not on block b3, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty and block b2 is not on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve b4. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve b3. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve b6. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve b1. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve b7. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve b2. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b5. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b2. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b1. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b6. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b7. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations that involve b4. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b1 is being held, block b7 is on block b4, block b3 is on block b6, block b1 is on block b5, block b3 is on block b2, block b6 is being held, block b7 is on block b1, block b2 is clear, block b5 is on block b4 and block b7 is clear, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b6 is on block b1, block b2 is on block b1, block b3 is on block b4, block b3 is on block b1, block b3 is on block b7, block b6 is on block b5, block b1 is on block b5, block b4 is on block b5, block b7 is on block b1 and block b2 is clear, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b5 is on block b2, block b5 is on block b3, block b1 is clear, block b3 is on block b4, block b4 is on the table, block b2 is on block b1, block b7 is being held, block b3 is clear, block b4 is clear and block b2 is clear, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6, block b2 is on the table, block b3 is being held and block b4 is on block b1, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b6 is on block b4, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b6, block b2 is on the table and block b3 is being held, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b6 is on block b4, hand is empty, block b4 is on block b3, block b2 is on block b7, block b6 is on block b2, block b2 is clear, block b5 is on block b4, block b7 is clear, block b1 is on the table and block b5 is clear, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b2 is not clear, block b6 is not on the table, block b4 is not on block b1, block b5 is not on block b4, block b1 is not on the table, block b7 is not on block b6, block b7 is not clear, block b2 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3 and block b3 is not clear, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b5 is not on block b4, block b6 is not on the table, block b5 is not clear, block b2 is not clear, block b4 is not on block b1, block b1 is not on the table, block b3 is not being held, block b7 is not on block b6, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3 and block b3 is not clear, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b3 is not being held, block b2 is not on the table, block b7 is not on block b6, block b5 is not clear, block b7 is not clear, block b5 is not on block b4, block b6 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear and block b3 is not on the table, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b6 is not on the table, block b4 is not on block b1, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1 and block b2 is not being held, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, are all of the following properties: block b5 is not clear, block b4 is not on block b1, block b1 is not on the table, block b7 is not on block b6, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b3 is not on block b1 and block b1 is not on block b4, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b6 is being held, block b1 is on block b3, block b7 is on block b1, block b5 is on block b4, block b5 is on block b6, block b5 is on block b3, block b2 is clear, block b7 is on the table, block b3 is clear, block b3 is on the table and block b1 is clear, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b4 is being held, block b7 is on block b6, block b6 is on the table and block b2 is on the table, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b4 is on the table, block b6 is on block b2, block b1 is on block b2, block b4 is on block b5, block b5 is on the table, block b3 is being held, block b7 is on the table, block b7 is on block b4, block b4 is clear, block b5 is on block b4 and block b3 is clear, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b7 is on block b2, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b4 is being held, block b7 is on block b6 and block b6 is on the table, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b5 is on block b6, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear, block b4 is being held, block b7 is on block b6 and block b6 is on the table, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b1 is on block b6, block b4 is on block b5, block b6 is on block b5, block b3 is clear, block b3 is on the table, block b1 is clear, block b5 is on block b2, block b7 is clear, block b1 is on the table, block b5 is clear and block b4 is being held, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b5 is not on block b1, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b3 is not on the table, block b3 is not clear, block b6 is not on the table, block b2 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1 and block b1 is not on block b4, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b3 is not on the table, block b2 is not on the table, block b5 is not clear, block b1 is not clear, block b3 is not clear, block b5 is not on block b2, block b4 is not being held, block b7 is not on block b6, block b6 is not on the table, block b7 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table and block b6 is not on block b2, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b6 is not on the table, block b3 is not clear, block b4 is not being held, block b5 is not clear, block b5 is not on block b2, block b2 is not on the table, block b1 is not clear, block b7 is not clear, block b3 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2 and block b1 is not on block b3, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b2 is not on the table, block b5 is not on block b2, block b1 is not on the table, block b3 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1, block b3 is not on block b1 and block b1 is not on block b4, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, are all of the following properties: block b5 is not clear, block b5 is not on block b2, block b3 is not clear, block b2 is not on the table, block b7 is not on block b6, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b5, block b6 is not on block b7, block b5 is not on block b7, block b7 is not on block b5, block b7 is not on block b3, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not being held, hand is not empty, block b4 is not on block b1 and block b3 is not on block b1, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b4 is on block b2, block b6 is on block b5, block b5 is on block b6, block b7 is on the table, block b7 is on block b6, block b5 is on block b7, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear and block b7 is clear, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table, block b5 is clear, block b6 is on the table, block b7 is on block b4, block b2 is on the table and block b5 is on block b1, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b3 is on block b2, block b3 is being held, block b4 is on block b1, block b1 is on block b3, block b6 is on block b4, block b2 is being held, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear and block b7 is clear, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b2 is on block b7, block b7 is on block b5, block b3 is on block b6, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table, block b5 is clear and block b6 is on the table, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b5 is on the table, block b6 is on block b5, block b1 is being held, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty, block b3 is on the table, block b2 is clear, block b7 is clear, block b1 is on the table, block b5 is clear and block b6 is on the table, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b7 is on block b3, block b4 is being held, block b5 is on block b3, block b5 is on the table, block b3 is on block b1, block b7 is on the table, block b2 is on block b7, block b7 is on block b2, block b4 is on the table, block b3 is clear, block b6 is clear, hand is empty and block b3 is on the table, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b6 is not clear, hand is not empty, block b7 is not clear, block b2 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1 and block b1 is not on block b4, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b4 is not on the table, block b6 is not on the table, block b5 is not clear, block b5 is not on block b1, hand is not empty, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1 and block b3 is not on block b1, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b3 is not clear, block b2 is not on the table, hand is not empty, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4 and block b3 is not being held, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b5 is not on block b1, block b7 is not clear, block b2 is not on the table, block b6 is not clear, block b4 is not on the table, hand is not empty, block b3 is not on the table, block b3 is not clear, block b5 is not clear, block b2 is not clear, block b6 is not on the table, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5 and block b1 is not on block b2, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, are all of the following properties: block b1 is not on the table, block b6 is not on the table, block b7 is not clear, block b5 is not clear, block b5 is not on block b1, block b2 is not clear, block b4 is not on the table, block b7 is not on block b4, block b6 is not clear, block b3 is not clear, block b3 is not on block b5, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b5, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b5, block b1 is not on block b2 and block b4 is not on block b5, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b7 is on block b4, block b2 is clear, block b3 is being held and block b5 is on block b1, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b6 is on block b4, block b4 is on block b6, block b5 is on block b3, block b6 is on block b1, block b2 is on block b1, hand is empty, block b2 is being held, block b6 is on block b5 and block b4 is on the table, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b2 is on the table, block b7 is on block b1, block b1 is on block b5, block b6 is on block b2, block b5 is on block b3, block b6 is on block b5, block b4 is on the table, block b2 is on block b6 and block b7 is clear, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b5 is clear, block b4 is on block b6, block b2 is being held, block b2 is on block b5, block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear and block b1 is on the table, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b1 is being held, block b6 is being held, block b4 is on block b7, block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table and block b7 is on block b4, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b5 is clear, block b6 is on block b5, block b4 is on the table, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b7 is on block b4, block b2 is clear and block b3 is being held, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b1 is not on the table, block b2 is not clear, block b3 is not being held, block b7 is not on block b4, block b4 is not on the table, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1 and block b3 is not on block b1, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b4 is not clear, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b5 is not on block b1, block b7 is not on block b4, block b2 is not clear, block b4 is not on the table, block b2 is not on block b6, block b7 is not clear, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table and block b4 is not on block b1, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b2 is not on block b6, block b7 is not on block b4, block b4 is not on the table, block b3 is not being held, block b2 is not clear, block b1 is not on the table, block b5 is not on block b1, block b7 is not clear, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table and hand is not empty, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b2 is not clear, block b5 is not on block b1, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b4 is not clear and block b2 is not being held, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, are all of the following properties: block b5 is not on block b1, block b7 is not on block b4, block b3 is not being held, block b2 is not on block b6, block b7 is not clear, block b2 is not clear, block b6 is not on block b5, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b4 is not being held, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b7 is not on block b3, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b3 is not on block b2, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty and block b2 is not on the table, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b7 is on the table, block b3 is on block b1, block b1 is on block b3, block b4 is on block b1, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6 and block b7 is clear, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b4 is on block b2, block b5 is on block b2, hand is empty, block b2 is on the table, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6 and block b7 is clear, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b2 is on block b4, block b1 is on block b5, block b6 is on block b7, block b6 is on block b3, block b4 is on block b1, block b3 is on block b2, block b6 is on block b5 and block b2 is on block b6, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b4 is being held, block b7 is on block b3 and block b5 is on block b1, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b5 is clear, block b7 is on the table, block b3 is clear, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear and block b1 is on the table, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b7 is on the table, block b3 is on block b2, block b6 is on block b5, block b2 is on block b6, block b7 is clear, block b1 is on the table, block b4 is being held and block b7 is on block b3, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b3 is not on block b2, block b4 is not being held, block b5 is not on block b1, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4 and block b3 is not being held, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held, block b1 is not being held and block b6 is not on block b3, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b1 is not on the table, block b2 is not on block b6, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held and block b2 is not being held, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b7 is not clear, block b6 is not on block b5, block b7 is not on block b3, block b4 is not being held, block b2 is not on block b6, block b5 is not on block b1, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table and block b4 is not on block b1, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b7 is not on block b3, block b6 is not on block b5, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held and block b2 is not being held, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, are all of the following properties: block b3 is not on block b2, block b3 is not on block b5, block b6 is not on the table, block b4 is not on block b6, block b4 is not on block b2, block b7 is not on block b4, block b2 is not on block b1, block b1 is not on block b7, block b3 is not on block b6, block b6 is not on block b1, block b4 is not on block b3, block b2 is not on block b3, block b6 is not on block b7, block b7 is not on block b6, block b5 is not on block b7, block b5 is not clear, block b5 is not on block b2, block b7 is not on block b5, block b1 is not clear, block b5 is not on block b3, block b4 is not on block b7, block b6 is not on block b4, block b5 is not on block b6, block b3 is not on block b4, block b4 is not on the table, block b7 is not being held, block b2 is not on block b4, block b5 is not on block b4, block b2 is not on block b7, block b5 is not on the table, block b7 is not on block b1, block b4 is not clear, block b7 is not on block b2, block b3 is not on block b7, block b1 is not on block b6, block b6 is not being held, block b2 is not on block b5, block b5 is not being held, block b2 is not clear, block b6 is not clear, block b1 is not on block b5, block b1 is not on block b2, block b4 is not on block b5, block b7 is not on the table, block b6 is not on block b2, block b1 is not on block b3, block b3 is not clear, block b3 is not on the table, hand is not empty, block b2 is not on the table, block b4 is not on block b1, block b3 is not on block b1, block b1 is not on block b4, block b3 is not being held, block b2 is not being held and block b1 is not being held, correct? Respond with True or False.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b6 is stacked on top block b3. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b2 is stacked on top block b4. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b1 is stacked on top block b4. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b7 is stacked on top block b1. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b7 is unstacked from block b4. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: block b3 is unstacked from block b7. Is the action: block b3 is unstacked from block b7 executable at step 1, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: block b7 is picked up. Is the action: block b7 is picked up executable at step 1, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: block b4 is unstacked from block b7. Is the action: block b4 is unstacked from block b7 executable at step 1, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: block b4 is stacked on top block b3. Is the action: block b4 is stacked on top block b3 executable at step 1, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: block b3 is picked up. Is the action: block b3 is picked up executable at step 1, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: block b6 is unstacked from block b4. Is the action: block b6 is unstacked from block b4 executable at step 1, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all executable actions. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b2 is unstacked from block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b4 is unstacked from block b5 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b2 is stacked on top block b3 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b5 is stacked on top block b7 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b7 is unstacked from block b6 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b1 is stacked on top block b5 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b6 is stacked on top block b1 and block b4 is unstacked from block b1. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b5 is picked up, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b3 is unstacked from block b2, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b4 is stacked on top block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b4 is stacked on top block b1, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is the action: block b5 is stacked on top block b2 executable at step 4, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b1 is stacked on top block b5, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is the action: block b1 is stacked on top block b5 executable at step 3, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b3 is unstacked from block b7, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is the action: block b3 is unstacked from block b7 executable at step 3, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b2 is unstacked from block b6 and block b4 is unstacked from block b1. Is the action: block b2 is unstacked from block b6 executable at step 4, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is the action: block b3 is put down executable at step 2, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: block b7 is unstacked from block b6, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1. Is the action: block b7 is unstacked from block b6 executable at step 1, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all executable actions. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b4 is stacked on top block b2, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b1 is stacked on top block b5, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b2 is unstacked from block b5 and block b4 is unstacked from block b1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b2 is stacked on top block b3 and block b4 is unstacked from block b1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b5 is stacked on top block b3, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b3 is unstacked from block b1 and block b7 is stacked on top block b4. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b7 is unstacked from block b6, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b2 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b6 is stacked on top block b5, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is the action: block b3 is unstacked from block b7 executable at step 1, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b1 is unstacked from block b7, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is the action: block b1 is unstacked from block b7 executable at step 7, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is the action: block b4 is put down executable at step 6, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b2 is unstacked from block b6, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is the action: block b2 is unstacked from block b6 executable at step 5, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: block b3 is unstacked from block b7, block b2 is unstacked from block b7, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4. Is the action: block b2 is unstacked from block b7 executable at step 2, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b6 is unstacked from block b3 and block b7 is stacked on top block b4. Is the action: block b6 is unstacked from block b3 executable at step 9, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all executable actions. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b1 is picked up, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b5 is put down and block b7 is stacked on top block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b2 is unstacked from block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b5 is stacked on top block b3, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b7 is stacked on top block b6, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b5 is stacked on top block b7, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is unstacked from block b2, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b1 is stacked on top block b3, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is unstacked from block b1. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b1 is unstacked from block b7, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is the action: block b7 is unstacked from block b6 executable at step 9, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b6 is unstacked from block b2. Is the action: block b6 is unstacked from block b2 executable at step 15, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: block b3 is unstacked from block b2, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is the action: block b3 is unstacked from block b2 executable at step 1, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b2 is stacked on top block b5, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is the action: block b2 is stacked on top block b5 executable at step 9, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is the action: block b6 is picked up executable at step 11, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is picked up, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up. Is the action: block b5 is picked up executable at step 7, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all executable actions. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, list all inexecutable actions. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b4 is stacked on top block b7 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b7, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b1 is unstacked from block b6, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b7 is stacked on top block b6 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b1 is put down, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b1 is unstacked from block b5, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b4 is unstacked from block b1, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b6 is stacked on top block b1. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b2 is unstacked from block b3, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is unstacked from block b3. Is it possible to execute it, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is the action: block b6 is picked up executable at step 11, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is the action: block b3 is stacked on top block b2 executable at step 16, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b3 is unstacked from block b5, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is the action: block b3 is unstacked from block b5 executable at step 8, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b2 is put down, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is the action: block b2 is put down executable at step 8, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b3 is stacked on top block b6, block b7 is stacked on top block b3 and block b4 is picked up. Is the action: block b3 is stacked on top block b6 executable at step 17, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b3 is put down, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up. Is the action: block b3 is put down executable at step 10, True or False?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all executable actions. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, list all inexecutable actions. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b3 is stacked on top block b4, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b2 is unstacked from block b1, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b5 is unstacked from block b4, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b1 is put down, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b7 is unstacked from block b1, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that hand is empty, block b3 is clear, block b3 is on the table and block b3 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that hand is empty, block b3 is on the table, block b3 is not being held and block b3 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b3 is not being held, hand is empty, block b3 is on the table and block b3 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b3 is on the table, hand is empty, block b3 is not being held and block b3 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b3 is clear, hand is empty, block b3 is on the table and block b3 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b3 is not being held, block b3 is clear, hand is empty and block b3 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b3 is clear, block b2 is not on block b3, block b1 is not on block b2 and block b7 is on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b7 is not being held, block b1 is not on block b6, hand is empty and block b3 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b3 is not being held, block b7 is clear, hand is empty and block b3 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b3 is clear, block b5 is being held, hand is empty and block b7 is not on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that hand is empty, block b3 is clear, block b3 is being held and block b3 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, is it True or False that block b3 is clear, hand is empty, block b1 is not on block b6 and block b3 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, what would be all of the valid properties of the state? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, if block b3 is put down, what would be all of the valid properties of the state that involve negations? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that hand is empty, block b4 is not being held, block b4 is on the table and block b4 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b4 is not being held, block b4 is clear, hand is empty and block b4 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b4 is on the table, hand is empty, block b4 is not being held and block b4 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b4 is clear, block b4 is not being held, hand is empty and block b4 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b4 is not being held, hand is empty, block b4 is clear and block b4 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b4 is clear, hand is empty, block b4 is not being held and block b4 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b3 is on block b2, hand is empty, block b4 is not being held and block b5 is not on block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b5 is not being held, block b4 is not being held, block b4 is not clear and block b7 is on block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b4 is not being held, block b7 is not on block b3, block b5 is not on the table and hand is empty?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b2 is not on block b6, hand is empty, block b4 is not being held and block b5 is not on block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b5 is not being held, hand is empty, block b4 is not being held and block b6 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, is it True or False that block b5 is clear, block b4 is not being held, hand is empty and block b4 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, what would be all of the valid properties of the state? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, if block b4 is put down, what would be all of the valid properties of the state that involve negations? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that hand is not empty, block b6 is not on the table, block b6 is being held and block b6 is not clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b6 is not on the table, block b6 is not clear, hand is not empty and block b6 is being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b6 is not on the table, hand is not empty, block b6 is being held and block b6 is not clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that hand is not empty, block b6 is being held, block b6 is not clear and block b6 is not on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b6 is being held, hand is not empty, block b6 is not clear and block b6 is not on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b6 is not on the table, block b6 is being held, block b6 is not clear and hand is not empty?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b5 is not being held, block b6 is not on the table, block b6 is being held and block b7 is not on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b6 is on block b5, block b6 is not on the table, block b6 is being held and block b5 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b6 is being held, block b3 is on block b2, block b4 is not clear and block b1 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b3 is not clear, block b6 is being held, block b3 is on block b2 and block b2 is not on block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b2 is not being held, block b4 is not on block b7, block b6 is being held and block b2 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, is it True or False that block b6 is being held, block b5 is not being held, block b4 is on the table and block b7 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, what would be all of the valid properties of the state? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, if block b6 is picked up, what would be all of the valid properties of the state that involve negations? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b3 is clear, hand is empty, block b3 is on block b2, block b3 is not being held and block b2 is not clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b3 is not being held, hand is empty, block b2 is not clear, block b3 is clear and block b3 is on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b2 is not clear, block b3 is not being held, block b3 is clear, block b3 is on block b2 and hand is empty?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b2 is not clear, hand is empty, block b3 is on block b2, block b3 is clear and block b3 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b2 is not clear, hand is empty, block b3 is clear, block b3 is on block b2 and block b3 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b3 is on block b2, block b2 is not clear, block b3 is clear, block b3 is not being held and hand is empty?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b3 is clear, block b3 is not being held, hand is empty, block b3 is on block b2 and block b1 is not on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b6 is on block b5, block b2 is not on block b5, hand is empty, block b3 is on block b2 and block b4 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b6 is not being held, block b4 is not on the table, block b5 is on block b1, hand is empty and block b2 is not on block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that hand is empty, block b5 is not on block b1, block b4 is clear, block b3 is on block b2 and block b1 is not on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b6 is not on the table, block b7 is not on block b5, block b2 is not on block b7, hand is empty and block b4 is not on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, is it True or False that block b5 is on block b2, hand is empty, block b1 is on the table, block b4 is not on block b3 and block b5 is not on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, what would be all of the valid properties of the state? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, if block b3 is stacked on top block b2, what would be all of the valid properties of the state that involve negations? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b4 is on block b7, block b4 is clear, block b7 is not clear, hand is empty and block b4 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that hand is empty, block b7 is not clear, block b4 is on block b7, block b4 is not being held and block b4 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b4 is not being held, block b4 is on block b7, hand is empty, block b7 is not clear and block b4 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b4 is on block b7, block b4 is clear, block b4 is not being held, block b7 is not clear and hand is empty?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that hand is empty, block b4 is on block b7, block b4 is not being held, block b4 is clear and block b7 is not clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b4 is not being held, block b4 is on block b7, block b4 is clear, block b7 is not clear and hand is empty?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b6 is not on block b1, hand is empty, block b2 is not being held, block b7 is not clear and block b4 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b7 is not clear, block b3 is not on block b5, block b2 is not on block b4, block b3 is not on block b1 and block b6 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b6 is not on block b4, block b1 is not clear, block b7 is not on block b1, block b7 is not clear and block b5 is not on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b7 is not clear, block b6 is not on block b5, hand is empty, block b4 is not being held and block b4 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that block b4 is not on block b7, block b5 is not on block b3, block b6 is not on block b7, block b7 is not clear and block b1 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, is it True or False that hand is empty, block b4 is clear, block b2 is on the table, block b4 is not being held and block b7 is not clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, what would be all of the valid properties of the state? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, if block b4 is stacked on top block b7, what would be all of the valid properties of the state that involve negations? Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of objects equal to 5? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of objects equal to 7? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of objects equal to 9? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of objects equal to 8? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of objects equal to 6? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of executable actions equal to 5? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of executable actions equal to 4? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of executable actions equal to 3? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 94? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 93? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 109? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 97? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 76? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, is the number of inexecutable actions equal to 84? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 0?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b1 is stacked on top block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b7 is unstacked from block b3 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b5 is unstacked from block b6 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b4 is stacked on top block b7 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b2 is unstacked from block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b5 is stacked on top block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of objects equal to 7? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of objects equal to 5? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of objects equal to 8? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of objects equal to 6? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of objects equal to 9? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of executable actions equal to 7? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of executable actions equal to 4? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of executable actions equal to 6? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of executable actions equal to 5? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of executable actions equal to 3? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 93? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 77? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 90? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 96? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 89? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, is the number of inexecutable actions equal to 109? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 7?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b7 is stacked on top block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b6 is stacked on top block b3 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b7 is stacked on top block b5 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b6, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b5, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b4 is unstacked from block b5, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of objects equal to 5? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of objects equal to 9? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of objects equal to 7? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of objects equal to 8? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of objects equal to 6? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of executable actions equal to 5? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of executable actions equal to 4? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of executable actions equal to 6? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of executable actions equal to 3? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of executable actions equal to 7? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 93? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 77? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 89? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 86? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 108? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, is the number of inexecutable actions equal to 101? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 10?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 12?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 11?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 9?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 8?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 13?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b3 is put down, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b1 is stacked on top block b5, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b1 is picked up, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b2 is unstacked from block b4, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b3 is unstacked from block b4, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b6 is stacked on top block b7, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of objects equal to 9? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of objects equal to 7? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of objects equal to 8? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of objects equal to 6? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of objects equal to 5? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of executable actions equal to 2? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of executable actions equal to 3? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of executable actions equal to 4? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 103? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 85? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 96? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 95? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 97? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 78? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 11?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 17?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 12?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 16?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b3 is stacked on top block b7, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is unstacked from block b4 and block b3 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b1 is stacked on top block b3, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b2 is put down, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b4 is stacked on top block b7, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b4 is put down, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of objects equal to 7? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of objects equal to 8? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of objects equal to 5? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of objects equal to 9? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of objects equal to 6? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of executable actions equal to 1? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of executable actions equal to 2? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of executable actions equal to 3? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 96? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 116? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 108? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 112? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 93? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, is the number of inexecutable actions equal to 94? True or False

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 23?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 20?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 22?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 17?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b1 is unstacked from block b4 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b7 is stacked on top block b2, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b2 is stacked on top block b4, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b1 is unstacked from block b5, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b6 is unstacked from block b7, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b6, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b1 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b2 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b5 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is being thrown?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is under the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is under block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not under block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not under block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not under block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is not under block b7?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not on block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is crashed from block b7, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is stacked on top block b2, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is lowered, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is stacked on top block b5, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is put down, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is stacked on top block b7, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b6 is crashed from block b2, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b5 is stacked on top block b7, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b2 is crashed from block b4, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b2 is crashed from block b1, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b7 is stacked on top block b4, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b2 is crashed from block b5, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b2, b6, b5 and b4, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b2, b3, b6, b4 and b1, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b2, b7, b1 and b8, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b3, b6, b4, b2 and b7, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b7, b6, b3, b5, b4 and b2, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b4, b8 and b3, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b6 is on the table, block b2 is on the table, block b3 is being held, block b1 is on the table, block b2 is clear, block b5 is on block b4, block b7 is on block b6, block b5 is clear, block b7 is clear and block b4 is on block b1, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is being held and block b5 is under block b4, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b6 is on the table, block b5 is under block b4, block b2 is on the table, block b5 is clear, block b7 is clear, block b7 is on block b6 and block b1 is on the table, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b4 is on block b1 and block b2 is on the table, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b4 is on block b1, block b1 is under the table, block b7 is on block b6, block b2 is on the table, block b5 is clear and block b6 is on the table, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is being held, block b7 is lost, block b4 is on block b1, block b5 is clear, block b1 is on the table, block b6 is on the table and block b5 is on block b4, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not clear, block b7 is not being held, block b1 is not on block b3, block b1 is not on block b6, block b2 is not being held, block b2 is not on block b7, block b4 is not on block b5, block b6 is not clear, block b4 is not on block b7, block b4 is not on block b3, block b2 is not on block b4, block b7 is not on block b3, block b2 is not on block b5, block b1 is not on block b7, hand is not empty, block b1 is not on block b2, block b2 is not on block b3, block b3 is not on block b1, block b5 is not being held, block b6 is not on block b1, block b3 is not on block b7, block b7 is not on block b2, block b7 is not on block b4, block b6 is not on block b5, block b5 is not on block b3, block b6 is not on block b2, block b6 is not on block b4, block b6 is not on block b7, block b5 is not on block b7, block b3 is not on block b5 and block b3 is not on the table, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, hand is not empty, block b6 is not on block b4, block b1 is not clear, block b6 is not on block b1, block b3 is not on block b7, block b5 is not on the table, block b3 is not on block b5, block b6 is not on block b5, block b7 is not on the table, block b1 is not on block b5, block b5 is not on block b6, block b2 is not on block b1, block b4 is not on block b5, block b1 is not on block b2, block b6 is not clear, block b5 is not on block b3, block b3 is not clear, block b2 is not on block b4, block b4 is not on block b2, block b7 is not on block b2, block b7 is not on block b3, block b6 is not on block b7, block b2 is not on block b7, block b1 is not on block b6, block b1 is not on block b7, block b2 is not on block b5, block b6 is not on block b2, block b5 is not on block b2, block b4 is not clear, block b4 is not being held, block b7 is not on block b5, block b3 is not on the table, block b5 is not being held, block b4 is not on block b3, block b7 is not being held, block b7 is not on block b1, block b3 is not on block b1, block b1 is not on block b3 and block b4 is not on block b7, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b1 is not being held, block b2 is not on block b1, block b5 is not on block b1, block b2 is not being held, block b1 is not on block b5, block b3 is not on block b6, block b4 is not on block b3, block b2 is not on block b4, block b6 is not on block b1, block b4 is not on block b5, block b2 is not under block b6, block b2 is not on block b5, block b6 is not on block b2 and block b7 is not on block b1, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b7 is not on block b2, block b7 is not on the table and hand is not empty, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on block b6, block b1 is not on block b4, block b6 is not on block b2, block b1 is not on block b2, block b2 is not on block b3, block b7 is not on block b3, block b3 is not on block b2, block b7 is not on block b1, block b1 is not being held, block b3 is not on block b6, block b7 is not on block b2, block b4 is not clear, block b2 is not on block b6, block b4 is not being held, block b3 is not on block b1, block b7 is not on the table, block b6 is not on block b1, hand is not empty, block b7 is not being held, block b5 is not on block b1, block b3 is not on block b4, block b1 is not on block b6, block b5 is not on block b3, block b1 is not on block b7, block b4 is not on block b7, block b4 is not on block b3, block b6 is not on block b3, block b7 is not on block b5, block b2 is not on block b7, block b3 is not on block b5, block b3 is not on the table, block b6 is not clear, block b6 is not on block b7, block b4 is not on block b5, block b6 is not on block b4, block b2 is not on block b1, block b4 is not on block b6, block b1 is not clear, block b5 is not on the table, block b3 is not on block b7, block b5 is not under block b7, block b1 is not on block b3, block b1 is not on block b5, block b6 is not being held, block b7 is not on block b4, block b4 is not on block b2, block b2 is not being held, block b3 is not clear and block b2 is not on block b4, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on block b2, block b6 is not on block b2, block b4 is not under block b6, block b4 is not on block b5, block b2 is not being held, block b1 is not clear, block b7 is not on block b2, hand is not empty, block b2 is not on block b1, block b4 is not on block b2, block b4 is not on block b3, block b1 is not on block b2, block b5 is not on block b1, block b6 is not on block b7, block b7 is not on block b4, block b4 is not being held, block b6 is not on block b3, block b2 is not on block b3, block b7 is not being held, block b2 is not on block b6, block b3 is not on block b2, block b1 is not on block b3, block b5 is not on block b6, block b2 is not on block b4, block b6 is not on block b5, block b3 is not clear and block b7 is not on block b3, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is removed from from block b7 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b7 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b5 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b1 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is lost?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is under block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is not under block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that hand is not empty?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not under the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not under block b7?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not on block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is crashed from block b7, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is stacked on top block b7, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is stacked on top block b1, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is put down, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is crashed from block b1, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is crashed from block b3, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b3 is unstacked from block b5, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b6 is picked up, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b1 is lowered, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b4 is stacked on top block b6, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b2 is lowered, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b1 is unstacked from block b2, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b3, b6 and b2, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b5, b8 and b4, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b6 and b3, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b7, b3, b1, b5, b4 and b6, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b4, b5, b1, b3 and b2, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b4, b6, b8, b2 and b7, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b4 is being held, block b7 is on block b6, block b5 is clear, block b1 is on the table, block b3 is on the table, block b6 is under the table, block b1 is clear, block b7 is clear, block b2 is on the table, block b3 is clear and block b5 is on block b2, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is on block b6, block b3 is clear, block b3 is on the table, block b6 is on the table, block b1 is clear and block b2 is on the table, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b6 is on the table, block b5 is on block b2, block b1 is clear, block b5 is clear, block b3 is under the table, block b2 is on the table, block b7 is clear, block b3 is clear and block b1 is on the table, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is on block b2, block b7 is on block b6, block b3 is clear, block b2 is on the table, block b1 is clear, block b6 is on the table, block b1 is on the table, block b7 is clear, block b5 is lost and block b3 is on the table, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b2 is on the table, block b1 is clear, block b7 is clear, block b3 is clear, block b4 is being held, block b7 is on block b6 and block b1 is on the table, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is on block b6 and block b5 is lost, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not under block b7, block b5 is not on block b7, block b1 is not on block b4, block b6 is not being held, block b1 is not on block b7, block b3 is not on block b1, block b7 is not on block b4, block b5 is not on block b1, block b4 is not on block b1, block b1 is not on block b5, block b6 is not on block b5, block b5 is not being held, hand is not empty and block b2 is not on block b5, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b2 is not being held, block b4 is not on block b7, block b3 is not on block b2, block b2 is not clear, block b3 is not being thrown, block b7 is not on the table, hand is not empty, block b7 is not on block b2, block b5 is not on block b4, block b4 is not on block b6, block b1 is not on block b7, block b7 is not on block b4, block b5 is not on block b1, block b1 is not on block b6, block b2 is not on block b1, block b2 is not on block b5, block b4 is not on block b2, block b3 is not on block b7, block b5 is not on block b3, block b3 is not on block b1, block b2 is not on block b4, block b6 is not on block b7, block b4 is not clear, block b4 is not on block b1, block b3 is not on block b4, block b7 is not on block b5, block b5 is not on the table, block b6 is not being held, block b7 is not on block b3, block b5 is not being held, block b2 is not on block b3, block b1 is not on block b5, block b6 is not on block b3, block b6 is not on block b1, block b2 is not on block b7, block b4 is not on block b5, block b5 is not on block b7, block b6 is not on block b4 and block b6 is not on block b2, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on block b3, block b5 is not being held, block b7 is not on block b3, block b7 is not on the table, block b3 is not being held, block b3 is not on block b6, block b5 is not on block b4, block b7 is not on block b2, block b7 is not on block b1, block b1 is not on block b5, block b1 is not on block b6, block b2 is not on block b5, block b6 is not on block b1, block b5 is not on block b7, block b4 is not on block b6, block b6 is not being held, block b7 is not on block b4, block b5 is not on block b1, block b4 is not on block b5, block b5 is not on block b6, block b4 is not on block b2, block b4 is not on block b7, block b2 is not on block b4, block b7 is not being held, block b3 is not on block b1, block b6 is not on block b4 and block b4 is not on the table, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b1 is not on block b4, block b5 is not being held, block b1 is not on block b5, block b7 is not on the table, block b6 is not on block b1, block b4 is not on block b3, block b1 is not on block b7, block b4 is not under block b5, block b7 is not on block b4, block b3 is not on block b2 and block b5 is not on block b7, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not being held, block b6 is not on block b7, block b5 is not on block b3, block b4 is not on block b1, block b4 is not on block b3, block b7 is not on block b2, block b7 is not on block b1, block b5 is not being held, block b4 is not on the table, block b2 is not clear, block b5 is not on block b1, block b2 is not on block b1, block b2 is not on block b3, block b1 is not being held, block b1 is not on block b7, block b3 is not on block b5, block b2 is not on block b5, block b1 is not on block b3, block b7 is not being held, block b4 is not clear, block b4 is not on block b2, block b3 is not on block b2, block b3 is not on block b4, block b3 is not on block b7, hand is not empty, block b6 is not on block b5, block b4 is not on block b6 and block b5 is not on block b6, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on block b7, block b6 is not on block b7, block b1 is not on block b3, block b1 is not on block b7, block b6 is not being held, block b2 is not on block b7, hand is not empty, block b1 is not on block b2, block b7 is not on the table, block b6 is not on block b3, block b7 is not on block b5, block b2 is not on block b6, block b4 is not on block b3, block b3 is not on block b5, block b3 is not on block b6, block b7 is not on block b1, block b1 is not on block b6, block b3 is not being held, block b7 is not on block b3, block b5 is not on block b1, block b6 is not clear, block b6 is not on block b2 and block b7 is not on block b4, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is lowered, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is removed from from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is crashed from block b2 and block b4 is unstacked from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is removed from from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is unstacked from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2 and block b4 is removed from from block b1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b1 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b2 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b7 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b5 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b3 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is under the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is lost?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that hand is broken?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is not on block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not under block b4?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is not under block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b2 is lifted, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b6 is picked up, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b6 is lifted, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is lifted, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b2 is picked up, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is picked up, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b3 is unstacked from block b4, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b2 is stacked on top block b7, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b6 is unstacked from block b3, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b3 is stacked on top block b5, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b6 is stacked on top block b7, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b6 is lowered, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b2, b5, b4 and b6, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b4, b6 and b5, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b4, b5, b6 and b2, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b3, b2, b1, b7 and b4, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b6, b7, b8, b2 and b1, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b2, b4, b7, b6, b3 and b1, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b2 is clear, block b3 is clear, block b6 is under the table, block b4 is on the table, block b7 is clear, block b2 is on the table, block b1 is on the table, block b5 is clear, block b5 is on block b1, hand is empty, block b3 is on the table and block b6 is clear, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b2 is on the table, block b2 is lost, block b3 is on the table, block b1 is on the table, block b5 is on block b1, block b6 is clear and block b7 is on block b4, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b2 is clear, block b2 is on the table and block b5 is clear, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is clear, block b3 is on the table, block b2 is lost, block b5 is clear, block b4 is on the table, block b6 is clear, block b7 is on block b4, block b2 is on the table and block b5 is on block b1, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is on the table, block b5 is clear, block b4 is under the table, hand is empty, block b2 is on the table, block b6 is clear, block b3 is on the table, block b7 is on block b4 and block b6 is on the table, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is clear, block b5 is on block b1, block b7 is clear, block b2 is under the table, block b1 is on the table, hand is empty and block b6 is clear, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b2 is not on block b7 and block b3 is not on block b7, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not on block b4, block b6 is not on block b3, block b5 is not on block b7, block b7 is not on block b1, block b4 is not on block b2, block b1 is not on block b4, block b4 is not on block b5, block b4 is not being held, block b6 is not on block b4, block b5 is not on block b6, block b7 is not on block b2, block b2 is not on block b3, block b6 is not on block b5, block b2 is not on block b7, block b5 is not on block b3, block b1 is not being held, block b4 is not on block b6, block b2 is not on block b5, block b6 is not on block b7, block b4 is not clear, block b6 is not being held, block b3 is not being held, block b6 is not on block b1, block b7 is not being held, block b3 is not on block b6, block b7 is not on block b5, block b3 is not on block b2, block b1 is not on block b3, block b5 is not being held, block b3 is not on block b5, block b1 is not clear, block b1 is not on block b2, block b7 is not on block b3, block b4 is not on block b7, block b4 is not on block b3, block b3 is not on block b7, block b5 is not on block b2, block b7 is not on the table, block b3 is not on block b1, block b2 is not being held, block b2 is not on block b6, block b6 is not on block b2, block b4 is not on block b1, block b5 is not on block b4 and block b2 is not on block b1, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b5 is not on block b3, block b3 is not on block b5, block b2 is not on block b1, block b1 is not on block b3, block b7 is not on block b2, block b6 is not on block b1, block b7 is not on block b1, block b7 is not on block b5, block b7 is not being held, block b1 is not on block b7, block b5 is not on block b2, block b3 is not on block b6, block b3 is not on block b1, block b2 is not being held, block b4 is not being held, block b1 is not on block b2, block b1 is not clear, block b4 is not on block b1, block b2 is not on block b7, block b6 is not on block b7, block b3 is not on block b7, block b2 is not on block b6, block b4 is not on block b7, block b5 is not on block b6, block b7 is not on block b6, block b1 is not on block b6, block b5 is not on block b4, block b3 is not on block b2, block b5 is not on block b7, block b2 is not on block b3, block b1 is not on block b5, block b4 is not clear, block b6 is not on block b2, block b6 is not on block b5, block b3 is not being held, block b4 is not on block b3, block b7 is not on the table and block b2 is not on block b4, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b2 is not on block b4, block b6 is not on block b5, block b2 is not on block b1, block b1 is not on block b2, block b7 is not under block b5, block b1 is not on block b5 and block b2 is not on block b5, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not under block b2, block b7 is not on block b6, block b1 is not on block b7, block b6 is not on block b4, block b2 is not on block b1, block b2 is not on block b4, block b5 is not on block b6, block b6 is not on block b7, block b3 is not on block b6, block b1 is not on block b6, block b6 is not on block b1, block b7 is not on block b5, block b1 is not clear, block b4 is not on block b3, block b4 is not on block b6, block b1 is not on block b5, block b5 is not on block b2, block b6 is not being held, block b1 is not being held, block b3 is not on block b1, block b5 is not on the table, block b1 is not on block b3, block b3 is not on block b5, block b2 is not on block b5, block b2 is not being held, block b5 is not on block b4, block b3 is not on block b4, block b7 is not on the table, block b7 is not on block b3, block b2 is not on block b6, block b2 is not on block b7, block b4 is not on block b5, block b3 is not on block b7, block b5 is not on block b7, block b4 is not clear, block b6 is not on block b2, block b4 is not on block b7, block b5 is not being held and block b6 is not on block b5, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not on block b4, block b6 is not on block b1, block b4 is not on block b2, block b2 is not on block b5, block b1 is not on block b7, block b6 is not on block b5, block b1 is not clear, block b5 is not on block b4, block b7 is not on block b1, block b3 is not on block b6, block b5 is not on block b2, block b3 is not on block b2, block b3 is not on block b1, block b4 is not on block b5, block b1 is not on block b4, block b7 is not on the table, block b5 is not on block b6, block b1 is not on block b6, block b3 is not on block b5, block b1 is not being held, block b2 is not being held, block b5 is not on the table, block b4 is not on block b3, block b7 is not on block b6, block b7 is not on block b5, block b6 is not on block b7, block b5 is not on block b3, block b1 is not on block b2, block b5 is not being held, block b2 is not on block b3, block b7 is not on block b3, block b2 is not on block b1, block b1 is not on block b5, block b2 is not on block b4, block b4 is not clear, block b5 is not on block b7, block b2 is not on block b7, block b4 is not being held, block b6 is not being held, block b2 is not on block b6, block b3 is not being held, block b7 is not on block b2, block b6 is not on block b4, block b4 is not on block b1, block b3 is not on block b7, block b1 is not on block b3, block b4 is not on block b7 and block b7 is not being held, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is removed from from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is removed from from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is lowered, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is removed from from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is stacked on top block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6 and block b7 is crashed from block b4 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b3 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b1 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b7 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is lost?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is under block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b4 is under the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is under block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not on block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not under block b1?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is not on block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is not under block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is stacked on top block b7, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is crashed from block b7, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is crashed from block b2, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is lowered, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is stacked on top block b2, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b3 is put down, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b7 is unstacked from block b2, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b1 is crashed from block b6, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b4 is stacked on top block b5, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b2 is crashed from block b5, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b1 is removed from from block b3, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b4 is unstacked from block b2, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b6, b4, b2, b7, b3 and b5, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b5, b4, b6, b7 and b2, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b3, b1 and b4, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b8, b1, b7 and b5, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b8, b6 and b3, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b3, b8, b2, b7, b6 and b1, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is on the table, block b4 is on the table, block b7 is clear, block b2 is clear, block b7 is under block b4 and block b2 is on block b6, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b2 is on block b6, block b5 is on block b1, block b7 is clear and block b3 is being held, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is on block b1, block b7 is on block b4 and block b4 is on the table, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is being held, block b7 is on block b4, block b5 is on block b1, block b1 is on the table, block b7 is clear and block b2 is on block b6, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is clear, block b7 is under block b4, block b1 is on the table, block b2 is on block b6 and block b3 is being held, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is under block b1 and block b3 is being held, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b4 is not on block b7, block b1 is not on block b7, block b4 is not on block b2, block b7 is not being held, block b1 is not on block b5, block b5 is not being held, block b6 is not on the table, block b3 is not on block b1, block b2 is not being held, block b4 is not on block b1, block b2 is not on block b1, block b3 is not on block b4, block b2 is not on the table, block b6 is not being held, block b4 is not on block b6, block b5 is not on block b6, block b4 is not on block b5, block b7 is not under block b5, block b5 is not on block b3, block b7 is not on block b6, block b5 is not on block b2, block b6 is not on block b3, block b5 is not on block b7, block b4 is not on block b3 and block b5 is not on the table, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b7 is not on block b6, block b2 is not on block b7, block b3 is not on block b2, block b5 is not on block b4, block b5 is not on block b2, block b1 is not on block b6 and block b2 is not on block b1, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b2 is not on block b7, block b1 is not being held, block b4 is not being held, block b2 is not on the table, block b4 is not on block b5, block b7 is not on block b6, block b5 is not on block b6, block b5 is not on block b3, block b1 is not on block b7, block b1 is not on block b6, block b5 is not on block b7, block b4 is not clear, block b1 is not clear, block b6 is not on block b7 and block b5 is not lost, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not on block b3, block b6 is not on the table, block b7 is not on the table, block b5 is not on block b6, block b4 is not on block b5, block b6 is not clear, block b7 is not on block b5, block b2 is not on block b5, block b1 is not being held, block b3 is not on block b4, block b3 is not clear, block b1 is not on block b7, block b5 is not on the table, block b6 is not being held, block b5 is not on block b3, block b5 is not on block b2, block b4 is not on block b1, block b1 is not on block b6, block b3 is not on block b1, block b6 is not on block b2, block b1 is not on block b3, block b4 is not on block b2, block b2 is not on block b3, block b7 is not on block b2, block b3 is not on the table, block b1 is not clear, block b4 is not on block b6, block b1 is not on block b2, block b3 is not on block b6, block b7 is not being held, block b4 is not on block b7, block b7 is not on block b1, block b5 is not being held, block b7 is not on block b3, block b2 is not on block b1, block b6 is not on block b1, block b6 is not on block b7, block b3 is not on block b2, block b4 is not on block b3, block b1 is not on block b4, block b5 is not on block b7, block b3 is not on block b7, block b5 is not clear, block b2 is not being held, block b2 is not on the table, block b7 is not on block b6, block b5 is not on block b4, block b2 is not on block b4, block b4 is not clear, block b6 is not on block b4, block b4 is not being held, block b1 is not under block b5, block b3 is not on block b5, hand is not empty and block b2 is not on block b7, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not on block b6, block b6 is not on block b4, block b7 is not on the table, block b7 is not on block b6, block b2 is not on block b7, block b2 is not on the table, block b1 is not on block b4, block b2 is not on block b5, block b3 is not on block b7, block b5 is not on block b2, block b7 is not on block b2, block b6 is not clear, block b4 is not on block b5, block b1 is not being held, block b5 is not on block b3, block b1 is not clear, block b4 is not on block b6, block b7 is not on block b3, block b4 is not on block b3, block b3 is not on the table, block b1 is not on block b2, block b5 is not being held, block b4 is not on block b2, block b6 is not on the table, block b6 is not on block b2, block b7 is not on block b5, block b7 is not on block b1, block b5 is not on the table, block b4 is not clear, block b4 is not on block b7, block b4 is not on block b1, block b2 is not on block b4, block b3 is not on block b4 and block b1 is not on block b3, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not on block b4, block b1 is not on block b5, block b5 is not on block b7, block b2 is not being held, block b3 is not on block b4, block b7 is not on the table, block b6 is not on block b2, block b4 is not on block b5, block b6 is not on the table, block b2 is not on block b1, block b1 is not on block b4, block b4 is not clear, block b2 is not on the table, block b7 is not on block b3, block b1 is not on block b7, block b5 is not clear, block b3 is not on block b5, block b4 is not on block b2, block b4 is not on block b7, block b2 is not on block b3, block b6 is not clear, block b1 is not on block b6, block b2 is not on block b5, block b5 is not on block b2, block b3 is not on the table, block b7 is not on block b5, block b5 is not on block b4 and block b7 is not on block b6, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is crashed from block b6 and block b3 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is crashed from block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is removed from from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is removed from from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is removed from from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6 and block b3 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b4 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b5 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b8 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b3 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b6 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Is it True or False that b7 is part of the state?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b3 is under block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b2 is under block b6?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is clear?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is lost?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b7 is under block b3?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is under the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is not on block b2?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not on block b7?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is not on the table?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b1 is not on block b5?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b5 is not on block b7?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that block b6 is not being held?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is lowered, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is crashed from block b7, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is put down, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, block b4 is stacked on top block b7, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b2 is stacked on top block b4, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b4 is unstacked from block b7, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b7 is unstacked from block b6, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b3 is crashed from block b1, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b7 is unstacked from block b4, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, block b6 is crashed from block b4, is defined?

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b2, b3 and b1, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b2, b4, b1, b7, b6, b3 and b5, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b3, b4, b1, b7 and b2, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b1, b6, b4, b3, b2 and b5, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b5, b3 and b6, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, b4, b2, b7, b8, b1 and b3, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b1 is on the table and block b6 is on block b5, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is on block b1, block b1 is on the table and block b2 is on block b6, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b3 is on block b2, block b2 is on block b6, block b4 is being thrown, block b6 is on block b5, block b7 is clear, block b7 is on block b3, block b1 is on the table and block b5 is on block b1, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b4 is being held, block b1 is on the table, block b7 is clear, block b5 is under block b1 and block b3 is on block b2, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b7 is on block b3 and block b4 is being held, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, block b5 is on block b1, block b7 is clear, block b4 is being held, block b1 is on the table, block b3 is on block b2, block b2 is on block b6 and block b6 is on block b5, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b4 is not on the table, block b3 is not on block b1, block b6 is not on block b1, block b1 is not on block b6, block b5 is not on block b4, block b2 is not on block b7, block b1 is not on block b7, block b1 is not on block b2, block b2 is not on block b1, block b4 is not on block b2, block b4 is not on block b5, block b3 is not on block b5, block b7 is not on block b4, block b7 is not being held, block b5 is not on block b6, block b5 is not under block b3, block b7 is not on block b5 and block b5 is not on the table, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not on block b3, block b4 is not on block b3, block b5 is not on block b6, block b3 is not on block b7, block b4 is not on block b2, block b2 is not on block b1, block b7 is not on block b6, block b7 is not on block b4, block b3 is not on block b6, block b5 is not on block b2, hand is not empty, block b7 is not being held, block b1 is not on block b3, block b2 is not on the table, block b5 is not clear, block b6 is not on block b2, block b3 is not on block b4, block b2 is not on block b7, block b3 is not on block b5, block b6 is not on the table, block b5 is not on block b7, block b5 is not on block b3, block b7 is not on block b5, block b1 is not clear, block b1 is not on block b6, block b7 is not on block b1 and block b4 is not on block b7, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not on block b1, block b2 is not clear, block b6 is not on block b7, block b5 is not being held, block b5 is not on the table and block b6 is not being held, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b3 is not on the table, block b3 is not on block b4, block b1 is not being held, block b6 is not on block b4, block b2 is not on block b5, block b7 is not being held, block b4 is not on block b3, hand is not empty, block b5 is not clear, block b2 is not clear, block b3 is not on block b5, block b5 is not being held, block b6 is not on the table, block b7 is not on the table, block b7 is not on block b5, block b4 is not on block b6, block b6 is not clear, block b3 is not clear, block b6 is not being held, block b4 is not on block b5, block b2 is not on the table, block b1 is not on block b2, block b1 is not on block b3, block b6 is not on block b3, block b7 is not on block b6, block b4 is not clear, block b2 is not on block b4, block b4 is not on the table, block b1 is not on block b5, block b6 is not on block b1, block b1 is not clear and block b2 is not on block b1, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not being held, block b7 is not on block b6, block b3 is not on block b6, block b7 is not on block b4, block b5 is not on block b7, block b4 is not on block b7, block b3 is not on block b1, block b6 is not on block b4, block b5 is not on block b4, block b1 is not on block b4, block b6 is not on block b1, block b2 is not clear, block b5 is not on block b2, block b3 is not on block b5, block b1 is not on block b3, block b2 is not being held, block b4 is not on the table, block b1 is not on block b7, block b2 is not on block b5, block b1 is not on block b2, block b3 is not being held and block b1 is not on block b5, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, block b6 is not on block b3, block b3 is not on block b1, hand is not empty, block b3 is not being held, block b4 is not on block b3, block b5 is not on block b7, block b3 is not on block b5, block b7 is not on block b1, block b2 is not under block b5, block b2 is not on block b3, block b2 is not being held, block b6 is not on block b2, block b1 is not on block b7, block b6 is not on the table, block b1 is not clear, block b1 is not being held, block b3 is not on block b6, block b7 is not on the table, block b5 is not on block b3, block b4 is not clear, block b4 is not on the table, block b4 is not on block b6, block b6 is not being held, block b4 is not on block b7, block b5 is not on block b6, block b3 is not on the table, block b3 is not on block b7, block b3 is not on block b4, block b2 is not on block b1, block b6 is not on block b4, block b6 is not on block b1, block b1 is not on block b3, block b7 is not on block b5, block b5 is not on block b2, block b6 is not clear, block b5 is not being held, block b2 is not on block b7, block b1 is not on block b2, block b2 is not on the table, block b5 is not clear, block b1 is not on block b4, block b2 is not on block b4, block b2 is not clear, block b7 is not on block b6, block b7 is not on block b2, block b4 is not on block b1, block b5 is not on the table, block b6 is not on block b7 and block b4 is not on block b2, is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is crashed from block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is lifted to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is removed from from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is removed from from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is stacked on top block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
","Picking up a block is only possible if that block is clear, on the table, and the hand is empty. By picking up that block, it makes that block not present on the table and not clear. It also leads to the block being held and makes the hand not empty. Putting down the block can only be executed if the block is being held. Putting down the block causes that block to be clear and on the table. It also causes the hand to be not holding the block and makes the hand empty. A block can be stacked on the second block if it is being held and the second block is clear. By stacking the first block on the second, it causes the first block to clear and on top of the second block. Meanwhile, the second block is not clear, and the hand becomes empty as it is not holding the block. The block can also be unstacked from the top of the second block only if the hand is empty and the first block is clear and on top of the second block. Unstacking the first block from the second causes the second block to be clear. The first block is now being held, not clear, and not on top of the second block. Furthermore, the hand is not empty.

[INITIAL CONDITIONS]
Initially, block b7 is on block b6, block b3 is clear, hand is empty, block b2 is clear, block b1 is on the table, block b6 is on the table, block b5 is clear, block b5 is on block b4, block b2 is on the table, block b4 is on block b1 and block b3 is on block b7

[QUESTION]
Given the initial condition, the following actions are planned to be performed: block b3 is unstacked from block b7, block b3 is put down, block b5 is unstacked from block b4, block b5 is crashed from block b2, block b4 is unstacked from block b1, block b4 is put down, block b5 is unstacked from block b2, block b5 is stacked on top block b1, block b7 is unstacked from block b6, block b7 is stacked on top block b4, block b6 is picked up, block b6 is stacked on top block b5, block b2 is picked up, block b2 is stacked on top block b6, block b3 is picked up, block b3 is stacked on top block b2, block b7 is unstacked from block b4, block b7 is stacked on top block b3 and block b4 is picked up to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.

[ANSWER]:
"
