{"id": "f79dea33-f9d9-453b-a97e-b1a531415193", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is it True or False that ball3 is at room3?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "54dc2f83-735a-431d-9dd1-e24248686bf1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is it True or False that ball3 is at room1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "78c384ba-064c-4545-bda3-6847b4f33b9a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is it True or False that ball5 is at room3?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3a10433f-392f-4c4b-b627-21408f48dc40", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is it True or False that ball6 is at room4?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "97fd99ff-7449-419d-9e68-110abad330c0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is it True or False that ball4 is not at room2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3829436b-6341-49ba-b18e-c0d3227a9683", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is it True or False that ball6 is not at room1, ball6 is not at room2, robot1 is not carrying ball6 with rgripper1 and ball6 is not at room3?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "208e5e09-2de2-4b29-8314-f42a67acdb97", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is it True or False that ball8 is not at room3, ball8 is not at room2, robot1 is not carrying ball8 with rgripper1, robot1 is not carrying ball8 with lgripper1 and ball8 is not at room4?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1ab63947-7d8f-4664-a565-c84f52218767", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is it True or False that ball7 is not at room4, ball7 is not at room2, robot1 is not carrying ball7 with rgripper1 and ball7 is not at room1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "caad0c50-3a2f-4596-9af3-98b617215c7c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, list all objects associated with type object. Write None if there are none.", "answer": "ball1, ball10, ball2, ball3, ball4, ball5, ball6, ball7, ball8 and ball9", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a7a23815-636e-45d7-89b4-e546f0a12383", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, list all objects associated with type robot. Write None if there are none.", "answer": "robot1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "731939a3-19d3-4538-8259-3532d43af111", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, list all objects associated with type room. Write None if there are none.", "answer": "room1, room2, room3 and room4", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "95f114b8-48df-4780-a499-42d9eaf5f341", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, list all objects associated with type gripper. Write None if there are none.", "answer": "lgripper1 and rgripper1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "bdf058b9-c7b3-418b-9f56-826e1b3d8b4f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, what is the object type for robot1. Write None if there are none.", "answer": "robot", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "19e10ac4-9a30-4562-93a7-93b15b670ab7", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, what is the object type for ball9. Write None if there are none.", "answer": "object", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "0e055eb3-2cd7-47c0-a575-38ba83218e1b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, what is the object type for room3. Write None if there are none.", "answer": "room", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "36d5252d-e372-4008-a9aa-5628b5e950f3", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, what is the object type for ball3 and ball2. Write None if there are none.", "answer": "object", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "78b4830e-6678-4791-b5e0-73af3067f2d4", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball7 is at room2 and ball9 is at room2?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3c3c623b-f60a-4542-990f-cccbbba4dbc6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball7 is at room3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "51e67016-edfe-4d58-a4c9-a79b41924e42", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is carrying ball6 with rgripper1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "81ed3fe1-6315-4ce5-a48c-a4cc5e917de5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball5 is at room3?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8aa38b56-d313-4e58-877e-d45867a68482", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball6 is not at room1, ball6 is not at room4, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball6 with lgripper1 and ball6 is not at room2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8efa598e-3380-4f99-8498-fc634d36ea1a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball4 is not at room1, ball6 is not at room1, ball9 is not at room1, ball5 is not at room1, ball1 is not at room1, ball2 is not at room1, ball10 is not at room1 and ball7 is not at room1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ee7b3ca7-ca58-493e-bd47-1f5951756666", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball7 is not at room4 and ball7 is not at room3?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "83d0dbed-aa89-44e3-8605-16d67361cfd8", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball2 is not at room1, ball6 is not at room1, robot1 is not at room1, ball7 is not at room1, ball10 is not at room1, ball1 is not at room1 and ball5 is not at room1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "93272d0e-5f0d-4ab3-a050-5f4d729c4705", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, list all objects associated with type room. Write None if there are none.", "answer": "room1, room2, room3 and room4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ac5c1d80-a07f-42c3-acfd-9adf7192c3b1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, list all objects associated with type robot. Write None if there are none.", "answer": "robot1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "08baff44-b0bf-4a73-8d10-f7ad4a6acc4b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, list all objects associated with type object. Write None if there are none.", "answer": "ball1, ball10, ball2, ball3, ball4, ball5, ball6, ball7, ball8 and ball9", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "eb627e1a-b6f1-488c-86cc-4cd8175daa8d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, list all objects associated with type gripper. Write None if there are none.", "answer": "lgripper1 and rgripper1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "46c5dd1c-bcdd-40ea-a940-ef8a7ab20413", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, what is the object type for robot1. Write None if there are none.", "answer": "robot", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d4c7a148-51c7-49fa-b925-ca139136e6d6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, what is the object type for rgripper1 and lgripper1. Write None if there are none.", "answer": "gripper", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f9be958e-b084-408d-9b62-292da39e5112", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, what is the object type for room4. Write None if there are none.", "answer": "room", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "180093f9-7cad-48bf-b759-3bbe019e04c0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, what is the object type for ball2 and ball6. Write None if there are none.", "answer": "object", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "00f729a1-f89a-413b-912a-3212a4facf7b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is it True or False that ball6 is at room4?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "bc784cd0-04d4-4e9b-b0c0-e49c9f7da8d6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is it True or False that robot1 is carrying ball2 with rgripper1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2a7b0cb5-5bfa-493e-a994-bcaaf1d859e5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is it True or False that ball10 is at room3?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b5e5e5c9-ff2f-4efe-adba-e3b4fc3bb996", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is it True or False that ball3 is at room1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b2c65865-4ed2-47e4-9843-d8e59c614b19", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is it True or False that robot1 is not carrying ball10 with rgripper1, ball1 is not at room1, ball10 is not at room2 and ball10 is not at room1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "67829fd8-3c01-4682-af8a-1de0d50b690e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is it True or False that robot1 is not carrying ball10 with lgripper1, ball1 is not at room2, ball1 is not at room1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper1, ball10 is not at room4, ball1 is not at room4, ball1 is not at room3, ball10 is not at room1 and robot1 is not carrying ball10 with rgripper1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6f622acb-d5a2-4b28-bf19-70b8baffd7d5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is it True or False that ball2 is not at room1, ball2 is not at room3, ball2 is not at room2 and ball2 is not at room4?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9289d69a-5771-4a7f-a50d-dd5eceebd04a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is it True or False that ball8 is not at room3, robot1 is not at room3 and ball1 is not at room3?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "5ea3a434-e586-4151-9ae5-1102e57e7100", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, list all objects associated with type object. Write None if there are none.", "answer": "ball1, ball10, ball2, ball3, ball4, ball5, ball6, ball7, ball8 and ball9", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "63d8b7b5-9221-4f96-81e2-e657be82bef0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, list all objects associated with type gripper. Write None if there are none.", "answer": "lgripper1 and rgripper1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "cc07eb1b-80e8-445e-92ca-7854bd7ffc14", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, list all objects associated with type robot. Write None if there are none.", "answer": "robot1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b45d03a4-4835-4723-a0ea-37be8e668ec1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, list all objects associated with type room. Write None if there are none.", "answer": "room1, room2, room3 and room4", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3e7c3304-7319-47b3-bce3-befe8289b7ac", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, what is the object type for room1, room3 and room2. Write None if there are none.", "answer": "room", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "82fb0987-8efa-4a87-985b-38005546307d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, what is the object type for lgripper1 and rgripper1. Write None if there are none.", "answer": "gripper", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "da08b7b9-bde4-442d-af3d-32435992fb34", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, what is the object type for robot1. Write None if there are none.", "answer": "robot", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2bdb8942-fc4d-4406-ac7f-c0f5c9be7b4a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, what is the object type for ball2, ball8, ball6, ball9, ball4, ball1 and ball5. Write None if there are none.", "answer": "object", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "fe1334aa-40f0-408a-ad68-8dd64c644ff7", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is carrying ball5 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a9d76d3b-fec0-49ee-84ea-16436de80962", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball10 is at room1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "fda69aa2-4738-4a7b-ada8-6dcfc334e76b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball10 is at room3?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7e796eb2-7cf3-422c-8d27-7f80fa20608e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball5 is at room1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1df165e5-f63e-44d8-9849-d290109fbc0f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is not carrying ball4 with rgripper1 and ball4 is not at room3?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "25c2a406-eab1-440d-9165-340503c836ea", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball9 is not at room1?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6c491ea9-1bd3-49c4-96f5-e56d72a13269", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball10 is not at room1, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball10 with rgripper1, ball10 is not at room4 and ball10 is not at room2?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d780d11a-8975-431b-b25e-aa07e537666c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball6 is not at room1, ball7 is not at room1, robot1 is not at room1, ball10 is not at room1, ball9 is not at room1, ball5 is not at room1, ball2 is not at room1 and ball4 is not at room1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7a6a01a1-1f61-460f-b6cc-6bcae800a913", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, list all objects associated with type object. Write None if there are none.", "answer": "ball1, ball10, ball2, ball3, ball4, ball5, ball6, ball7, ball8 and ball9", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "007a20c0-64f6-474c-9fcd-106e8f8124e1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, list all objects associated with type gripper. Write None if there are none.", "answer": "lgripper1 and rgripper1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8272f994-4b7e-427d-9d68-e7947592638c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, list all objects associated with type room. Write None if there are none.", "answer": "room1, room2, room3 and room4", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2c8c5190-bdb4-4218-8531-9de7866509ac", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, list all objects associated with type robot. Write None if there are none.", "answer": "robot1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e7bfa1b6-7140-4a4e-8b6e-6a585d8b2430", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, what is the object type for room3 and room4. Write None if there are none.", "answer": "room", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7e258ab3-db9a-4f5a-8bb7-218e942a950f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, what is the object type for lgripper1. Write None if there are none.", "answer": "gripper", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1ec66dcd-3c9c-4f92-a627-c35d883ac93b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, what is the object type for ball4, ball2, ball10 and ball6. Write None if there are none.", "answer": "object", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3e27eb11-6c34-4632-9911-fe3784baae72", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, what is the object type for room3 and room2. Write None if there are none.", "answer": "room", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "aebadf7e-16db-4c91-adb8-0d666662b20f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is it True or False that robot1 is carrying ball2 with lgripper1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3ee804a4-5642-465d-b9f4-04c0128df33f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is it True or False that ball3 is at room1 and ball4 is at room1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f763d80e-4d32-4dc2-b564-a80f7df39f59", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is it True or False that ball3 is at room2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "dabd2321-27ad-48b8-ab6f-7030e22a39c4", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is it True or False that robot1 is at room1, ball4 is at room1 and ball3 is at room1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ccd1688a-3c1c-4ea8-8167-24cdc0781404", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is it True or False that ball3 is not at room3, ball3 is not at room4, robot1 is not carrying ball3 with rgripper1 and ball3 is not at room1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e348ee4e-2396-4317-be24-5577e890f87a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is it True or False that ball5 is not at room4?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "24cdd160-bf9c-4486-93be-79514ece1a27", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is it True or False that ball5 is not at room1, robot1 is not carrying ball5 with lgripper1, ball5 is not at room4, robot1 is not carrying ball5 with rgripper1 and ball5 is not at room2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "756b8076-48f4-4e2e-b48c-5740815d5d02", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is it True or False that ball5 is not at room2 and robot1 is not carrying ball5 with lgripper1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4c87e33f-521b-412e-8b36-9c46945f8ad5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, list all objects associated with type room. Write None if there are none.", "answer": "room1, room2, room3 and room4", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2a4f9b13-3dc0-4975-ae34-7070b07e4ae9", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, list all objects associated with type object. Write None if there are none.", "answer": "ball1, ball10, ball2, ball3, ball4, ball5, ball6, ball7, ball8 and ball9", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6ddf3063-9644-4b46-90b6-6f020540ce22", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, list all objects associated with type robot. Write None if there are none.", "answer": "robot1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4aa72ea5-af67-4308-9149-8bb899d1c46c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, list all objects associated with type gripper. Write None if there are none.", "answer": "lgripper1 and rgripper1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "393de68c-df6f-431f-a950-a66ea2d9c4e0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, what is the object type for room1, room4 and room2. Write None if there are none.", "answer": "room", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "bbd1e63f-5bc8-4892-9645-bea2b29a5c1b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, what is the object type for ball1, ball3, ball10, ball7, ball8 and ball4. Write None if there are none.", "answer": "object", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "74b3fa11-0161-4112-8e1b-ccc34883c2a6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, what is the object type for lgripper1. Write None if there are none.", "answer": "gripper", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ac915337-2c11-4b8e-8206-75f1a5e75508", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "object_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, what is the object type for ball10, ball2, ball4, ball7 and ball1. Write None if there are none.", "answer": "object", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "017c27ca-7355-4895-8692-0c68fc353497", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is it True or False that rgripper1 of robot1 is free?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1a8ab604-f347-499b-aea8-afa9ff1f8f67", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is it True or False that ball10 is at room3?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "be8d20f0-e845-4e08-8b24-63e781b7642a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is it True or False that robot1 is carrying ball9 with rgripper1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b2a4f819-b2af-46bf-bfba-fa12bec64f1c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is it True or False that ball10 is at room2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ace422ae-93d2-4f0c-a059-257deeb04566", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is it True or False that ball9 is not at room3?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a99ce3d9-dbb0-4a0e-ae3d-d23b10e3eea8", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is it True or False that robot1 is not carrying ball3 with rgripper1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ef6fa74e-37ce-4c16-8a6a-cc7d427c786e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is it True or False that lgripper1 of robot1 is not free?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9f8b5bf8-da0a-4869-b768-8a70eb0c7a2d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is it True or False that robot1 is not carrying ball4 with rgripper1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4eb9f77d-2a92-4ed3-be8c-5a360c5754be", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is at room2, ball3 is at room1, rgripper1 of robot1 is free, lgripper1 of robot1 is free, ball6 is at room4, ball2 is at room4, ball10 is at room2, ball1 is at room3, ball9 is at room2, ball8 is at room3, ball4 is at room2, ball5 is at room3 and ball7 is at room2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "aa4e5044-6174-4a4b-9c68-e81ec7442035", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is carrying ball7 with lgripper1, robot1 is at room2, ball3 is at room1, rgripper1 of robot1 is free, lgripper1 of robot1 is free, ball6 is at room4, ball2 is at room4, ball10 is at room2, ball1 is at room3, ball9 is at room2, ball8 is at room3, ball4 is at room2 and ball5 is at room3?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "28e24601-8ca8-4db3-976d-f149c0008060", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball10 is at room4, ball1 is at room2, robot1 is carrying ball1 with lgripper1, ball4 is at room1, ball4 is at room4, ball2 is at room1, robot1 is at room2, ball3 is at room1, rgripper1 of robot1 is free, lgripper1 of robot1 is free, ball6 is at room4, ball2 is at room4 and ball10 is at room2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c8a833cf-c2b0-499e-a85a-8ec580d3966f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is carrying ball4 with rgripper1, robot1 is carrying ball7 with rgripper1, robot1 is carrying ball6 with lgripper1, robot1 is carrying ball8 with rgripper1, robot1 is carrying ball3 with rgripper1, ball7 is at room3, robot1 is carrying ball10 with rgripper1, ball3 is at room2, robot1 is at room2, ball3 is at room1, rgripper1 of robot1 is free, lgripper1 of robot1 is free and ball6 is at room4?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4d16aec2-8311-4ade-8bd4-a9395499f918", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, ball3 is not at room2, robot1 is not at room1, ball5 is not at room1, ball4 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball10 is not at room3, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball1 is not at room2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1e373d56-bf99-4198-ae9b-9e9861983583", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball3 is not at room1, lgripper1 of robot1 is not free, ball1 is not at room3, ball7 is not at room2, ball5 is not at room3, ball10 is not at room2, ball4 is not at room2, ball9 is not at room2, ball6 is not at room4, ball2 is not at room4, rgripper1 of robot1 is not free, robot1 is not at room2, robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, ball3 is not at room2, robot1 is not at room1, ball5 is not at room1, ball4 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1 and ball2 is not at room2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d001efb9-35ae-450c-99ea-d603723bb244", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball6 is not at room4, robot1 is not at room2, ball8 is not at room3, robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, ball3 is not at room2, robot1 is not at room1, ball5 is not at room1, ball4 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball10 is not at room3, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball2 with lgripper1 and robot1 is not carrying ball6 with rgripper1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "db4f07e6-31a3-4c82-81bd-d730af36b514", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball6 is not at room4, ball4 is not at room2, robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, ball3 is not at room2, robot1 is not at room1, ball5 is not at room1, ball4 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball10 is not at room3, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with rgripper1 and ball6 is not at room3?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "03e226a2-115c-46c5-84dd-1f71d3403d10", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, list all valid properties of the state that involve room2. Write None if there are none.", "answer": "robot1 is at room2, ball10 is at room2, ball9 is at room2, ball4 is at room2 and ball7 is at room2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "06a0c2b5-e7ff-421b-97b7-fad67366fe5c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, list all valid properties of the state that involve ball4. Write None if there are none.", "answer": "ball4 is at room2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4c9f182b-aa4c-4de3-a1c0-616261e3dd35", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, list all valid properties of the state that involve ball10. Write None if there are none.", "answer": "ball10 is at room2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d75d3bdc-25e7-4636-a514-ca23303654e4", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, list all valid properties of the state that involve robot1. Write None if there are none.", "answer": "robot1 is at room2, rgripper1 of robot1 is free and lgripper1 of robot1 is free", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "68d6e165-fb0f-4889-a80f-8056ca7cfbf3", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve lgripper1. Write None if there are none.", "answer": "robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1 and robot1 is not carrying ball2 with lgripper1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6cb46f27-0a02-4f3c-8a25-6897ac86a46f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball7. Write None if there are none.", "answer": "ball7 is not at room4, robot1 is not carrying ball7 with rgripper1, ball7 is not at room3, ball7 is not at room1 and robot1 is not carrying ball7 with lgripper1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "41381409-4f52-4d50-a7cc-073a64f5d8fb", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve rgripper1. Write None if there are none.", "answer": "robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball8 with rgripper1, robot1 is not carrying ball1 with rgripper1 and robot1 is not carrying ball6 with rgripper1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "731cdb0b-22c1-4d97-8b01-c24dd9af4406", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball2. Write None if there are none.", "answer": "ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball2 is not at room3, ball2 is not at room2 and robot1 is not carrying ball2 with lgripper1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2858b754-3011-475e-a995-21de4f8b150d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball7 is at room2?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "41064f50-2353-4d4e-ba38-cb7a9e136790", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball8 is at room3?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "43ce2431-1e8e-4d11-9529-719718323105", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is at room1?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c4bbe264-60b9-4e9f-843e-4badb214957f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball2 is at room4?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9cc2e39c-8d6b-474c-bc79-2e6dfe7c0ce5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball8 is not at room3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b3c66547-6976-4e7f-90b2-655b4cc29a3e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball3 is not at room1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "cd442bf2-a03f-4ae2-88f5-56105062ca0f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is not carrying ball2 with rgripper1?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7be56b63-4eca-46be-9242-12f4af6e3678", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is it True or False that ball6 is not at room4?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "48251fb4-9609-484a-8be4-b8b8a67ea918", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball3 is at room1, ball6 is at room4, rgripper1 of robot1 is free, ball2 is at room4, ball4 is at room1, ball1 is at room3, ball9 is at room2, ball8 is at room3, robot1 is carrying ball10 with lgripper1, ball5 is at room3, ball7 is at room2 and robot1 is at room1?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "83b4fb09-bff9-402f-a6bc-d3103f03e98b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball4 is at room4, ball9 is at room1, ball6 is at room2, robot1 is carrying ball3 with lgripper1, ball3 is at room4, ball10 is at room1, ball8 is at room1, robot1 is carrying ball8 with lgripper1, ball3 is at room1, ball6 is at room4, rgripper1 of robot1 is free and ball2 is at room4?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "641f7545-3343-490e-8295-c2369821bbef", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball4 is at room3, robot1 is carrying ball7 with rgripper1, robot1 is carrying ball4 with lgripper1, robot1 is carrying ball9 with lgripper1, robot1 is carrying ball3 with rgripper1, robot1 is carrying ball9 with rgripper1, ball10 is at room3, ball3 is at room3, robot1 is carrying ball5 with lgripper1, ball3 is at room1, ball6 is at room4 and rgripper1 of robot1 is free?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7d2cf4a3-ec73-494e-8975-87e82b7ad928", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is carrying ball6 with rgripper1, ball3 is at room1, ball6 is at room4, rgripper1 of robot1 is free, ball2 is at room4, ball4 is at room1, ball1 is at room3, ball9 is at room2, ball8 is at room3, robot1 is carrying ball10 with lgripper1, ball5 is at room3 and ball7 is at room2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8bdb91fc-c40c-4699-96ef-ba804eaa9f20", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball10 is not at room3, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2b495cc9-c63a-4faa-a3db-df9806e25f0c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball5 is not at room3, robot1 is not carrying ball10 with lgripper1, ball3 is not at room1, ball6 is not at room4, ball1 is not at room3, robot1 is not at room1, ball7 is not at room2, rgripper1 of robot1 is not free, ball8 is not at room3, ball4 is not at room1, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1 and robot1 is not carrying ball8 with rgripper1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "0b762a29-8b9f-4cb6-915d-732741e9bbbe", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball6 is not at room4, robot1 is not at room1, rgripper1 of robot1 is not free, ball1 is not at room3, ball3 is not at room1, ball9 is not at room2, ball5 is not at room3, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball10 is not at room3 and robot1 is not carrying ball8 with lgripper1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9b5f312b-efe6-495e-a4e8-cc629fca7339", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room3, ball6 is not at room4, ball8 is not at room3, robot1 is not at room1, ball3 is not at room1, ball7 is not at room2, rgripper1 of robot1 is not free, ball2 is not at room4, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball10 is not at room3 and robot1 is not carrying ball8 with lgripper1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7f8dfd1f-8052-459e-83c2-25795c8272aa", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve room1. Write None if there are none.", "answer": "ball3 is at room1, ball4 is at room1 and robot1 is at room1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c52cd8d5-628b-41e9-9dd5-57470764c185", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve rgripper1. Write None if there are none.", "answer": "rgripper1 of robot1 is free", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d9a21480-61a0-4e14-a405-0351c0667425", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve ball10. Write None if there are none.", "answer": "robot1 is carrying ball10 with lgripper1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6bbfcba2-8aa3-440d-ace5-3b29c7933422", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve room4. Write None if there are none.", "answer": "ball6 is at room4 and ball2 is at room4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b4b3c5fb-9287-467b-b50f-26e7350071d5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball9. Write None if there are none.", "answer": "robot1 is not carrying ball9 with rgripper1, ball9 is not at room1, ball9 is not at room3, ball9 is not at room4 and robot1 is not carrying ball9 with lgripper1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6a492427-e37b-4ace-b1a5-d43f566a2d4f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball1. Write None if there are none.", "answer": "robot1 is not carrying ball1 with lgripper1, ball1 is not at room4, ball1 is not at room1, ball10 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with rgripper1, ball1 is not at room2, ball10 is not at room3, robot1 is not carrying ball1 with rgripper1 and ball10 is not at room2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ff8a48be-8eb0-48db-92a7-bae1bdb1defe", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball4. Write None if there are none.", "answer": "ball4 is not at room4, robot1 is not carrying ball4 with rgripper1, ball4 is not at room3, ball4 is not at room2 and robot1 is not carrying ball4 with lgripper1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2b22deba-3db8-4bc2-ba06-4b3c76ff3190", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve room3. Write None if there are none.", "answer": "ball3 is not at room3, ball2 is not at room3, ball9 is not at room3, ball4 is not at room3, robot1 is not at room3, ball7 is not at room3, ball10 is not at room3 and ball6 is not at room3", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "421fc7f6-3e4b-4354-9052-7182eed7014f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is it True or False that ball7 is at room2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a4449269-0737-4f7e-8cca-3b70f1654aca", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is it True or False that ball8 is at room4?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "12ef2c6f-7172-4fef-97b8-243935835ce1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is it True or False that ball3 is at room3?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8eb306ad-026f-4daa-bf2a-26305a6562df", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is it True or False that robot1 is carrying ball2 with rgripper1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "0cf24e1d-70d8-4785-a050-c1b65a124955", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is it True or False that ball10 is not at room3?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7ec6d806-9892-4efb-bd42-7518c4e1a2f8", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is it True or False that robot1 is not carrying ball7 with rgripper1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9f696bd0-ae58-4f51-84df-3c40f9ae1480", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is it True or False that robot1 is not carrying ball6 with rgripper1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "032cb17f-ce77-404d-8ec7-c485c0eed671", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is it True or False that ball7 is not at room2?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2f7a3604-69e4-4b56-b370-df0101fca993", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is carrying ball9 with rgripper1, robot1 is carrying ball9 with lgripper1, ball2 is at room2, ball1 is at room4, robot1 is at room3, robot1 is at room2, ball3 is at room1, ball6 is at room4, robot1 is carrying ball1 with rgripper1, ball2 is at room4 and ball4 is at room1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d331bac3-3549-43dc-a8e6-541456130cb8", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is at room2, ball3 is at room1, ball6 is at room4, robot1 is carrying ball1 with rgripper1, ball2 is at room4, ball4 is at room1, robot1 is carrying ball8 with lgripper1, ball10 is at room3, ball9 is at room2, ball5 is at room3 and ball7 is at room2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "02669742-0b5e-4a95-8bc8-0e2a92f15dcd", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is carrying ball2 with lgripper1, ball8 is at room2, ball5 is at room1, robot1 is carrying ball7 with rgripper1, ball1 is at room4, ball1 is at room2, ball8 is at room1, robot1 is carrying ball8 with rgripper1, robot1 is at room2, ball3 is at room1 and ball6 is at room4?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ba409a1d-3e74-4b97-a483-0d6903793415", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball5 is at room4, ball4 is at room4, ball9 is at room3, ball4 is at room2, ball7 is at room4, ball1 is at room1, robot1 is carrying ball7 with lgripper1, ball3 is at room2, ball5 is at room1, ball1 is at room4 and robot1 is at room2?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ae97690f-ba93-48f7-9abb-daf36e2c49a4", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball7 is not at room2, ball6 is not at room4, ball10 is not at room3, ball3 is not at room1, ball5 is not at room3, robot1 is not at room2, robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2 and robot1 is not carrying ball9 with lgripper1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6af743c4-0b0d-438c-88ba-b5ee2fd78353", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is not at room2, robot1 is not carrying ball1 with rgripper1, ball3 is not at room1, ball10 is not at room3, ball5 is not at room3, ball9 is not at room2, robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2 and robot1 is not carrying ball9 with lgripper1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "5703e91f-88af-4753-b04f-8c9251d6dda5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball9 with lgripper1, ball6 is not at room2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "fed18c23-71bf-4cb1-b426-36557dfcf910", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, are all of the following properties of the state True or False: ball6 is not at room4, ball10 is not at room3, ball3 is not at room1, ball7 is not at room2, ball4 is not at room1, ball9 is not at room2, robot1 is not at room2, robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1 and ball2 is not at room2?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "0d7e6dd9-7117-45e7-acdc-279af2824f5a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve ball6. Write None if there are none.", "answer": "ball6 is at room4", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4e7a487d-0d05-4934-9814-1844fc47e8ce", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve ball5. Write None if there are none.", "answer": "ball5 is at room3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e512b28c-4b2c-46e3-b3ad-61191b781279", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve room4. Write None if there are none.", "answer": "ball6 is at room4 and ball2 is at room4", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4339d2e6-2e70-4211-8403-df196b922fc2", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve ball8. Write None if there are none.", "answer": "robot1 is carrying ball8 with lgripper1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "fbd12a47-71f2-4cd5-bb4c-3bf78ca7d275", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball6. Write None if there are none.", "answer": "robot1 is not carrying ball6 with lgripper1, ball6 is not at room1, ball6 is not at room2, robot1 is not carrying ball6 with rgripper1 and ball6 is not at room3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "74d7d4ce-ab10-4389-9c1e-667cc23cd1d6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve room1. Write None if there are none.", "answer": "ball1 is not at room1, ball2 is not at room1, ball9 is not at room1, ball10 is not at room1, robot1 is not at room1, ball5 is not at room1, ball6 is not at room1, ball7 is not at room1 and ball8 is not at room1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "603d7617-934b-4448-9cf1-81d08aafce46", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve room3. Write None if there are none.", "answer": "ball3 is not at room3, ball2 is not at room3, ball9 is not at room3, ball1 is not at room3, robot1 is not at room3, ball4 is not at room3, ball7 is not at room3, ball8 is not at room3 and ball6 is not at room3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7b55732b-d618-441e-9c5e-657e8dc30844", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve negations that involve room2. Write None if there are none.", "answer": "ball8 is not at room2, ball5 is not at room2, ball3 is not at room2, ball1 is not at room2, ball4 is not at room2, ball2 is not at room2, ball6 is not at room2 and ball10 is not at room2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "0c6645d5-6efd-4a0e-810a-3a9a724e8afb", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball2 is at room1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3fedc332-d5de-4606-b4e9-8b77fb494210", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball4 is at room1?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f9a13719-e82a-4f8c-bc8f-42cba4d2bb8b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that robot1 is carrying ball5 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "054e2152-7fd0-4727-abfb-112b8a1782b8", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball9 is at room2?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a3a4a082-1469-442e-a5dd-90c3a4190c6e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball5 is not at room3?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f8098723-21ec-4382-b298-90e289a9786c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball9 is not at room2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "40cb9b27-fb5b-4fe1-865e-e664fc6615a7", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball4 is not at room1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a14da02d-ef2c-4987-8e6b-012591444b2b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is it True or False that ball3 is not at room1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6ccdd480-a34c-4267-9af6-3a0bcff76356", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is at room3, ball5 is at room2, robot1 is carrying ball4 with rgripper1, ball2 is at room4, rgripper1 of robot1 is free, robot1 is carrying ball8 with lgripper1, ball1 is at room4, robot1 is carrying ball1 with lgripper1, ball3 is at room1, ball6 is at room4 and ball8 is at room2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ac59bec7-36f8-4298-9f45-0dbf89b16069", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball3 is at room1, ball6 is at room4, ball8 is at room2, robot1 is carrying ball1 with rgripper1, ball4 is at room1, ball10 is at room3, robot1 is carrying ball2 with lgripper1, ball9 is at room2, robot1 is at room4, ball5 is at room3 and ball7 is at room4?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8de1c714-60b2-4d0c-8891-10b982e2b2c8", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is carrying ball5 with rgripper1, ball9 is at room4, ball7 is at room2, robot1 is carrying ball5 with lgripper1, ball10 is at room4, ball6 is at room3, ball1 is at room4, ball3 is at room2, ball3 is at room1, ball6 is at room4 and ball8 is at room2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "5439f3c9-c0ca-45a7-9e4b-9722d79a045f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: rgripper1 of robot1 is free, ball10 is at room4, robot1 is carrying ball8 with lgripper1, ball1 is at room1, ball7 is at room3, ball5 is at room1, robot1 is carrying ball6 with rgripper1, ball3 is at room1, ball6 is at room4, ball8 is at room2 and robot1 is carrying ball1 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "35ae8481-f0ad-4a9d-aa38-26cbae88e36e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball9 is not at room2, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, ball6 is not at room2, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3 and ball8 is not at room1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b92faaea-61ce-4d2a-a96a-53dad22cbc6f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, ball6 is not at room2, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a4fa73fa-b022-472c-9827-2cf225d77cf0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball5 is not at room3, ball7 is not at room4, ball6 is not at room4, ball9 is not at room2, ball10 is not at room3, robot1 is not at room4, ball8 is not at room2, ball4 is not at room1, ball3 is not at room1, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2 and robot1 is not carrying ball4 with lgripper1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "175c0893-dcd4-4a2b-8ea1-4d2c2ad51d32", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties of the state True or False: ball10 is not at room3, ball3 is not at room1, ball8 is not at room2, ball7 is not at room4, ball9 is not at room2, robot1 is not carrying ball1 with rgripper1, ball4 is not at room1, ball5 is not at room3, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1 and robot1 is not carrying ball8 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9ab61a82-8f03-4f43-98bb-7e9935620a8c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve ball9. Write None if there are none.", "answer": "ball9 is at room2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "48be5638-c38a-4ab8-86d3-db3bdfb3c96a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve ball6. Write None if there are none.", "answer": "ball6 is at room4", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "84a66449-e4af-4c7e-b362-0789d73efb3d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve ball2. Write None if there are none.", "answer": "robot1 is carrying ball2 with lgripper1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8995037c-5db0-41a4-b5c2-54d36b484a85", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve ball7. Write None if there are none.", "answer": "ball7 is at room4", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7203cbc1-c1a6-4a2c-bfbc-3f6d9ac04b10", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve room3. Write None if there are none.", "answer": "ball3 is not at room3, ball2 is not at room3, ball9 is not at room3, ball1 is not at room3, ball4 is not at room3, robot1 is not at room3, ball7 is not at room3, ball8 is not at room3 and ball6 is not at room3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e2b21c8d-90aa-4bbf-84a0-a05347abfa15", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball2. Write None if there are none.", "answer": "ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball2 is not at room3, ball2 is not at room4 and ball2 is not at room2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "fd481aea-7be0-4607-8d1f-7d882e3e8efb", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve room2. Write None if there are none.", "answer": "robot1 is not at room2, ball5 is not at room2, ball3 is not at room2, ball7 is not at room2, ball1 is not at room2, ball4 is not at room2, ball2 is not at room2, ball6 is not at room2 and ball10 is not at room2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1892d1ed-283e-4ce6-a82f-4a2f14c944a2", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve room1. Write None if there are none.", "answer": "ball1 is not at room1, ball2 is not at room1, ball9 is not at room1, ball10 is not at room1, robot1 is not at room1, ball5 is not at room1, ball6 is not at room1, ball7 is not at room1 and ball8 is not at room1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b573edbb-e9a3-4d22-bef6-7dbbf2ae01b4", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is it True or False that robot1 is carrying ball3 with rgripper1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "193c1a02-fe66-41dd-aea9-e26211b9b21f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is it True or False that robot1 is carrying ball2 with lgripper1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4422eb6b-adf7-409d-b47a-3de78c9fecd4", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is it True or False that ball1 is at room4?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c1e0ad88-eb95-4f7a-b140-66dce4f30303", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is it True or False that ball7 is at room4?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8d202ea0-0728-474b-bcf5-2ea80c5f78c2", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is it True or False that ball10 is not at room1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "efacfcd9-82ce-4ef3-9667-f71a5afdb4c7", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is it True or False that ball1 is not at room4?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a3689eb4-0f6d-4dfd-bc4a-9f624a107cc9", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is it True or False that ball2 is not at room1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4288bdec-e9c7-4f0e-a526-64ebe113e4ee", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is it True or False that ball4 is not at room1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7b3dc319-adb0-492a-a45e-58b0ce8addb7", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is carrying ball3 with rgripper1, robot1 is carrying ball7 with lgripper1, ball8 is at room3, robot1 is carrying ball2 with rgripper1, robot1 is carrying ball9 with lgripper1, ball2 is at room3, ball5 is at room2, ball3 is at room1, ball6 is at room4, ball8 is at room2 and ball4 is at room1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "809b4dc7-a0ac-4a3c-8827-6b608c36de50", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball8 is at room4, robot1 is at room4, ball3 is at room1, ball6 is at room4, ball8 is at room2, ball4 is at room1, ball10 is at room3, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball5 with rgripper1, ball9 is at room2 and ball1 is at room4?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1cfb4663-429d-468b-bd8f-67debdbc6302", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is at room3, ball8 is at room3, ball4 is at room4, ball3 is at room1, ball6 is at room4, ball8 is at room2, ball4 is at room1, ball10 is at room3, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball5 with rgripper1 and ball9 is at room2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "dce0e1b6-4937-4b8d-9b27-19b6c09bee9e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball3 is at room1, ball6 is at room4, ball8 is at room2, ball4 is at room1, ball10 is at room3, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball5 with rgripper1, ball9 is at room2, ball1 is at room4, ball7 is at room4 and robot1 is at room1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6e5f84de-9e6d-4d33-b3cb-a345f9f165c5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball4 is not at room1, ball1 is not at room4, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball5 is not at room3, robot1 is not carrying ball10 with rgripper1, ball1 is not at room3, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball6 with rgripper1 and ball6 is not at room3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a9dc87da-6c38-4ccf-94e0-a05d355ed131", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, are all of the following properties of the state True or False: robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball5 is not at room3, robot1 is not carrying ball10 with rgripper1, ball1 is not at room3, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7acf1388-b011-4333-9c03-dbfbe3dc0693", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball1 is not at room4, robot1 is not at room1, ball6 is not at room4, ball8 is not at room2, robot1 is not carrying ball2 with lgripper1, ball4 is not at room1, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball5 is not at room3, robot1 is not carrying ball10 with rgripper1, ball1 is not at room3, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball8 with lgripper1 and robot1 is not carrying ball9 with lgripper1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3fd22a05-0d3b-49dd-8f7d-c6db1fb78f23", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, are all of the following properties of the state True or False: ball7 is not at room4, ball8 is not at room2, ball4 is not at room1, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball5 is not at room3, robot1 is not carrying ball10 with rgripper1, ball1 is not at room3, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2 and robot1 is not carrying ball6 with rgripper1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1a19551c-da4f-46a2-ab68-3cc607f539fe", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, list all valid properties of the state that involve ball8. Write None if there are none.", "answer": "ball8 is at room2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "64413656-dc1c-4120-b79b-4b3a2ca86e3c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, list all valid properties of the state that involve robot1. Write None if there are none.", "answer": "robot1 is carrying ball2 with lgripper1, robot1 is carrying ball5 with rgripper1 and robot1 is at room1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e41dbf66-b1f9-4a40-bd0d-1c95c8ed5865", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, list all valid properties of the state that involve ball5. Write None if there are none.", "answer": "robot1 is carrying ball5 with rgripper1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "71ac0b60-e6b6-43b6-a449-b7ca0df35646", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, list all valid properties of the state that involve ball7. Write None if there are none.", "answer": "ball7 is at room4", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4b8ab2f2-cc96-4a22-ac86-fdef44dfdede", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball6. Write None if there are none.", "answer": "robot1 is not carrying ball6 with lgripper1, ball6 is not at room1, ball6 is not at room2, robot1 is not carrying ball6 with rgripper1 and ball6 is not at room3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a053537c-7a33-4d76-92a5-70b8bfd7dfc0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve room3. Write None if there are none.", "answer": "ball3 is not at room3, ball2 is not at room3, ball9 is not at room3, ball5 is not at room3, ball1 is not at room3, robot1 is not at room3, ball4 is not at room3, ball7 is not at room3, ball8 is not at room3 and ball6 is not at room3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "fea3008c-45d8-417e-b9e9-0615fb81176b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball7. Write None if there are none.", "answer": "robot1 is not carrying ball7 with rgripper1, ball7 is not at room2, ball7 is not at room3, ball7 is not at room1 and robot1 is not carrying ball7 with lgripper1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "91ef7865-c1ca-446f-9fb9-806efd473ac7", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "fluent_tracking", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, list all valid properties of the state that involve negations that involve ball2. Write None if there are none.", "answer": "ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball2 is not at room3, ball2 is not at room4 and ball2 is not at room2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2f2d3f09-befa-4e7f-b353-2361cd70ec2c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, are all of the following properties: robot1 is at room2, ball3 is at room1, rgripper1 of robot1 is free, lgripper1 of robot1 is free, ball6 is at room4, ball2 is at room4, ball10 is at room2, ball1 is at room3, ball9 is at room2, ball8 is at room3, ball4 is at room2, ball5 is at room3 and ball7 is at room2, correct? Respond with True or False.", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "bf01e1d2-52f7-4bb1-8bfa-397ff4366c42", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, are all of the following properties: ball10 is at room3, robot1 is carrying ball1 with lgripper1, robot1 is carrying ball10 with rgripper1, robot1 is at room2, ball3 is at room1, rgripper1 of robot1 is free, lgripper1 of robot1 is free, ball6 is at room4, ball2 is at room4, ball10 is at room2, ball1 is at room3, ball9 is at room2 and ball8 is at room3, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "42ca6805-5fe4-4a0d-aded-4419eba0f011", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, are all of the following properties: ball10 is at room4, robot1 is at room1, ball9 is at room1, robot1 is carrying ball2 with lgripper1, ball2 is at room1, robot1 is carrying ball8 with lgripper1, robot1 is carrying ball5 with lgripper1, ball2 is at room2, ball9 is at room3, robot1 is at room2, ball3 is at room1, rgripper1 of robot1 is free and lgripper1 of robot1 is free, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "27ed1729-0965-4893-81f6-a7acac92d1dc", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, are all of the following properties: robot1 is carrying ball4 with rgripper1, robot1 is carrying ball6 with lgripper1, ball9 is at room4, robot1 is at room2, ball3 is at room1, rgripper1 of robot1 is free, lgripper1 of robot1 is free, ball6 is at room4, ball2 is at room4, ball10 is at room2, ball1 is at room3, ball9 is at room2 and ball8 is at room3, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "26c80a03-2204-47e0-a30e-07b40039a196", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, are all of the following properties: ball8 is not at room3, ball3 is not at room1, ball9 is not at room2, ball2 is not at room4, ball5 is not at room3, ball4 is not at room2, ball1 is not at room3, lgripper1 of robot1 is not free, ball10 is not at room2, robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, ball3 is not at room2, robot1 is not at room1, ball5 is not at room1, ball4 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1 and ball10 is not at room3, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "fc5deb12-2de9-4566-ac49-6f013050fa5f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, are all of the following properties: robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, ball3 is not at room2, robot1 is not at room1, ball5 is not at room1, ball4 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball10 is not at room3, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball1 is not at room2, correct? Respond with True or False.", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3274efff-24d6-4fea-8293-cb55bca136eb", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, are all of the following properties: ball10 is not at room2, ball6 is not at room4, ball8 is not at room3, ball3 is not at room1, rgripper1 of robot1 is not free, ball5 is not at room3, ball1 is not at room3, lgripper1 of robot1 is not free, robot1 is not at room2, ball4 is not at room2, ball2 is not at room4, ball9 is not at room2, robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, ball3 is not at room2, robot1 is not at room1, ball5 is not at room1, ball4 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1 and ball2 is not at room2, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "cadd5702-06f0-4942-bc19-6578883fb334", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, are all of the following properties: ball4 is not at room2, ball9 is not at room2, ball1 is not at room3, robot1 is not at room2, ball2 is not at room4, ball7 is not at room2, ball5 is not at room3, lgripper1 of robot1 is not free, ball3 is not at room1, ball6 is not at room4, ball8 is not at room3, ball10 is not at room2, robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, ball3 is not at room2, robot1 is not at room1, ball5 is not at room1, ball4 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1 and ball2 is not at room2, correct? Respond with True or False.", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ecb0ddbd-1836-4abc-8ff5-688933fa789d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "robot1 is at room2, ball3 is at room1, rgripper1 of robot1 is free, lgripper1 of robot1 is free, ball6 is at room4, ball2 is at room4, ball10 is at room2, ball1 is at room3, ball9 is at room2, ball8 is at room3, ball4 is at room2, ball5 is at room3 and ball7 is at room2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7c726abb-28f3-4252-ba37-783165307c51", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, ball3 is not at room2, robot1 is not at room1, ball5 is not at room1, ball4 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball10 is not at room3, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball1 is not at room2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "cd1d2e75-3b8e-46ba-a13e-eb4521261fc1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball3 is at room1, ball6 is at room4, rgripper1 of robot1 is free, ball2 is at room4, ball4 is at room1, ball1 is at room3, ball9 is at room2, ball8 is at room3, robot1 is carrying ball10 with lgripper1, ball5 is at room3, ball7 is at room2 and robot1 is at room1, correct? Respond with True or False.", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4c9e2fb0-c0f2-476a-b63b-c35855381ceb", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball3 is at room3, robot1 is carrying ball1 with rgripper1, ball7 is at room4, ball2 is at room2, robot1 is carrying ball7 with rgripper1, ball4 is at room3, robot1 is carrying ball7 with lgripper1, ball10 is at room2, robot1 is carrying ball5 with lgripper1, robot1 is carrying ball2 with rgripper1, ball10 is at room4 and ball3 is at room1, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8fda04a1-98e9-48e0-8be8-e43ff66f3d26", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball5 is at room4, robot1 is carrying ball7 with rgripper1, ball4 is at room2, robot1 is carrying ball8 with lgripper1, ball2 is at room2, lgripper1 of robot1 is free, robot1 is carrying ball6 with rgripper1, robot1 is carrying ball2 with rgripper1, ball2 is at room1, ball10 is at room2, ball3 is at room1 and ball6 is at room4, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "62b51fda-2b36-4fe2-bf55-69058537c09b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball5 is at room1, robot1 is carrying ball7 with lgripper1, ball6 is at room1, robot1 is carrying ball6 with rgripper1, ball9 is at room1, ball3 is at room2, ball3 is at room1, ball6 is at room4, rgripper1 of robot1 is free, ball2 is at room4, ball4 is at room1 and ball1 is at room3, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3569702d-e907-4fd6-9c49-022afba3faef", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball10 is not at room3, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2, correct? Respond with True or False.", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f7f5ead5-6b0b-436d-93df-43c6024436b9", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball3 is not at room1, ball5 is not at room3, ball2 is not at room4, ball4 is not at room1, ball1 is not at room3, ball9 is not at room2, rgripper1 of robot1 is not free, ball8 is not at room3, robot1 is not at room1, ball7 is not at room2, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, ball4 is not at room2 and robot1 is not carrying ball4 with lgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "bd6f9493-a4b5-4aa8-9ebe-3555a43505b7", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball7 is not at room2, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball10 is not at room3, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3 and ball8 is not at room1, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ca155cad-c793-46ca-9384-ea59972529f5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, are all of the following properties: robot1 is not carrying ball10 with lgripper1, ball1 is not at room3, ball2 is not at room4, ball6 is not at room4, rgripper1 of robot1 is not free, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball10 is not at room3, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1 and ball6 is not at room2, correct? Respond with True or False.", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "fbc19129-2d54-4b8d-a9ab-12ea0a15d630", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "ball3 is at room1, ball6 is at room4, rgripper1 of robot1 is free, ball2 is at room4, ball4 is at room1, ball1 is at room3, ball9 is at room2, ball8 is at room3, robot1 is carrying ball10 with lgripper1, ball5 is at room3, ball7 is at room2 and robot1 is at room1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a73ff31a-c670-4df9-9b98-25a438232e92", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball10 is not at room3, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "362f4820-7bc4-4300-822a-d14771cdb600", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, are all of the following properties: robot1 is at room2, ball3 is at room1, ball6 is at room4, robot1 is carrying ball1 with rgripper1, ball2 is at room4, ball4 is at room1, robot1 is carrying ball8 with lgripper1, ball10 is at room3, ball9 is at room2, ball5 is at room3 and ball7 is at room2, correct? Respond with True or False.", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "97232cff-2f35-43f5-9393-6c33be4c4cb3", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, are all of the following properties: ball2 is at room1, robot1 is carrying ball8 with rgripper1, ball6 is at room3, robot1 is carrying ball1 with lgripper1, ball1 is at room2, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball7 with lgripper1, ball10 is at room1, robot1 is carrying ball6 with rgripper1, lgripper1 of robot1 is free and robot1 is at room2, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "afdcbd6f-cbac-4f16-8042-1a6043de9f02", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, are all of the following properties: ball5 is at room4, robot1 is at room2, ball3 is at room1, ball6 is at room4, robot1 is carrying ball1 with rgripper1, ball2 is at room4, ball4 is at room1, robot1 is carrying ball8 with lgripper1, ball10 is at room3, ball9 is at room2 and ball5 is at room3, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7522a481-9ba8-4841-ae4e-b586db686b69", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, are all of the following properties: ball7 is at room4, robot1 is carrying ball2 with rgripper1, ball7 is at room3, ball5 is at room1, rgripper1 of robot1 is free, ball6 is at room2, robot1 is carrying ball1 with lgripper1, robot1 is carrying ball6 with rgripper1, lgripper1 of robot1 is free, robot1 is at room2 and ball3 is at room1, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d79bc237-e0ad-47d7-9f81-61f257495a73", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, are all of the following properties: robot1 is not at room2, ball10 is not at room3, ball5 is not at room3, ball2 is not at room4, ball6 is not at room4, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball8 with lgripper1, ball4 is not at room1, ball7 is not at room2, robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2 and robot1 is not carrying ball4 with lgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e986308e-5a0c-415c-abcd-d7607f737da8", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, are all of the following properties: ball2 is not at room4, ball7 is not at room2, ball4 is not at room1, ball3 is not at room1, robot1 is not carrying ball8 with lgripper1, ball5 is not at room3, ball9 is not at room2, ball6 is not at room4, robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1 and robot1 is not carrying ball8 with rgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9579d0dd-5c87-423b-b72a-97649c79328c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, are all of the following properties: robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball9 with lgripper1, ball6 is not at room2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2, correct? Respond with True or False.", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "962978b0-e13b-4f1e-945a-e1478231a6e9", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, are all of the following properties: ball7 is not at room2, robot1 is not at room2, ball6 is not at room4, robot1 is not carrying ball1 with rgripper1, ball4 is not at room1, ball9 is not at room2, ball2 is not at room4, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1 and robot1 is not carrying ball8 with rgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8dbe4eea-f5eb-4645-9863-993583f4e070", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "robot1 is at room2, ball3 is at room1, ball6 is at room4, robot1 is carrying ball1 with rgripper1, ball2 is at room4, ball4 is at room1, robot1 is carrying ball8 with lgripper1, ball10 is at room3, ball9 is at room2, ball5 is at room3 and ball7 is at room2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4d5f9ac2-c92b-4ca7-b12a-0d226424c895", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball9 with lgripper1, ball6 is not at room2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4b114a75-8607-4a18-8d3b-e6144177d344", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball3 is at room1, ball6 is at room4, ball8 is at room2, robot1 is carrying ball1 with rgripper1, ball4 is at room1, ball10 is at room3, robot1 is carrying ball2 with lgripper1, ball9 is at room2, robot1 is at room4, ball5 is at room3 and ball7 is at room4, correct? Respond with True or False.", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "0682ec79-6512-42fa-8318-5108536750a7", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball6 is at room1, ball3 is at room1, ball6 is at room4, ball8 is at room2, robot1 is carrying ball1 with rgripper1, ball4 is at room1, ball10 is at room3, robot1 is carrying ball2 with lgripper1, ball9 is at room2, robot1 is at room4 and ball5 is at room3, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "015449a6-3982-4654-92e0-243be1027ed1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball6 is at room1, ball6 is at room2, robot1 is carrying ball5 with rgripper1, ball1 is at room1, ball4 is at room4, robot1 is carrying ball8 with lgripper1, robot1 is carrying ball7 with lgripper1, robot1 is carrying ball10 with lgripper1, ball4 is at room3, ball3 is at room1 and ball6 is at room4, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6084fd42-921b-44d1-a890-4af1b93f1382", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball6 is at room2, ball3 is at room1, ball6 is at room4, ball8 is at room2, robot1 is carrying ball1 with rgripper1, ball4 is at room1, ball10 is at room3, robot1 is carrying ball2 with lgripper1, ball9 is at room2, robot1 is at room4 and ball5 is at room3, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7ef3be05-369f-4f31-9069-7ce652498f80", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, ball6 is not at room2, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2, correct? Respond with True or False.", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "06342572-d852-437f-b5d8-51b33765ee37", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball7 is not at room4, ball5 is not at room3, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball2 with lgripper1, ball8 is not at room2, ball6 is not at room4, robot1 is not at room4, ball4 is not at room1, ball9 is not at room2, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2 and robot1 is not carrying ball4 with lgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2c1519d8-41a3-4324-8626-7e0326863064", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball3 is not at room1, robot1 is not carrying ball1 with rgripper1, ball8 is not at room2, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, ball6 is not at room2 and robot1 is not carrying ball6 with rgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "00d6222d-409a-4f9b-a257-84777e2c1bfc", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, are all of the following properties: ball7 is not at room4, ball10 is not at room3, ball3 is not at room1, ball6 is not at room4, ball9 is not at room2, ball5 is not at room3, robot1 is not carrying ball2 with lgripper1, ball8 is not at room2, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2 and robot1 is not carrying ball4 with lgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "008b722d-3f99-4897-97d4-799abf533311", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "ball3 is at room1, ball6 is at room4, ball8 is at room2, robot1 is carrying ball1 with rgripper1, ball4 is at room1, ball10 is at room3, robot1 is carrying ball2 with lgripper1, ball9 is at room2, robot1 is at room4, ball5 is at room3 and ball7 is at room4", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "0fe19486-c67c-4e01-8115-fd70d5a4abb8", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, ball6 is not at room2, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "5efaa443-3fd0-451c-9d1b-fdb44ce2917f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, are all of the following properties: ball3 is at room1, ball6 is at room4, ball8 is at room2, ball4 is at room1, ball10 is at room3, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball5 with rgripper1, ball9 is at room2, ball1 is at room4, ball7 is at room4 and robot1 is at room1, correct? Respond with True or False.", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ef8a88c9-16be-4103-8904-cbb567e7f926", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, are all of the following properties: ball8 is at room4, ball10 is at room4, ball7 is at room3, robot1 is carrying ball7 with rgripper1, robot1 is carrying ball8 with rgripper1, ball8 is at room3, ball3 is at room1, ball6 is at room4, ball8 is at room2, ball4 is at room1 and ball10 is at room3, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "611b632d-8328-4fee-a3e4-074f6aed20c0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, are all of the following properties: robot1 is carrying ball9 with lgripper1, ball1 is at room1, ball8 is at room4, ball5 is at room2, ball3 is at room1, ball6 is at room4, ball8 is at room2, ball4 is at room1, ball10 is at room3, robot1 is carrying ball2 with lgripper1 and robot1 is carrying ball5 with rgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "0b365dfb-c6ba-4721-84b0-80abdee67615", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, are all of the following properties: robot1 is carrying ball4 with rgripper1, ball1 is at room2, ball3 is at room3, robot1 is carrying ball10 with lgripper1, ball6 is at room3, ball5 is at room1, ball3 is at room1, ball6 is at room4, ball8 is at room2, ball4 is at room1 and ball10 is at room3, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9e7ecb0a-4918-487d-9d54-157f33c5b718", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, are all of the following properties: ball4 is not at room1, ball10 is not at room3, ball6 is not at room4, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball5 with rgripper1, ball1 is not at room4, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball5 is not at room3, robot1 is not carrying ball10 with rgripper1, ball1 is not at room3, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball8 with lgripper1 and robot1 is not carrying ball9 with lgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8cf9e0b5-92d1-40df-b5ea-a055b5ee1af9", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, are all of the following properties: ball4 is not at room1, ball9 is not at room2, ball8 is not at room2, robot1 is not at room1, robot1 is not carrying ball2 with lgripper1, ball10 is not at room3, ball1 is not at room4, robot1 is not carrying ball5 with rgripper1, ball7 is not at room4, ball6 is not at room4, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball5 is not at room3, robot1 is not carrying ball10 with rgripper1, ball1 is not at room3, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2 and robot1 is not carrying ball4 with lgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8e84cf92-3914-4b55-ae32-9b9eda4ffd80", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, are all of the following properties: robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball5 is not at room3, robot1 is not carrying ball10 with rgripper1, ball1 is not at room3, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2, correct? Respond with True or False.", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3d0c50e8-2c0c-4c21-9642-3153ce2bb2ea", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, are all of the following properties: ball8 is not at room2, ball7 is not at room4, robot1 is not carrying ball2 with lgripper1, ball3 is not at room1, robot1 is not carrying ball5 with rgripper1, ball6 is not at room4, robot1 is not at room1, ball4 is not at room1, ball10 is not at room3, ball1 is not at room4, robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball5 is not at room3, robot1 is not carrying ball10 with rgripper1, ball1 is not at room3, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2 and robot1 is not carrying ball4 with lgripper1, correct? Respond with True or False.", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "abb4f6b3-5e30-495c-99a9-0ac077fa5436", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, list all valid properties of the state. Write None if there are none.", "answer": "ball3 is at room1, ball6 is at room4, ball8 is at room2, ball4 is at room1, ball10 is at room3, robot1 is carrying ball2 with lgripper1, robot1 is carrying ball5 with rgripper1, ball9 is at room2, ball1 is at room4, ball7 is at room4 and robot1 is at room1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "fc0cd447-3783-45c0-9802-f67e8375e392", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "state_tracking", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, list all valid properties of the state that involve negations. Write None if there are none.", "answer": "robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball5 is not at room3, robot1 is not carrying ball10 with rgripper1, ball1 is not at room3, ball6 is not at room1, robot1 is not at room3, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f5473ecb-014a-4fe5-9639-325e88ccdaac", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6ab4470d-8567-481d-93ab-a9e02707ffe2", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball9 is dropped in room3 with rgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "de290aa7-28dd-409e-b167-e199e150dae5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball6 is picked from room2 with rgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e179264e-9eae-4412-9002-34860da9f0f1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball8 is dropped in room3 with lgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "443c2e67-8dab-466f-8995-b83ba7bc4f26", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: robot1 moves from room1 to room2. Is the action: robot1 moves from room1 to room2 executable at step 1, True or False?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "49aa159d-3e08-4a5f-8e0d-f63f8f1e39b2", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: ball5 is picked from room4 with rgripper1 by robot1. Is the action: ball5 is picked from room4 with rgripper1 by robot1 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6f44a345-b9cf-45e3-b72b-89556b19ccb9", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: ball4 is dropped in room4 with rgripper1 by robot1. Is the action: ball4 is dropped in room4 with rgripper1 by robot1 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4da70118-94e2-4be8-ac57-19ad1f8204ae", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 1 the following actions are planned to be performed: ball7 is picked from room1 with lgripper1 by robot1. Is the action: ball7 is picked from room1 with lgripper1 by robot1 executable at step 1, True or False?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "93d32ac6-0b24-4bee-8c5b-a43d30e25bc9", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "ball9 is picked from room2 with lgripper1 by robot1, ball9 is picked from room2 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room3, ball4 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, ball10 is picked from room2 with rgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room4, ball10 is picked from room2 with lgripper1 by robot1 and robot1 moves from room2 to room1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1ec6da52-6e8e-469f-a191-95703c87213d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "ball6 is picked from room2 with rgripper1 by robot1, ball5 is picked from room4 with lgripper1 by robot1, ball5 is dropped in room4 with lgripper1 by robot1, ball2 is dropped in room2 with rgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, ball6 is picked from room2 with lgripper1 by robot1, ball10 is dropped in room4 with rgripper1 by robot1, ball1 is picked from room4 with lgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball6 is dropped in room4 with lgripper1 by robot1, ball1 is picked from room3 with lgripper1 by robot1, ball4 is dropped in room2 with rgripper1 by robot1, ball4 is dropped in room3 with lgripper1 by robot1, ball8 is dropped in room4 with rgripper1 by robot1, ball10 is picked from room3 with rgripper1 by robot1, ball8 is dropped in room3 with rgripper1 by robot1, ball6 is dropped in room3 with lgripper1 by robot1, ball5 is picked from room4 with rgripper1 by robot1, ball6 is picked from room4 with lgripper1 by robot1, ball5 is picked from room2 with lgripper1 by robot1, ball1 is dropped in room3 with rgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball3 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room2 with rgripper1 by robot1, ball8 is picked from room4 with lgripper1 by robot1, ball8 is picked from room4 with rgripper1 by robot1, ball2 is picked from room2 with lgripper1 by robot1, ball1 is picked from room4 with rgripper1 by robot1, ball9 is picked from room1 with rgripper1 by robot1, ball3 is dropped in room4 with rgripper1 by robot1, ball9 is dropped in room3 with lgripper1 by robot1, ball5 is dropped in room3 with lgripper1 by robot1, ball10 is dropped in room3 with rgripper1 by robot1, ball2 is picked from room1 with rgripper1 by robot1, ball4 is dropped in room4 with lgripper1 by robot1, robot1 moves from room3 to room1, ball2 is dropped in room3 with rgripper1 by robot1, ball4 is picked from room1 with rgripper1 by robot1, ball6 is picked from room1 with lgripper1 by robot1, ball4 is dropped in room4 with rgripper1 by robot1, ball1 is picked from room2 with rgripper1 by robot1, ball7 is dropped in room1 with lgripper1 by robot1, ball3 is picked from room1 with lgripper1 by robot1, ball9 is picked from room1 with lgripper1 by robot1, ball1 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room3 with lgripper1 by robot1, ball2 is dropped in room1 with lgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room2 with rgripper1 by robot1, ball6 is dropped in room1 with rgripper1 by robot1, ball9 is dropped in room1 with rgripper1 by robot1, ball9 is dropped in room2 with lgripper1 by robot1, ball3 is dropped in room4 with lgripper1 by robot1, ball5 is picked from room3 with lgripper1 by robot1, ball1 is dropped in room2 with rgripper1 by robot1, ball6 is dropped in room2 with rgripper1 by robot1, ball10 is picked from room1 with lgripper1 by robot1, ball9 is dropped in room2 with rgripper1 by robot1, ball10 is picked from room3 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room1 to room4, ball6 is dropped in room3 with rgripper1 by robot1, ball10 is dropped in room4 with lgripper1 by robot1, ball4 is picked from room3 with lgripper1 by robot1, ball3 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room3 with lgripper1 by robot1, ball3 is dropped in room3 with lgripper1 by robot1, ball6 is picked from room4 with rgripper1 by robot1, ball5 is dropped in room1 with lgripper1 by robot1, ball4 is dropped in room1 with rgripper1 by robot1, ball2 is picked from room4 with rgripper1 by robot1, ball8 is picked from room3 with rgripper1 by robot1, ball8 is picked from room2 with lgripper1 by robot1, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room1 with rgripper1 by robot1, ball5 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, ball5 is dropped in room2 with lgripper1 by robot1, ball10 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room4 with rgripper1 by robot1, ball7 is dropped in room3 with rgripper1 by robot1, ball4 is picked from room1 with lgripper1 by robot1, ball10 is dropped in room1 with rgripper1 by robot1, ball4 is dropped in room1 with lgripper1 by robot1, ball7 is picked from room1 with lgripper1 by robot1, ball3 is picked from room3 with lgripper1 by robot1, ball6 is picked from room3 with lgripper1 by robot1, ball4 is picked from room3 with rgripper1 by robot1, ball2 is dropped in room3 with lgripper1 by robot1, ball7 is dropped in room3 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, ball9 is picked from room3 with rgripper1 by robot1, ball2 is dropped in room4 with lgripper1 by robot1, ball8 is dropped in room2 with rgripper1 by robot1, ball5 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball4 is picked from room4 with lgripper1 by robot1, ball2 is dropped in room2 with lgripper1 by robot1, ball5 is picked from room2 with rgripper1 by robot1, ball9 is dropped in room3 with rgripper1 by robot1, ball1 is dropped in room1 with rgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, ball3 is picked from room4 with rgripper1 by robot1, ball8 is dropped in room1 with lgripper1 by robot1, robot1 moves from room3 to room2, ball3 is dropped in room2 with lgripper1 by robot1, ball8 is dropped in room1 with rgripper1 by robot1, ball5 is dropped in room2 with rgripper1 by robot1, ball6 is dropped in room4 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, ball5 is dropped in room4 with rgripper1 by robot1, ball3 is dropped in room2 with rgripper1 by robot1, ball1 is dropped in room2 with lgripper1 by robot1, ball9 is dropped in room1 with lgripper1 by robot1, ball2 is dropped in room4 with rgripper1 by robot1, ball7 is dropped in room2 with rgripper1 by robot1, ball10 is picked from room4 with lgripper1 by robot1, ball10 is picked from room1 with rgripper1 by robot1, ball8 is dropped in room4 with lgripper1 by robot1, ball9 is dropped in room4 with rgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball4 is dropped in room3 with rgripper1 by robot1, ball8 is dropped in room3 with lgripper1 by robot1, ball4 is picked from room4 with rgripper1 by robot1, ball5 is picked from room3 with rgripper1 by robot1, ball4 is dropped in room2 with lgripper1 by robot1, robot1 moves from room3 to room4, ball7 is picked from room3 with rgripper1 by robot1, ball1 is dropped in room4 with lgripper1 by robot1, ball3 is picked from room2 with lgripper1 by robot1, ball3 is dropped in room1 with rgripper1 by robot1, ball1 is picked from room1 with rgripper1 by robot1, ball5 is picked from room1 with rgripper1 by robot1, ball3 is picked from room4 with lgripper1 by robot1, ball1 is picked from room1 with lgripper1 by robot1, ball10 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, ball9 is picked from room4 with lgripper1 by robot1, ball1 is picked from room2 with lgripper1 by robot1, ball6 is dropped in room1 with lgripper1 by robot1, ball9 is dropped in room4 with lgripper1 by robot1, ball10 is dropped in room2 with rgripper1 by robot1, ball9 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room2 with lgripper1 by robot1, robot1 moves from room4 to room2, ball10 is dropped in room3 with lgripper1 by robot1, ball2 is dropped in room1 with rgripper1 by robot1, robot1 moves from room4 to room1, ball6 is picked from room3 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is dropped in room3 with rgripper1 by robot1, ball1 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room1 with rgripper1 by robot1, ball7 is picked from room4 with rgripper1 by robot1, ball10 is picked from room4 with rgripper1 by robot1, ball7 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot1, ball2 is picked from room3 with rgripper1 by robot1 and ball8 is picked from room1 with lgripper1 by robot1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "eb673147-c2aa-4453-b142-4e4fac07004b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball9 is picked from room1 with rgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball9 is picked from room1 with rgripper1 by robot1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "07363667-ebfd-40f7-8414-edebce69c473", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "72524bce-1b17-4fc6-8781-aa1c7b6dce31", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball1 is dropped in room3 with lgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball1 is dropped in room3 with lgripper1 by robot1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "38f00f9d-16f7-40dd-80e1-ab7ace7da6bd", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball10 is picked from room4 with rgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball10 is picked from room4 with rgripper1 by robot1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "99ec4b62-c91d-4dd6-b07d-c0022a4d757e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f65251dc-838a-45f4-af13-292e7c854974", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball1 is picked from room2 with rgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "177b49bc-681c-42ee-8cc0-bb7ab4d9f7a5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball6 is dropped in room3 with lgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "50055d67-a80c-4a1c-8300-3e4a2f9249ba", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball5 is dropped in room1 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "55db8f67-9877-48ae-ab83-7573216aa668", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, ball8 is picked from room4 with rgripper1 by robot1 and ball4 is dropped in room1 with rgripper1 by robot1. Is the action: ball8 is picked from room4 with rgripper1 by robot1 executable at step 4, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4d195135-0188-4246-859b-56fab5922ea3", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: ball5 is picked from room3 with lgripper1 by robot1, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1. Is the action: ball5 is picked from room3 with lgripper1 by robot1 executable at step 1, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2b63041d-3ed2-43b7-9581-bd39f8e4b6c0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: robot1 moves from room3 to room1, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1. Is the action: robot1 moves from room3 to room1 executable at step 1, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "84f766a3-d6f6-4ffa-86ca-faa5f9f3ed69", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 5 the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1. Is the action: ball7 is picked from room4 with lgripper1 by robot1 executable at step 3, True or False?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f610e946-2db5-4b83-b48c-4275e4d2068c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "ball3 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball4 is picked from room1 with rgripper1 by robot1, robot1 moves from room1 to room4, robot1 moves from room1 to room2 and ball10 is dropped in room1 with lgripper1 by robot1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6bd524b5-271b-4624-bcad-89ec2b9c8296", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "ball6 is picked from room2 with rgripper1 by robot1, ball5 is picked from room4 with lgripper1 by robot1, ball5 is dropped in room4 with lgripper1 by robot1, ball2 is dropped in room2 with rgripper1 by robot1, ball6 is picked from room2 with lgripper1 by robot1, ball10 is dropped in room4 with rgripper1 by robot1, ball1 is picked from room4 with lgripper1 by robot1, ball1 is picked from room3 with rgripper1 by robot1, ball6 is dropped in room4 with lgripper1 by robot1, ball1 is picked from room3 with lgripper1 by robot1, ball4 is dropped in room2 with rgripper1 by robot1, ball4 is dropped in room3 with lgripper1 by robot1, ball8 is dropped in room4 with rgripper1 by robot1, ball10 is picked from room3 with rgripper1 by robot1, ball8 is dropped in room3 with rgripper1 by robot1, ball6 is dropped in room3 with lgripper1 by robot1, ball5 is picked from room4 with rgripper1 by robot1, ball6 is picked from room4 with lgripper1 by robot1, ball5 is picked from room2 with lgripper1 by robot1, ball1 is dropped in room3 with rgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball3 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room2 with rgripper1 by robot1, ball8 is picked from room4 with lgripper1 by robot1, ball8 is picked from room4 with rgripper1 by robot1, ball2 is picked from room2 with lgripper1 by robot1, ball1 is picked from room4 with rgripper1 by robot1, ball9 is picked from room1 with rgripper1 by robot1, ball3 is dropped in room4 with rgripper1 by robot1, ball9 is dropped in room3 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1, ball9 is picked from room2 with rgripper1 by robot1, ball5 is dropped in room3 with lgripper1 by robot1, ball10 is dropped in room3 with rgripper1 by robot1, ball2 is picked from room1 with rgripper1 by robot1, ball4 is dropped in room4 with lgripper1 by robot1, robot1 moves from room3 to room1, ball2 is dropped in room3 with rgripper1 by robot1, ball6 is picked from room1 with lgripper1 by robot1, ball4 is dropped in room4 with rgripper1 by robot1, ball1 is picked from room2 with rgripper1 by robot1, ball7 is dropped in room1 with lgripper1 by robot1, ball3 is picked from room1 with lgripper1 by robot1, ball9 is picked from room1 with lgripper1 by robot1, ball1 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room3 with lgripper1 by robot1, ball2 is dropped in room1 with lgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room2 with rgripper1 by robot1, ball6 is dropped in room1 with rgripper1 by robot1, ball9 is dropped in room1 with rgripper1 by robot1, ball9 is dropped in room2 with lgripper1 by robot1, ball3 is dropped in room4 with lgripper1 by robot1, ball5 is picked from room3 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, ball1 is dropped in room2 with rgripper1 by robot1, ball6 is dropped in room2 with rgripper1 by robot1, ball10 is picked from room1 with lgripper1 by robot1, robot1 moves from room2 to room3, ball4 is picked from room2 with lgripper1 by robot1, ball9 is dropped in room2 with rgripper1 by robot1, ball10 is picked from room3 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, ball10 is dropped in room4 with lgripper1 by robot1, ball4 is picked from room3 with lgripper1 by robot1, ball3 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, ball7 is picked from room3 with lgripper1 by robot1, ball3 is dropped in room3 with lgripper1 by robot1, ball6 is picked from room4 with rgripper1 by robot1, ball5 is dropped in room1 with lgripper1 by robot1, ball4 is dropped in room1 with rgripper1 by robot1, ball2 is picked from room4 with rgripper1 by robot1, ball8 is picked from room3 with rgripper1 by robot1, ball8 is picked from room2 with lgripper1 by robot1, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room1 with rgripper1 by robot1, ball5 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, ball5 is dropped in room2 with lgripper1 by robot1, ball10 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room4 with rgripper1 by robot1, ball7 is dropped in room3 with rgripper1 by robot1, ball4 is picked from room1 with lgripper1 by robot1, ball10 is dropped in room1 with rgripper1 by robot1, ball4 is dropped in room1 with lgripper1 by robot1, ball7 is picked from room1 with lgripper1 by robot1, ball3 is picked from room3 with lgripper1 by robot1, ball6 is picked from room3 with lgripper1 by robot1, ball4 is picked from room3 with rgripper1 by robot1, ball2 is dropped in room3 with lgripper1 by robot1, ball7 is dropped in room3 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, ball9 is picked from room3 with rgripper1 by robot1, ball2 is dropped in room4 with lgripper1 by robot1, ball8 is dropped in room2 with rgripper1 by robot1, ball5 is picked from room1 with lgripper1 by robot1, ball4 is picked from room4 with lgripper1 by robot1, ball2 is dropped in room2 with lgripper1 by robot1, ball5 is picked from room2 with rgripper1 by robot1, ball9 is dropped in room3 with rgripper1 by robot1, ball1 is dropped in room1 with rgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, ball3 is picked from room4 with rgripper1 by robot1, ball8 is dropped in room1 with lgripper1 by robot1, robot1 moves from room3 to room2, ball3 is dropped in room2 with lgripper1 by robot1, ball8 is dropped in room1 with rgripper1 by robot1, ball5 is dropped in room2 with rgripper1 by robot1, ball6 is dropped in room4 with rgripper1 by robot1, ball10 is picked from room2 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, ball5 is dropped in room4 with rgripper1 by robot1, ball3 is dropped in room2 with rgripper1 by robot1, ball1 is dropped in room2 with lgripper1 by robot1, ball9 is dropped in room1 with lgripper1 by robot1, ball2 is dropped in room4 with rgripper1 by robot1, ball7 is dropped in room2 with rgripper1 by robot1, ball10 is picked from room4 with lgripper1 by robot1, ball10 is picked from room1 with rgripper1 by robot1, ball8 is dropped in room4 with lgripper1 by robot1, ball9 is dropped in room4 with rgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball4 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, ball8 is dropped in room3 with lgripper1 by robot1, ball4 is picked from room4 with rgripper1 by robot1, ball5 is picked from room3 with rgripper1 by robot1, robot1 moves from room2 to room4, ball4 is dropped in room2 with lgripper1 by robot1, robot1 moves from room3 to room4, ball7 is picked from room3 with rgripper1 by robot1, ball1 is dropped in room4 with lgripper1 by robot1, ball3 is picked from room2 with lgripper1 by robot1, ball3 is dropped in room1 with rgripper1 by robot1, ball1 is picked from room1 with rgripper1 by robot1, ball5 is picked from room1 with rgripper1 by robot1, ball3 is picked from room4 with lgripper1 by robot1, ball1 is picked from room1 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, ball9 is picked from room4 with lgripper1 by robot1, ball1 is picked from room2 with lgripper1 by robot1, ball6 is dropped in room1 with lgripper1 by robot1, ball9 is dropped in room4 with lgripper1 by robot1, ball10 is dropped in room2 with rgripper1 by robot1, ball9 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room2 with lgripper1 by robot1, robot1 moves from room4 to room2, ball10 is dropped in room3 with lgripper1 by robot1, ball2 is dropped in room1 with rgripper1 by robot1, robot1 moves from room4 to room1, ball6 is picked from room3 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is dropped in room3 with rgripper1 by robot1, ball10 is picked from room2 with lgripper1 by robot1, ball1 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room1 with rgripper1 by robot1, ball7 is picked from room4 with rgripper1 by robot1, ball10 is picked from room4 with rgripper1 by robot1, ball7 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot1, ball2 is picked from room3 with rgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1 and robot1 moves from room2 to room1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d0e05b31-7f14-4588-b0c4-7e69d93f7a36", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "50812e4d-8928-455d-88dd-7cfe7c35fcea", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball5 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball5 is picked from room2 with rgripper1 by robot1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "612550cc-3486-4e37-9dd5-0529faf56f32", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball6 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball6 is picked from room2 with lgripper1 by robot1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "96826e88-d406-45e0-8d24-1f328950059a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball2 is dropped in room1 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball2 is dropped in room1 with rgripper1 by robot1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c52cfe5e-c387-471f-b9ad-77a651eb0415", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1 and robot1 moves from room3 to room2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "34042f40-93e0-4fda-8093-55f7fccb5f6f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ed79c17e-970c-46fd-996e-b4d10573d892", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball9 is picked from room1 with rgripper1 by robot1, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9d7a0689-a807-4a22-9d18-4e964cb5a7fb", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, ball5 is picked from room1 with rgripper1 by robot1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4c4143a9-e555-4285-b57e-53b1d0333507", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball6 is picked from room4 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2. Is the action: ball6 is picked from room4 with rgripper1 by robot1 executable at step 5, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "edebc5eb-fe4f-440c-a3ef-1b59f98ab5ca", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball9 is picked from room1 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2. Is the action: ball9 is picked from room1 with lgripper1 by robot1 executable at step 8, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "21602997-b2ec-4120-a89e-153f3c0721f5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: robot1 moves from room1 to room2, ball2 is dropped in room1 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2. Is the action: ball2 is dropped in room1 with rgripper1 by robot1 executable at step 2, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d59d05fe-0650-4d65-a3b0-fb73b564ee8e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 10 the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball10 is picked from room1 with lgripper1 by robot1, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2. Is the action: ball10 is picked from room1 with lgripper1 by robot1 executable at step 6, True or False?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "648b0063-2e96-441f-b43b-940670e1da36", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "ball1 is dropped in room2 with rgripper1 by robot1, robot1 moves from room2 to room3, ball8 is dropped in room2 with lgripper1 by robot1, robot1 moves from room2 to room4 and robot1 moves from room2 to room1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c6037144-a210-4f57-b9fc-f7a2f4e288ed", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "ball6 is picked from room2 with rgripper1 by robot1, ball5 is picked from room4 with lgripper1 by robot1, ball5 is dropped in room4 with lgripper1 by robot1, ball2 is dropped in room2 with rgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, ball6 is picked from room2 with lgripper1 by robot1, ball10 is dropped in room4 with rgripper1 by robot1, ball1 is picked from room4 with lgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball6 is dropped in room4 with lgripper1 by robot1, ball1 is picked from room3 with lgripper1 by robot1, ball4 is dropped in room2 with rgripper1 by robot1, ball4 is dropped in room3 with lgripper1 by robot1, ball8 is dropped in room4 with rgripper1 by robot1, ball10 is picked from room3 with rgripper1 by robot1, ball8 is dropped in room3 with rgripper1 by robot1, ball6 is dropped in room3 with lgripper1 by robot1, ball5 is picked from room4 with rgripper1 by robot1, ball6 is picked from room4 with lgripper1 by robot1, ball5 is picked from room2 with lgripper1 by robot1, ball1 is dropped in room3 with rgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball3 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room2 with rgripper1 by robot1, ball8 is picked from room4 with lgripper1 by robot1, ball8 is picked from room4 with rgripper1 by robot1, ball2 is picked from room2 with lgripper1 by robot1, ball1 is picked from room4 with rgripper1 by robot1, ball9 is picked from room1 with rgripper1 by robot1, ball3 is dropped in room4 with rgripper1 by robot1, ball9 is dropped in room3 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1, ball9 is picked from room2 with rgripper1 by robot1, ball5 is dropped in room3 with lgripper1 by robot1, ball10 is dropped in room3 with rgripper1 by robot1, ball2 is picked from room1 with rgripper1 by robot1, ball4 is dropped in room4 with lgripper1 by robot1, robot1 moves from room3 to room1, ball2 is dropped in room3 with rgripper1 by robot1, ball4 is picked from room1 with rgripper1 by robot1, ball6 is picked from room1 with lgripper1 by robot1, ball4 is dropped in room4 with rgripper1 by robot1, ball1 is picked from room2 with rgripper1 by robot1, ball7 is dropped in room1 with lgripper1 by robot1, ball3 is picked from room1 with lgripper1 by robot1, ball9 is picked from room1 with lgripper1 by robot1, ball1 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room3 with lgripper1 by robot1, ball2 is dropped in room1 with lgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room2 with rgripper1 by robot1, ball6 is dropped in room1 with rgripper1 by robot1, ball9 is dropped in room1 with rgripper1 by robot1, ball9 is dropped in room2 with lgripper1 by robot1, ball3 is dropped in room4 with lgripper1 by robot1, ball5 is picked from room3 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, ball6 is dropped in room2 with rgripper1 by robot1, ball10 is picked from room1 with lgripper1 by robot1, ball4 is picked from room2 with lgripper1 by robot1, ball9 is dropped in room2 with rgripper1 by robot1, ball10 is picked from room3 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room1 to room4, ball6 is dropped in room3 with rgripper1 by robot1, ball10 is dropped in room4 with lgripper1 by robot1, ball4 is picked from room3 with lgripper1 by robot1, ball3 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, ball7 is picked from room3 with lgripper1 by robot1, ball3 is dropped in room3 with lgripper1 by robot1, ball6 is picked from room4 with rgripper1 by robot1, ball5 is dropped in room1 with lgripper1 by robot1, ball4 is dropped in room1 with rgripper1 by robot1, ball2 is picked from room4 with rgripper1 by robot1, ball8 is picked from room3 with rgripper1 by robot1, ball8 is picked from room2 with lgripper1 by robot1, ball7 is picked from room1 with rgripper1 by robot1, ball5 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, ball5 is dropped in room2 with lgripper1 by robot1, ball10 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room4 with rgripper1 by robot1, ball7 is dropped in room3 with rgripper1 by robot1, ball4 is picked from room1 with lgripper1 by robot1, ball10 is dropped in room1 with rgripper1 by robot1, ball4 is dropped in room1 with lgripper1 by robot1, ball7 is picked from room1 with lgripper1 by robot1, ball3 is picked from room3 with lgripper1 by robot1, ball6 is picked from room3 with lgripper1 by robot1, ball4 is picked from room3 with rgripper1 by robot1, ball2 is dropped in room3 with lgripper1 by robot1, ball7 is dropped in room3 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, ball9 is picked from room3 with rgripper1 by robot1, ball2 is dropped in room4 with lgripper1 by robot1, ball8 is dropped in room2 with rgripper1 by robot1, ball5 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball4 is picked from room4 with lgripper1 by robot1, ball2 is dropped in room2 with lgripper1 by robot1, ball5 is picked from room2 with rgripper1 by robot1, ball9 is dropped in room3 with rgripper1 by robot1, ball1 is dropped in room1 with rgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, ball3 is picked from room4 with rgripper1 by robot1, ball8 is dropped in room1 with lgripper1 by robot1, robot1 moves from room3 to room2, ball3 is dropped in room2 with lgripper1 by robot1, ball8 is dropped in room1 with rgripper1 by robot1, ball5 is dropped in room2 with rgripper1 by robot1, ball6 is dropped in room4 with rgripper1 by robot1, ball10 is picked from room2 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, ball5 is dropped in room4 with rgripper1 by robot1, ball3 is dropped in room2 with rgripper1 by robot1, ball1 is dropped in room2 with lgripper1 by robot1, ball9 is dropped in room1 with lgripper1 by robot1, ball2 is dropped in room4 with rgripper1 by robot1, ball7 is dropped in room2 with rgripper1 by robot1, ball10 is picked from room4 with lgripper1 by robot1, ball10 is picked from room1 with rgripper1 by robot1, ball8 is dropped in room4 with lgripper1 by robot1, ball9 is dropped in room4 with rgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball4 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, ball8 is dropped in room3 with lgripper1 by robot1, ball4 is picked from room4 with rgripper1 by robot1, ball5 is picked from room3 with rgripper1 by robot1, ball4 is dropped in room2 with lgripper1 by robot1, robot1 moves from room3 to room4, ball7 is picked from room3 with rgripper1 by robot1, ball1 is dropped in room4 with lgripper1 by robot1, ball3 is picked from room2 with lgripper1 by robot1, ball3 is dropped in room1 with rgripper1 by robot1, ball1 is picked from room1 with rgripper1 by robot1, ball5 is picked from room1 with rgripper1 by robot1, ball3 is picked from room4 with lgripper1 by robot1, ball1 is picked from room1 with lgripper1 by robot1, ball10 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, ball9 is picked from room4 with lgripper1 by robot1, ball1 is picked from room2 with lgripper1 by robot1, ball6 is dropped in room1 with lgripper1 by robot1, ball9 is dropped in room4 with lgripper1 by robot1, ball10 is dropped in room2 with rgripper1 by robot1, ball9 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room2 with lgripper1 by robot1, robot1 moves from room4 to room2, ball10 is dropped in room3 with lgripper1 by robot1, ball2 is dropped in room1 with rgripper1 by robot1, robot1 moves from room4 to room1, ball6 is picked from room3 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is dropped in room3 with rgripper1 by robot1, ball10 is picked from room2 with lgripper1 by robot1, ball1 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room1 with rgripper1 by robot1, ball7 is picked from room4 with rgripper1 by robot1, ball10 is picked from room4 with rgripper1 by robot1, ball7 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot1, ball2 is picked from room3 with rgripper1 by robot1 and ball8 is picked from room1 with lgripper1 by robot1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "626992a7-4fbf-47c6-9c44-fbbabebd7829", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room1 with rgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball10 is dropped in room1 with rgripper1 by robot1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d9fdb8cd-716c-47fc-a6b5-2e3257ea71fb", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b7516988-80cf-462b-a843-2aa2cae51393", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball8 is picked from room3 with lgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball8 is picked from room3 with lgripper1 by robot1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "23e0696c-9dde-4aa9-a9df-8279d7c81d60", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, ball4 is picked from room2 with lgripper1 by robot1, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball4 is picked from room2 with lgripper1 by robot1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d79a5887-576f-42ac-aeee-56c5056d8cd1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7cfd6f5f-7bbf-41b8-bc77-5de1a5ff80de", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball1 is picked from room3 with lgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1735346e-3992-4719-b89e-cc35e9aed012", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball1 is dropped in room4 with rgripper1 by robot1, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "815f07a3-f6b6-4811-8cc5-e02a9340f744", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with rgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "0e2a6c68-cc48-4889-8ec7-118cdd57362e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1. Is the action: ball1 is picked from room3 with rgripper1 by robot1 executable at step 7, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3a8267ab-a834-4c44-8d72-1000ae121676", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, ball4 is picked from room4 with lgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1. Is the action: ball4 is picked from room4 with lgripper1 by robot1 executable at step 13, True or False?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "fed1be23-7127-49f5-b879-f7de2a5430dd", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1. Is the action: ball7 is dropped in room4 with lgripper1 by robot1 executable at step 14, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "62b66fc3-8f37-4446-8063-dc7a888381dd", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 15 the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1. Is the action: ball4 is dropped in room1 with rgripper1 by robot1 executable at step 5, True or False?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c4570b60-019c-4a7b-8396-c67bc74f352e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "ball2 is dropped in room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room2, robot1 moves from room4 to room1 and robot1 moves from room4 to room3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8012c7df-58e9-4054-908b-3b10019e04f4", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "ball6 is picked from room2 with rgripper1 by robot1, ball5 is picked from room4 with lgripper1 by robot1, ball5 is dropped in room4 with lgripper1 by robot1, ball2 is dropped in room2 with rgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, ball6 is picked from room2 with lgripper1 by robot1, ball10 is dropped in room4 with rgripper1 by robot1, ball1 is picked from room4 with lgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball6 is dropped in room4 with lgripper1 by robot1, ball1 is picked from room3 with lgripper1 by robot1, ball4 is dropped in room2 with rgripper1 by robot1, ball4 is dropped in room3 with lgripper1 by robot1, ball8 is dropped in room4 with rgripper1 by robot1, ball10 is picked from room3 with rgripper1 by robot1, ball8 is dropped in room3 with rgripper1 by robot1, ball6 is dropped in room3 with lgripper1 by robot1, ball5 is picked from room4 with rgripper1 by robot1, ball6 is picked from room4 with lgripper1 by robot1, ball5 is picked from room2 with lgripper1 by robot1, ball1 is dropped in room3 with rgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball3 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room2 with rgripper1 by robot1, ball8 is picked from room4 with lgripper1 by robot1, ball8 is picked from room4 with rgripper1 by robot1, ball2 is picked from room2 with lgripper1 by robot1, ball1 is picked from room4 with rgripper1 by robot1, ball9 is picked from room1 with rgripper1 by robot1, ball3 is dropped in room4 with rgripper1 by robot1, ball9 is dropped in room3 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1, ball9 is picked from room2 with rgripper1 by robot1, ball5 is dropped in room3 with lgripper1 by robot1, ball10 is dropped in room3 with rgripper1 by robot1, ball2 is picked from room1 with rgripper1 by robot1, ball4 is dropped in room4 with lgripper1 by robot1, robot1 moves from room3 to room1, ball2 is dropped in room3 with rgripper1 by robot1, ball4 is picked from room1 with rgripper1 by robot1, ball6 is picked from room1 with lgripper1 by robot1, ball4 is dropped in room4 with rgripper1 by robot1, ball1 is picked from room2 with rgripper1 by robot1, ball7 is dropped in room1 with lgripper1 by robot1, ball3 is picked from room1 with lgripper1 by robot1, ball9 is picked from room1 with lgripper1 by robot1, ball1 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room3 with lgripper1 by robot1, ball2 is dropped in room1 with lgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room2 with rgripper1 by robot1, ball6 is dropped in room1 with rgripper1 by robot1, ball9 is dropped in room1 with rgripper1 by robot1, ball9 is dropped in room2 with lgripper1 by robot1, ball3 is dropped in room4 with lgripper1 by robot1, ball5 is picked from room3 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, ball1 is dropped in room2 with rgripper1 by robot1, ball6 is dropped in room2 with rgripper1 by robot1, ball10 is picked from room1 with lgripper1 by robot1, robot1 moves from room2 to room3, ball4 is picked from room2 with lgripper1 by robot1, ball9 is dropped in room2 with rgripper1 by robot1, ball10 is picked from room3 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, robot1 moves from room1 to room4, ball6 is dropped in room3 with rgripper1 by robot1, ball10 is dropped in room4 with lgripper1 by robot1, ball4 is picked from room3 with lgripper1 by robot1, ball3 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, ball7 is picked from room3 with lgripper1 by robot1, ball3 is dropped in room3 with lgripper1 by robot1, ball6 is picked from room4 with rgripper1 by robot1, ball5 is dropped in room1 with lgripper1 by robot1, ball4 is dropped in room1 with rgripper1 by robot1, ball2 is picked from room4 with rgripper1 by robot1, ball8 is picked from room3 with rgripper1 by robot1, ball8 is picked from room2 with lgripper1 by robot1, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room1 with rgripper1 by robot1, ball5 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, ball5 is dropped in room2 with lgripper1 by robot1, ball10 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room4 with rgripper1 by robot1, ball7 is dropped in room3 with rgripper1 by robot1, ball4 is picked from room1 with lgripper1 by robot1, ball10 is dropped in room1 with rgripper1 by robot1, ball4 is dropped in room1 with lgripper1 by robot1, ball7 is picked from room1 with lgripper1 by robot1, ball3 is picked from room3 with lgripper1 by robot1, ball6 is picked from room3 with lgripper1 by robot1, ball4 is picked from room3 with rgripper1 by robot1, ball2 is dropped in room3 with lgripper1 by robot1, ball7 is dropped in room3 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, ball9 is picked from room3 with rgripper1 by robot1, ball8 is dropped in room2 with rgripper1 by robot1, ball5 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room2, ball4 is picked from room4 with lgripper1 by robot1, ball2 is dropped in room2 with lgripper1 by robot1, ball5 is picked from room2 with rgripper1 by robot1, ball9 is dropped in room3 with rgripper1 by robot1, ball1 is dropped in room1 with rgripper1 by robot1, ball3 is picked from room4 with rgripper1 by robot1, ball8 is dropped in room1 with lgripper1 by robot1, robot1 moves from room3 to room2, ball3 is dropped in room2 with lgripper1 by robot1, ball8 is dropped in room1 with rgripper1 by robot1, ball5 is dropped in room2 with rgripper1 by robot1, ball6 is dropped in room4 with rgripper1 by robot1, ball10 is picked from room2 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, ball5 is dropped in room4 with rgripper1 by robot1, ball3 is dropped in room2 with rgripper1 by robot1, ball1 is dropped in room2 with lgripper1 by robot1, ball9 is dropped in room1 with lgripper1 by robot1, ball2 is dropped in room4 with rgripper1 by robot1, ball7 is dropped in room2 with rgripper1 by robot1, ball10 is picked from room4 with lgripper1 by robot1, ball10 is picked from room1 with rgripper1 by robot1, ball8 is dropped in room4 with lgripper1 by robot1, ball9 is dropped in room4 with rgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball4 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, ball8 is dropped in room3 with lgripper1 by robot1, ball4 is picked from room4 with rgripper1 by robot1, ball5 is picked from room3 with rgripper1 by robot1, robot1 moves from room2 to room4, ball4 is dropped in room2 with lgripper1 by robot1, robot1 moves from room3 to room4, ball7 is picked from room3 with rgripper1 by robot1, ball1 is dropped in room4 with lgripper1 by robot1, ball3 is picked from room2 with lgripper1 by robot1, ball3 is dropped in room1 with rgripper1 by robot1, ball1 is picked from room1 with rgripper1 by robot1, ball5 is picked from room1 with rgripper1 by robot1, ball3 is picked from room4 with lgripper1 by robot1, ball1 is picked from room1 with lgripper1 by robot1, ball10 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, ball9 is picked from room4 with lgripper1 by robot1, ball1 is picked from room2 with lgripper1 by robot1, ball6 is dropped in room1 with lgripper1 by robot1, ball9 is dropped in room4 with lgripper1 by robot1, ball10 is dropped in room2 with rgripper1 by robot1, ball9 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room2 with lgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball2 is dropped in room1 with rgripper1 by robot1, ball6 is picked from room3 with rgripper1 by robot1, ball5 is dropped in room3 with rgripper1 by robot1, ball10 is picked from room2 with lgripper1 by robot1, ball1 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room1 with rgripper1 by robot1, ball7 is picked from room4 with rgripper1 by robot1, ball10 is picked from room4 with rgripper1 by robot1, ball7 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot1, ball2 is picked from room3 with rgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1 and robot1 moves from room2 to room1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "18b73314-9f03-4634-959d-209faf7d40b4", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d7204712-8e5c-49b7-bec0-3ef545d7236d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball3 is picked from room3 with rgripper1 by robot1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9cbcb9ac-5877-4b9e-a16a-ef7fbbdfb2e7", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball8 is dropped in room4 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball8 is dropped in room4 with lgripper1 by robot1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6d356ade-ffc0-4bfa-ad6b-e7d48e6f020b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball7 is picked from room2 with lgripper1 by robot1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d32542e1-edd8-4361-87b9-eb2705ae4a32", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1. Is it possible to execute it, True or False?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "0c3fb0b5-f2a2-49c5-988c-027e39be0c33", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball6 is picked from room1 with lgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9cf06cf9-01d5-4143-ae01-7b38c6650bea", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball8 is dropped in room3 with lgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4c33dd2a-25f6-4b0a-9a75-913c3dbe66b2", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball3 is picked from room3 with rgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1. Is it possible to execute it, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "06bbde8a-215e-4163-ab70-51c019b4f698", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1. Is the action: ball5 is picked from room3 with rgripper1 by robot1 executable at step 18, True or False?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "bf5d6ee3-81ad-4847-8f82-2ce27162228e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball4 is dropped in room4 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1. Is the action: ball4 is dropped in room4 with lgripper1 by robot1 executable at step 12, True or False?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "cae598da-84f5-4cfb-aad5-c88a0e1c554a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1. Is the action: robot1 moves from room2 to room1 executable at step 4, True or False?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "544af08a-cbef-48b0-beef-93908205c3ff", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, for steps 1 through 19 the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1. Is the action: ball2 is picked from room4 with lgripper1 by robot1 executable at step 15, True or False?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "278c3acf-1cca-4744-be36-51ba589f8e6f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, list all executable actions. Write None if there are none.", "answer": "robot1 moves from room1 to room3, ball2 is dropped in room1 with lgripper1 by robot1, robot1 moves from room1 to room4, ball5 is dropped in room1 with rgripper1 by robot1 and robot1 moves from room1 to room2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "16474703-fd45-47d4-ab5d-21a1a7d17d3d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, list all inexecutable actions. Write None if there are none.", "answer": "ball6 is picked from room2 with rgripper1 by robot1, ball5 is picked from room4 with lgripper1 by robot1, ball5 is dropped in room4 with lgripper1 by robot1, ball2 is dropped in room2 with rgripper1 by robot1, ball3 is picked from room1 with rgripper1 by robot1, ball6 is picked from room2 with lgripper1 by robot1, ball10 is dropped in room4 with rgripper1 by robot1, ball1 is picked from room4 with lgripper1 by robot1, ball1 is picked from room3 with rgripper1 by robot1, ball6 is dropped in room4 with lgripper1 by robot1, ball1 is picked from room3 with lgripper1 by robot1, ball4 is dropped in room2 with rgripper1 by robot1, ball4 is dropped in room3 with lgripper1 by robot1, ball8 is dropped in room4 with rgripper1 by robot1, ball10 is picked from room3 with rgripper1 by robot1, ball8 is dropped in room3 with rgripper1 by robot1, ball6 is dropped in room3 with lgripper1 by robot1, ball5 is picked from room4 with rgripper1 by robot1, ball6 is picked from room4 with lgripper1 by robot1, ball5 is picked from room2 with lgripper1 by robot1, ball1 is dropped in room3 with rgripper1 by robot1, ball2 is picked from room1 with lgripper1 by robot1, ball3 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room2 with rgripper1 by robot1, ball8 is picked from room4 with lgripper1 by robot1, ball8 is picked from room4 with rgripper1 by robot1, ball2 is picked from room2 with lgripper1 by robot1, ball1 is picked from room4 with rgripper1 by robot1, ball9 is picked from room1 with rgripper1 by robot1, ball3 is dropped in room4 with rgripper1 by robot1, ball9 is dropped in room3 with lgripper1 by robot1, ball9 is picked from room2 with lgripper1 by robot1, ball9 is picked from room2 with rgripper1 by robot1, ball5 is dropped in room3 with lgripper1 by robot1, ball10 is dropped in room3 with rgripper1 by robot1, ball2 is picked from room1 with rgripper1 by robot1, ball4 is dropped in room4 with lgripper1 by robot1, robot1 moves from room3 to room1, ball2 is dropped in room3 with rgripper1 by robot1, ball4 is picked from room1 with rgripper1 by robot1, ball6 is picked from room1 with lgripper1 by robot1, ball4 is dropped in room4 with rgripper1 by robot1, ball1 is picked from room2 with rgripper1 by robot1, ball7 is dropped in room1 with lgripper1 by robot1, ball3 is picked from room1 with lgripper1 by robot1, ball9 is picked from room1 with lgripper1 by robot1, ball1 is dropped in room1 with lgripper1 by robot1, ball2 is picked from room3 with lgripper1 by robot1, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room2 with rgripper1 by robot1, ball6 is dropped in room1 with rgripper1 by robot1, ball9 is dropped in room1 with rgripper1 by robot1, ball9 is dropped in room2 with lgripper1 by robot1, ball3 is dropped in room4 with lgripper1 by robot1, ball5 is picked from room3 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, ball1 is dropped in room2 with rgripper1 by robot1, ball6 is dropped in room2 with rgripper1 by robot1, ball10 is picked from room1 with lgripper1 by robot1, robot1 moves from room2 to room3, ball4 is picked from room2 with lgripper1 by robot1, ball9 is dropped in room2 with rgripper1 by robot1, ball10 is picked from room3 with lgripper1 by robot1, ball7 is dropped in room4 with rgripper1 by robot1, ball6 is dropped in room3 with rgripper1 by robot1, ball10 is dropped in room4 with lgripper1 by robot1, ball4 is picked from room3 with lgripper1 by robot1, ball3 is picked from room2 with rgripper1 by robot1, ball3 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, ball7 is picked from room3 with lgripper1 by robot1, ball3 is dropped in room3 with lgripper1 by robot1, ball6 is picked from room4 with rgripper1 by robot1, ball5 is dropped in room1 with lgripper1 by robot1, ball4 is dropped in room1 with rgripper1 by robot1, ball2 is picked from room4 with rgripper1 by robot1, ball8 is picked from room3 with rgripper1 by robot1, ball8 is picked from room2 with lgripper1 by robot1, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room1 with rgripper1 by robot1, ball6 is picked from room1 with rgripper1 by robot1, ball5 is dropped in room2 with lgripper1 by robot1, ball10 is dropped in room2 with lgripper1 by robot1, ball9 is picked from room4 with rgripper1 by robot1, ball7 is dropped in room3 with rgripper1 by robot1, ball4 is picked from room1 with lgripper1 by robot1, ball10 is dropped in room1 with rgripper1 by robot1, ball4 is dropped in room1 with lgripper1 by robot1, ball7 is picked from room1 with lgripper1 by robot1, ball3 is picked from room3 with lgripper1 by robot1, ball6 is picked from room3 with lgripper1 by robot1, ball4 is picked from room3 with rgripper1 by robot1, ball2 is dropped in room3 with lgripper1 by robot1, ball7 is dropped in room3 with lgripper1 by robot1, ball7 is dropped in room1 with rgripper1 by robot1, ball9 is picked from room3 with rgripper1 by robot1, ball2 is dropped in room4 with lgripper1 by robot1, ball8 is dropped in room2 with rgripper1 by robot1, ball5 is picked from room1 with lgripper1 by robot1, ball4 is picked from room4 with lgripper1 by robot1, ball2 is dropped in room2 with lgripper1 by robot1, ball5 is picked from room2 with rgripper1 by robot1, ball9 is dropped in room3 with rgripper1 by robot1, ball1 is dropped in room1 with rgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, ball3 is picked from room4 with rgripper1 by robot1, ball8 is dropped in room1 with lgripper1 by robot1, robot1 moves from room3 to room2, ball3 is dropped in room2 with lgripper1 by robot1, ball8 is dropped in room1 with rgripper1 by robot1, ball5 is dropped in room2 with rgripper1 by robot1, ball6 is dropped in room4 with rgripper1 by robot1, ball10 is picked from room2 with rgripper1 by robot1, ball3 is picked from room3 with rgripper1 by robot1, ball5 is dropped in room4 with rgripper1 by robot1, ball3 is dropped in room2 with rgripper1 by robot1, ball1 is dropped in room2 with lgripper1 by robot1, ball9 is dropped in room1 with lgripper1 by robot1, ball2 is dropped in room4 with rgripper1 by robot1, ball7 is dropped in room2 with rgripper1 by robot1, ball10 is picked from room4 with lgripper1 by robot1, ball10 is picked from room1 with rgripper1 by robot1, ball8 is dropped in room4 with lgripper1 by robot1, ball9 is dropped in room4 with rgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball4 is dropped in room3 with rgripper1 by robot1, ball7 is picked from room2 with rgripper1 by robot1, ball8 is dropped in room3 with lgripper1 by robot1, ball4 is picked from room4 with rgripper1 by robot1, ball5 is picked from room3 with rgripper1 by robot1, robot1 moves from room2 to room4, ball4 is dropped in room2 with lgripper1 by robot1, robot1 moves from room3 to room4, ball7 is picked from room3 with rgripper1 by robot1, ball1 is dropped in room4 with lgripper1 by robot1, ball3 is picked from room2 with lgripper1 by robot1, ball3 is dropped in room1 with rgripper1 by robot1, ball1 is picked from room1 with rgripper1 by robot1, ball5 is picked from room1 with rgripper1 by robot1, ball3 is picked from room4 with lgripper1 by robot1, ball1 is picked from room1 with lgripper1 by robot1, ball10 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, ball9 is picked from room4 with lgripper1 by robot1, ball1 is picked from room2 with lgripper1 by robot1, ball6 is dropped in room1 with lgripper1 by robot1, ball9 is dropped in room4 with lgripper1 by robot1, ball10 is dropped in room2 with rgripper1 by robot1, ball9 is picked from room3 with lgripper1 by robot1, ball6 is dropped in room2 with lgripper1 by robot1, robot1 moves from room4 to room2, ball10 is dropped in room3 with lgripper1 by robot1, ball2 is dropped in room1 with rgripper1 by robot1, robot1 moves from room4 to room1, ball6 is picked from room3 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is dropped in room3 with rgripper1 by robot1, ball10 is picked from room2 with lgripper1 by robot1, ball1 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room1 with rgripper1 by robot1, ball7 is picked from room4 with rgripper1 by robot1, ball10 is picked from room4 with rgripper1 by robot1, ball7 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room4 with lgripper1 by robot1, ball2 is picked from room3 with rgripper1 by robot1, ball8 is picked from room1 with lgripper1 by robot1 and robot1 moves from room2 to room1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "98caedfc-e771-4456-95ad-8591080c9017", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball4 is picked from room2 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball4 is picked from room2 with lgripper1 by robot1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a922b415-da6c-4238-8db0-b3825d7a034e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2e2b75c3-8c55-4229-9a89-26a77d063359", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: ball9 is dropped in room1 with lgripper1 by robot1, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball9 is dropped in room1 with lgripper1 by robot1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "588b1328-05af-4d61-83ee-51ee09621964", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "action_executability", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room1 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. What is the first inexecutable action in the sequence? Write None if there are none.", "answer": "ball10 is dropped in room1 with lgripper1 by robot1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "fa5fee9e-c56b-44d5-b272-03376b139157", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, if ball10 is picked from room2 with lgripper1 by robot1, is it True or False that robot1 is carrying ball10 with lgripper1, ball10 is not at room2 and lgripper1 of robot1 is not free?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ae9ec449-3395-4a95-9549-02d687d9ca64", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, if ball10 is picked from room2 with lgripper1 by robot1, is it True or False that lgripper1 of robot1 is not free, robot1 is carrying ball10 with lgripper1 and ball10 is not at room2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "5c3d8fc1-38de-4710-a570-81104b38b20e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, if ball10 is picked from room2 with lgripper1 by robot1, is it True or False that ball10 is not at room2, lgripper1 of robot1 is not free and robot1 is carrying ball10 with lgripper1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ad81112b-08da-481e-a942-9eb67f2d6156", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, if ball10 is picked from room2 with lgripper1 by robot1, is it True or False that robot1 is carrying ball10 with lgripper1, lgripper1 of robot1 is not free and ball10 is not at room2?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "23f15280-7e53-4977-b9fa-07cce172c165", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, if ball10 is picked from room2 with lgripper1 by robot1, is it True or False that robot1 is carrying ball10 with lgripper1, robot1 is not carrying ball7 with rgripper1 and ball10 is not at room2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "beeefc8d-2991-4420-9707-ddcf345f9c6b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, if ball10 is picked from room2 with lgripper1 by robot1, is it True or False that robot1 is not carrying ball10 with lgripper1, robot1 is carrying ball10 with lgripper1 and ball10 is not at room2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "46ebc702-8735-475d-8e97-833c3f3173f6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, if ball10 is picked from room2 with lgripper1 by robot1, is it True or False that robot1 is carrying ball10 with lgripper1, ball10 is not at room2 and ball3 is not at room2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "067ef764-13b5-470f-9f0f-653832583630", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, if ball10 is picked from room2 with lgripper1 by robot1, is it True or False that ball7 is at room4, ball10 is not at room2 and robot1 is not carrying ball4 with rgripper1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "29aa7a18-294c-4f36-83aa-1110cb0a86bc", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, if ball10 is picked from room2 with lgripper1 by robot1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "robot1 is at room2, ball3 is at room1, rgripper1 of robot1 is free, ball6 is at room4, ball2 is at room4, ball1 is at room3, ball9 is at room2, ball8 is at room3, ball4 is at room2, robot1 is carrying ball10 with lgripper1, ball5 is at room3 and ball7 is at room2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ecad79ab-2322-42fe-85ac-58d684c0f721", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, if ball10 is picked from room2 with lgripper1 by robot1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball4 is not at room1, ball5 is not at room1, ball10 is not at room4, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball10 is not at room3, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "fd55c05d-52d0-4007-9ccf-574e9c6a8ab2", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room1 to room3, is it True or False that robot1 is at room3 and robot1 is not at room1?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "89923f5a-cf55-4fc3-8dd6-19a80b5474ba", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room1 to room3, is it True or False that robot1 is not at room1 and robot1 is at room3?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "56546d32-bcb3-4ae5-92b6-983b07139a70", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room1 to room3, is it True or False that robot1 is at room3 and ball6 is not at room2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ad0a14fe-24b5-450f-866d-c778458dff30", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room1 to room3, is it True or False that robot1 is at room3 and ball8 is not at room1?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "81f01e3f-445d-4107-95a2-68da7ea6bab6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room1 to room3, is it True or False that robot1 is at room3 and robot1 is at room4?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a9fe058b-036c-433d-8688-33296e161de4", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room1 to room3, is it True or False that ball10 is not at room1 and robot1 is at room3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f0b59b1f-1321-4e19-b927-fce4b184dab2", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room1 to room3, what would be all of the valid properties of the state? Write None if there are none.", "answer": "ball3 is at room1, ball6 is at room4, rgripper1 of robot1 is free, robot1 is at room3, ball2 is at room4, ball4 is at room1, ball1 is at room3, ball9 is at room2, ball8 is at room3, robot1 is carrying ball10 with lgripper1, ball5 is at room3 and ball7 is at room2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "43246e60-22a2-4eb8-8f8a-88f6416ad76e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, if robot1 moves from room1 to room3, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room2, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball10 is not at room4, ball9 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball2 is not at room2, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball10 is not at room3, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4158b46a-ac11-458b-9d85-6cddb2959063", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, if ball8 is dropped in room2 with lgripper1 by robot1, is it True or False that lgripper1 of robot1 is free, robot1 is not carrying ball8 with lgripper1 and ball8 is at room2?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "39e82513-dbf9-4361-bf90-98f35f5d06dd", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, if ball8 is dropped in room2 with lgripper1 by robot1, is it True or False that ball8 is at room2, lgripper1 of robot1 is free and robot1 is not carrying ball8 with lgripper1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e5d37c70-df50-4d67-9c80-cae6613a4a3c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, if ball8 is dropped in room2 with lgripper1 by robot1, is it True or False that robot1 is not carrying ball8 with lgripper1, ball8 is at room2 and lgripper1 of robot1 is free?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "90a0b6ef-0ede-48d2-966e-88d2a043c3f9", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, if ball8 is dropped in room2 with lgripper1 by robot1, is it True or False that lgripper1 of robot1 is free, ball8 is at room2 and robot1 is not carrying ball8 with lgripper1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c7475a88-5c4b-4036-9fc4-d3f74987c37c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, if ball8 is dropped in room2 with lgripper1 by robot1, is it True or False that robot1 is not carrying ball8 with lgripper1, ball9 is not at room3 and ball4 is at room1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ddd76e92-1cec-4095-9152-cf01a56a6dd6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, if ball8 is dropped in room2 with lgripper1 by robot1, is it True or False that lgripper1 of robot1 is free, ball3 is not at room2 and robot1 is not carrying ball8 with lgripper1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a97d342f-e8de-41d3-9a6e-fd505bc65069", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, if ball8 is dropped in room2 with lgripper1 by robot1, is it True or False that ball7 is at room2, lgripper1 of robot1 is free and robot1 is not carrying ball8 with lgripper1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d8f86d97-4b67-4272-bd7f-f8e6efed00c4", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, if ball8 is dropped in room2 with lgripper1 by robot1, is it True or False that ball10 is at room2, robot1 is not carrying ball8 with lgripper1 and lgripper1 of robot1 is free?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "09143501-706d-4572-b006-ec4ff9ae0082", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, if ball8 is dropped in room2 with lgripper1 by robot1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "robot1 is at room2, ball3 is at room1, lgripper1 of robot1 is free, robot1 is carrying ball1 with rgripper1, ball8 is at room2, ball6 is at room4, ball2 is at room4, ball4 is at room1, ball10 is at room3, ball9 is at room2, ball5 is at room3 and ball7 is at room2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "77784762-6bff-4c05-a7ea-fece1a46bfa6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, if ball8 is dropped in room2 with lgripper1 by robot1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "robot1 is not carrying ball1 with lgripper1, ball4 is not at room4, ball1 is not at room4, ball7 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, ball3 is not at room2, robot1 is not at room1, ball5 is not at room1, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, ball6 is not at room2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d4fdd476-8dee-416e-a635-ef02dc61a3ca", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, if ball1 is dropped in room4 with rgripper1 by robot1, is it True or False that rgripper1 of robot1 is free, ball1 is at room4 and robot1 is not carrying ball1 with rgripper1?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a78907ab-9d52-4b01-a6c0-954a072e63c1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, if ball1 is dropped in room4 with rgripper1 by robot1, is it True or False that robot1 is not carrying ball1 with rgripper1, ball1 is at room4 and rgripper1 of robot1 is free?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ece0acd1-0625-42ba-b403-e8b61ae66fc5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, if ball1 is dropped in room4 with rgripper1 by robot1, is it True or False that robot1 is not carrying ball1 with rgripper1, rgripper1 of robot1 is free and ball1 is at room4?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "fcb763a7-fa69-4854-876b-ad893274e076", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, if ball1 is dropped in room4 with rgripper1 by robot1, is it True or False that ball1 is at room4, robot1 is not carrying ball1 with rgripper1 and rgripper1 of robot1 is free?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "fd9cd73d-9f57-48f3-8356-6bca3ac14d95", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, if ball1 is dropped in room4 with rgripper1 by robot1, is it True or False that rgripper1 of robot1 is free, ball1 is not at room1 and robot1 is not carrying ball1 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "848093de-de15-45c4-962d-b57231b8a4ac", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, if ball1 is dropped in room4 with rgripper1 by robot1, is it True or False that robot1 is not carrying ball1 with rgripper1, ball2 is at room4 and ball4 is at room2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "73c87786-57c5-437d-a2a5-a4b078cc3ba2", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, if ball1 is dropped in room4 with rgripper1 by robot1, is it True or False that robot1 is not carrying ball8 with rgripper1, robot1 is not carrying ball1 with rgripper1 and ball1 is not at room1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "23a4ebea-1a2c-40af-a6c3-0552f35f56da", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, if ball1 is dropped in room4 with rgripper1 by robot1, is it True or False that ball10 is at room3, rgripper1 of robot1 is free and robot1 is not carrying ball1 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ddf28770-6f1f-4387-9119-eceb7d6d54a2", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, if ball1 is dropped in room4 with rgripper1 by robot1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "ball3 is at room1, ball6 is at room4, rgripper1 of robot1 is free, ball8 is at room2, ball4 is at room1, ball10 is at room3, robot1 is carrying ball2 with lgripper1, ball9 is at room2, robot1 is at room4, ball1 is at room4, ball5 is at room3 and ball7 is at room4", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "93dfa9a3-3816-4602-92b7-d4d8fa071cf1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, if ball1 is dropped in room4 with rgripper1 by robot1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, lgripper1 of robot1 is not free, robot1 is not at room1, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball1 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, robot1 is not carrying ball5 with rgripper1, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "210071b4-95e2-45d4-8195-cc91a6e6b0d6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, if ball2 is dropped in room1 with lgripper1 by robot1, is it True or False that robot1 is not carrying ball2 with lgripper1, lgripper1 of robot1 is free and ball2 is at room1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1a153fdc-d435-4982-b1ac-546b935bdaec", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, if ball2 is dropped in room1 with lgripper1 by robot1, is it True or False that ball2 is at room1, robot1 is not carrying ball2 with lgripper1 and lgripper1 of robot1 is free?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "fdb0b6b1-c956-4aeb-8aad-3e4edf92b5da", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, if ball2 is dropped in room1 with lgripper1 by robot1, is it True or False that robot1 is not carrying ball2 with lgripper1, ball2 is at room1 and lgripper1 of robot1 is free?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d5706963-241b-4861-8f5c-c2402bf9b32f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, if ball2 is dropped in room1 with lgripper1 by robot1, is it True or False that ball2 is at room1, lgripper1 of robot1 is free and robot1 is not carrying ball2 with lgripper1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "27428ef0-cf1a-4e53-aa6c-b34bcedd75a2", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, if ball2 is dropped in room1 with lgripper1 by robot1, is it True or False that ball10 is not at room3, ball2 is at room1 and ball1 is at room4?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "24c92ef9-a2fa-415f-a8a5-5e858821c527", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, if ball2 is dropped in room1 with lgripper1 by robot1, is it True or False that ball6 is not at room2, ball2 is at room1 and ball9 is not at room1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b3d9d0bc-ab1d-4152-9773-fc30f476c455", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, if ball2 is dropped in room1 with lgripper1 by robot1, is it True or False that lgripper1 of robot1 is free, ball2 is at room1 and rgripper1 of robot1 is free?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d0d802e2-b0f1-4b1c-afa4-f5fb8ddef017", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, if ball2 is dropped in room1 with lgripper1 by robot1, is it True or False that ball2 is at room1, ball2 is not at room2 and ball10 is not at room4?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "62237976-bfb7-40ec-9bc8-ed6274f354f1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_3", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, if ball2 is dropped in room1 with lgripper1 by robot1, what would be all of the valid properties of the state? Write None if there are none.", "answer": "ball3 is at room1, lgripper1 of robot1 is free, ball8 is at room2, ball6 is at room4, ball4 is at room1, ball10 is at room3, ball2 is at room1, robot1 is carrying ball5 with rgripper1, ball9 is at room2, ball1 is at room4, ball7 is at room4 and robot1 is at room1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "240e7806-0628-405a-b657-1e918adac498", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "effects", "question_name": "question_4", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, if ball2 is dropped in room1 with lgripper1 by robot1, what would be all of the valid properties of the state that involve negations? Write None if there are none.", "answer": "robot1 is not carrying ball1 with lgripper1, robot1 is not at room2, ball4 is not at room4, ball1 is not at room1, robot1 is not carrying ball4 with rgripper1, ball5 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room3, robot1 is not carrying ball2 with rgripper1, rgripper1 of robot1 is not free, ball5 is not at room2, robot1 is not at room4, ball9 is not at room1, ball3 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball5 with lgripper1, ball10 is not at room1, ball3 is not at room2, ball5 is not at room1, ball7 is not at room2, ball10 is not at room4, robot1 is not carrying ball10 with lgripper1, ball9 is not at room3, ball5 is not at room3, robot1 is not carrying ball10 with rgripper1, ball1 is not at room3, ball6 is not at room1, ball4 is not at room3, robot1 is not at room3, ball8 is not at room4, ball7 is not at room3, ball7 is not at room1, ball1 is not at room2, ball9 is not at room4, ball2 is not at room4, robot1 is not carrying ball7 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room2, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room2, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball6 with rgripper1, ball6 is not at room3, ball8 is not at room1 and ball10 is not at room2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3d8c8690-b9b8-4cae-b5aa-d565ee5cac67", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is the number of objects equal to 13? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "69f104f5-260c-4b79-be23-caa28291d8c9", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b92deb17-e532-4640-bccf-ad055f3e9f9e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is the number of objects equal to 19? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6bff0d22-2272-4535-8f7d-a73acdd8bad2", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is the number of objects equal to 21? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d39b628b-9703-4134-88fe-6fa09dd297d1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is the number of executable actions equal to 10? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f959786b-968d-4fce-892c-e876dbfa76a0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is the number of executable actions equal to 14? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "76372a83-bb6b-48a5-8f0f-6b2f450fd337", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is the number of executable actions equal to 11? True or False", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ce4c5c4f-5f89-4f5a-8f30-31da68dd15df", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is the number of executable actions equal to 13? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4fe8341c-6716-495c-8d9b-143e69f5d115", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is the number of inexecutable actions equal to 167? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "dcc4965c-2959-46c5-b163-38196e8075f1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is the number of inexecutable actions equal to 161? True or False", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "983a1182-7952-4ec1-87ca-e6c32374d924", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is the number of inexecutable actions equal to 165? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "48a24610-5f88-44b2-a5e5-af98a4d3923c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, is the number of inexecutable actions equal to 169? True or False", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "5f3e82ad-5d73-45aa-b802-6f2c36bf7727", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b3c6b8e5-a403-48d5-8ca9-4505de0c970d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d1fb1663-544a-4db2-bf46-0d2d77e3e4d0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 0?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7d61c6a4-1132-42a0-864e-31b033aa14ae", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "17", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "13c35ea4-cfcd-48dd-9837-2e076a8c6bad", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "13", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c8ddc9c4-fb9d-4554-8aee-c86d177dfa0a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "53", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "66c6b09c-f18e-4a3c-8dcf-013345c4c306", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "11", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f0b08728-b682-4847-9e1e-ca9f4436db0f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "161", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9b5f9a42-5d74-42a8-84b8-6ce2222a4903", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball8 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "861bb4b7-7955-4f0d-bed4-f80813f9764c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball7 is picked from room3 with lgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "708bbdb4-102c-4fb7-8724-d90963b35485", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball7 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b41a0734-3e89-4181-9ec3-43ca981ea96f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball2 is picked from room3 with rgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ec531e12-4b2e-44d4-877e-8563a07ef70e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 21? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "95988390-bd16-49bd-917c-a32d247f0ed4", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d5af0a64-33cd-44e1-9e8c-a61bf561d1ca", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 20? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4efa3351-b450-45ce-a367-b3d3eacdc134", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 16? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f425979a-9e55-4a6d-8892-b1bc9894d07d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 6? True or False", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e762efcc-d95f-4445-bc61-3ee60403705a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "5cf99583-4d70-45c0-8831-38bca4d30152", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 7? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "be55d4db-0d6c-45a0-9f09-2d3eae39b76c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1995a09b-1a00-4e00-8015-2822e89177b5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 140? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8bb977ff-1f65-4b69-a6bd-00157c056980", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 168? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7a7b6c44-6294-4340-88ef-60c6e3a6b03c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 146? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "aba408d0-3cbf-4a51-af13-03b328589c3d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 141? True or False", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2dd4fecf-7841-48f8-9508-2db1acf60dd1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "00229b21-7df0-44c5-8ba8-a467d5a521a8", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 7?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "252a7e4b-51c5-4a7a-9d79-893bc7543023", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 5?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "53f21eda-1282-4fdd-9192-1f2cdfa265e7", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 4?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "dbeadcd0-db2d-42df-ab6b-ef1d63d1db36", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "17", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "91412fb4-8e76-43d0-a807-33403f9f390a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "12", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b25bbfab-1e82-4208-b9e0-f2dfa00c02d0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "54", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f486457f-3d0c-4751-b163-b9042b16e21a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "6", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2bef9146-7b89-423b-8c65-2300ce1e73ba", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "166", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "efb39549-db86-4d60-9729-0048b3c542c6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball10 is picked from room1 with lgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1dc364aa-961b-44c5-a987-e2d5f58851dc", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball5 is dropped in room3 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a896a29d-29e4-4692-8d33-ce9722dc245d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball7 is picked from room3 with rgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e68f62f8-2f08-48c8-b90a-8910d1d18743", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball9 is picked from room3 with lgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1bd3d9ea-e79e-42ce-9030-460fb122e869", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "dead5e25-df8e-4d19-9186-1c5926aad84a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is the number of objects equal to 20? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "918785d9-5d89-46f6-812d-b96a4b001fe2", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is the number of objects equal to 16? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "737ce55b-a7e7-4acb-afdb-44ec3b97028a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is the number of objects equal to 19? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c14209d2-8fd8-4ac8-8d2c-d742226e5f9f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is the number of executable actions equal to 6? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "02291cb5-7c25-481f-b471-9ba191b60257", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "dc2dc77e-4e33-4dbf-b1d2-5ef9a12835b1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is the number of executable actions equal to 7? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b9682d2a-7dea-4fce-b4b7-6734ba8741de", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "96707f8a-354a-4a44-a2ee-524623d6cfed", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is the number of inexecutable actions equal to 142? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "717c2518-4d29-4966-9cb2-0aa41de89600", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is the number of inexecutable actions equal to 158? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c220dbf4-584d-40f2-af69-a34496a729d8", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is the number of inexecutable actions equal to 139? True or False", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2e525357-0aeb-4b94-a6ab-674bb80f42a0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, is the number of inexecutable actions equal to 167? True or False", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b407b2d5-f4b9-43bc-abd0-115f5741753f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 11?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b8c10db3-d531-4d10-a419-a4cc179eecae", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 10?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7dfc66ca-a5ae-4283-8989-7386b9c26579", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 7?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "08f1c758-28af-43a4-8199-f9f4e4359c84", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 12?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4bd2b164-a6f3-49f0-9e5b-e84f7c58cf2f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "17", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b8f99ed2-3fe9-4c4e-9c8f-28ed19472ecd", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "11", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b1ef93aa-dd94-4cba-9f77-1f3eed36417c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "55", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "06847faf-1b2f-4af1-b365-96c778debe74", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "5", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c91c6f8b-b33f-49b1-9eaa-98def0f4d2ff", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "167", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "0bee98b5-b2fd-4675-8b32-afdcf355b356", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and ball1 is dropped in room2 with rgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "9", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4cb795a5-8521-45e2-91c0-c496215ff7b4", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with lgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "6", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8fc6b363-9341-42bc-892a-212a0ebd0e3a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball5 is dropped in room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4a9dc761-325a-43c0-8154-3d2c500ebaa0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball6 is picked from room4 with lgripper1 by robot1, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b0905a50-edc2-4e63-a839-d7673228b22d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "82a4331d-7d29-46d7-9426-9d337446903e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 15? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "17381676-d466-4061-ac6d-d0d34cfa0641", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 20? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "79ddf9e8-037b-4369-9107-33de4e9e750a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of objects equal to 18? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "83e62cab-d48b-42c6-aab4-02aa109ddf65", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "5badcc75-fe0d-46e9-a53e-15e086e98201", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 6? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "85cc06e8-cafd-43d6-891c-c459f27ec873", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 3? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8a01f17b-c319-4f3b-86c1-3097bbd579f1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of executable actions equal to 7? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c1a9ad7e-c8c6-45da-9b4c-6b05b45cf415", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 183? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "5d94c6db-03de-4532-a257-4573fc32c8cb", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 167? True or False", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2d2bc90f-2b11-473e-a6af-46b1cbecbe85", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 164? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9c7fcf92-7178-4829-af56-c2a8e62c320f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, is the number of inexecutable actions equal to 151? True or False", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "17173835-f73e-427a-9d3a-fc5d44cfad80", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 16?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "cee03f2e-357b-45a0-bd37-adf9bdcc49a7", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 15?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2fe68b4b-ceb2-4567-a38e-ce0a64c4dea0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 13?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4d6d99d0-61cb-43de-b2c0-48b26a0b2bb3", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 14?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1c76d761-ac8e-4cc6-8a96-9ae508574f1e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "17", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4b17e498-a31e-45c4-8112-70766e5c750b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "11", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "668d742e-715e-487f-ba8b-7c85c9144e53", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "55", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "66e76171-33c7-4787-9cc0-b6b0e5d32cc7", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "5", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8a5eb0b5-5d1e-48c3-bfc9-b4f4f58fae79", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "167", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "604b7c8f-4ce8-404e-87f3-938f8a457a02", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball4 is dropped in room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "11", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d3f1b6ed-6d75-475e-8b54-8572ca1047e8", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball9 is dropped in room1 with lgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "14", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "00dc5ee4-97e1-498d-bee4-4f39d20e002c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball10 is picked from room2 with lgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "14", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2ed731e1-d01c-48fb-a1a8-d9b30db3a02d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, ball9 is dropped in room4 with lgripper1 by robot1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "3", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "76e90b90-d68b-4b58-b40e-2f01c5b3b133", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is the number of objects equal to 15? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9a90446a-4dc7-4234-9932-c98946230f46", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is the number of objects equal to 14? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9bc947c2-577a-4572-b0f9-4c3439eb70b8", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is the number of objects equal to 17? True or False", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7e8137b1-30b5-4de4-b83a-6720fca06e3c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is the number of objects equal to 21? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7bfb3df5-5de6-4fd2-83d5-29c81c2167ca", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is the number of executable actions equal to 6? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9b1eeca4-5d1c-483b-8fc4-b1ea23c048c8", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is the number of executable actions equal to 5? True or False", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "eaf23916-87e4-42bd-88d8-5a5d9ffe25ff", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is the number of executable actions equal to 4? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8ffb4941-9c03-4589-b157-8f612b0ba621", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is the number of executable actions equal to 7? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a7fab631-6f36-4299-9733-3d3d7f77531e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is the number of inexecutable actions equal to 167? True or False", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "0b51c746-a973-4b97-8256-63318b8c436d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is the number of inexecutable actions equal to 181? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "edfc88fd-75eb-4518-b3e6-fcf2b827619a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is the number of inexecutable actions equal to 141? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7e3d54cb-3a03-4b4d-a304-d1f45c84bbe0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, is the number of inexecutable actions equal to 170? True or False", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "76204cf1-381c-43f3-8b5c-7682706e3858", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 17?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "48f398b8-6d7f-43db-a54b-d02292ccc029", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 16?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "367213d3-7065-4b56-8fe2-bbb598a623d3", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 19?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6f8455a0-740d-4f94-a6f2-ba8fd36c758d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. Is it True or False that the number of actions that led to current state in the sequence is equal to 21?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4c5eaf99-d5c1-4213-a45a-8dca73f01650", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_5", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, what is the total number of objects? Write as a decimal. Write None if there are none.", "answer": "17", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c41ea7ef-60e3-4812-9a00-147743cb0d57", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, what is the total number of valid properties of the state? Write as a decimal. Write None if there are none.", "answer": "11", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "543d0d31-7af0-451f-a15f-5fbc4daf7b36", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, what is the total number of valid properties of the state that involve negations? Write as a decimal. Write None if there are none.", "answer": "55", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "74b2fe01-a57c-42f9-aa44-0a4e3421cd4a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, what is the total number of executable actions? Write as a decimal. Write None if there are none.", "answer": "5", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7b7c104a-f468-4898-bcb8-b4f6c57e654c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_9", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, what is the total number of inexecutable actions? Write as a decimal. Write None if there are none.", "answer": "167", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "64a6bf09-cd3f-480e-9692-4d530e4cb583", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: ball5 is picked from room2 with rgripper1 by robot1, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "0", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4ed463da-e4cf-46b2-88c5-90ffff40847b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, ball9 is picked from room3 with lgripper1 by robot1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b0d2c371-6697-4471-a912-d92e5efb9660", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "2", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e5038581-b928-4e6c-a9c6-30cec8fa139f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "numerical_reasoning", "question_name": "question_10", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room2 to room1 to reach the current state. In this state, what is the number of actions that led to the current state in the sequence before the first inexecutable action? Write as a decimal. Write None if there are none.", "answer": "18", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4524e526-52ae-42f2-b6f1-29a9a9385026", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball11 is part of the state?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "44a50413-744d-4510-b7f8-24b2e6c99c0f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball9 is part of the state?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a80fe747-92cd-4394-8809-bd613a497ca1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that room5 is part of the state?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a3cde102-b27d-40cf-aa06-572fdaf16691", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball1 is part of the state?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1495afdb-e6e9-4628-b6f6-03f2649c57b2", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball5 is transported to room3?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "46ed7755-8333-4898-afef-30176a6f67b4", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that rgripper1 of robot1 is broken?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "50b3c7e0-3d3f-4f94-a29d-9b9678bb224d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball7 is transported to room2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c110b171-dd13-4358-9ad0-aba89ea32a92", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is engaged in room2?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2b11ba77-9968-4029-a2c8-736d9787348a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball1 is not at room1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "58df02a2-3bd0-4adf-9921-f445154997ce", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is not loading ball4 with rgripper1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c62d8edb-e6cb-4c87-8d35-d2886c0ddeec", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is not carrying ball2 with rgripper1?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "74e58a12-4b1e-4cd1-86e3-0814d37373d0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is not loading ball5 with lgripper1?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a3d009e3-b6e3-48a7-8a4d-0dea3881d21f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, ball7 is picked from room2 with lgripper1 by robot1, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "16760eb1-3fb2-4930-868c-30958fe0fdc2", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot1 moves from room2 to room1, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "41a03428-d146-4a42-8e16-fa703e3d9dd4", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, ball7 is inspected in room2 with rgripper1 by robot1, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3fa2b41a-0745-4bc4-a54e-576401e726ad", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, ball9 is picked from room2 with rgripper1 by robot1, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "5a1dccd9-b891-4e91-b645-7a76a839d3a5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball4 is inspected in room4 with lgripper1 by robot1, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e1d25621-f980-4f59-b616-2d3946429421", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball8 is collected in room2 with lgripper1 by robot1, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "59ad5e10-6418-4ced-82f2-ed5db4cd3914", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball8 is collected in room4 with rgripper1 by robot1, is defined?", "answer": "False", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2994e240-6544-49f2-881d-599dd430e87d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball4 is picked from room1 with lgripper1 by robot1, is defined?", "answer": "True", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6853e254-6aec-4460-b58a-5a9f9ff69709", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball6, ball3, ball10, ball5, rgripper1, room4, room2, ball7 and room1, is not defined? Write None if all are defined.", "answer": "ball10", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "90d85b91-3565-4935-8783-abee2345f7c6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball5, ball1, ball4, robot1, ball6, ball3, ball8, ball11, lgripper1 and room3, is not defined? Write None if all are defined.", "answer": "ball11", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "42d33e2a-53cb-402f-9937-34b76d5449ac", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball4, room5, lgripper1 and ball6, is not defined? Write None if all are defined.", "answer": "room5", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ab8900f8-7e53-47e6-8204-25f02e54a811", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, robot1, ball10, ball6, ball4, ball11, room2, lgripper1, ball3, room4 and ball8, is not defined? Write None if all are defined.", "answer": "ball11", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4aed4a48-38d0-46d9-b9ad-e4f3e382274d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball4 is at room2, ball3 is at room1, ball1 is at room3, ball9 is at room2, ball6 is at room4, ball8 is at room3, ball10 is at room2, robot1 is at room2, lgripper1 of robot1 is free and ball7 is at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "520dfcbd-95a7-418c-b33a-bb08b13b40d1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is at room3, ball8 is at room3, ball10 is at room2, ball4 is at room2 and ball9 is at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c2d70228-fb2b-4846-bba8-0373218dca23", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball7 is at room2, ball5 is at room3, ball9 is at room2, ball3 is at room1, robot1 is at room2, ball6 is at room4, ball8 is at room3, ball10 is at room2, rgripper1 of robot1 is free, ball4 is at room2 and ball2 is at room4, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d8a011f9-2579-466a-a2de-2e795665315a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball5 is at room3, robot1 is at room2, ball9 is at room2, rgripper1 of robot1 is free, lgripper1 of robot1 is free and ball8 is at room3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1f9c9e10-eeb9-4757-a1eb-f073ab345141", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball1 is not at room1, ball2 is not at room2, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball8 with rgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball3 with rgripper1, ball6 is not at room3, robot1 is not carrying ball6 with lgripper1, ball5 is not at room2, ball10 is not at room3, robot1 is not carrying ball7 with lgripper1, robot1 is not carrying ball9 with rgripper1, ball4 is not at room3, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball10 with rgripper1, ball1 is not at room2, robot1 is not at room1, ball3 is not at room3, ball10 is not at room4, robot1 is not carrying ball6 with rgripper1, ball4 is not at room4, ball8 is not at room4, ball10 is not at room1, ball7 is not at room4, ball6 is not at room2, robot1 is not carrying ball4 with lgripper1, ball4 is not at room1, robot1 is not carrying ball10 with lgripper1, ball8 is not at room2, ball6 is not at room1 and ball8 is not at room1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "293b98f8-ac32-40d9-ac4c-b5415aad7cce", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball8 is not at room1, ball3 is not at room3, robot1 is not carrying ball10 with rgripper1, ball6 is not at room3, robot1 is not carrying ball6 with lgripper1, ball4 is not at room4, ball4 is not at room1, robot1 is not carrying ball10 with lgripper1, ball5 is not at room2, ball2 is not at room3, ball6 is not at room1, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not at room3, ball2 is not at room1, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball6 with rgripper1, ball10 is not at room1, ball3 is not at room2, ball4 is not at room3, ball9 is not at room3, ball10 is not at room3, robot1 is not at room1, ball8 is not at room2, ball5 is not at room1, ball8 is not at room4, ball6 is not at room2, ball5 is not at room4, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball8 with rgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not at room4, ball10 is not at room4, ball1 is not at room2, ball7 is not at room4, ball3 is not transported to room4, ball9 is not at room4, ball2 is not at room2 and robot1 is not carrying ball5 with lgripper1, is not defined? Write None if all are defined.", "answer": "ball3 is not transported to room4", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b9ea01f2-c082-4e66-b78b-cbbc18e8dfc6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball10 is not at room4, ball1 is not at room1, ball3 is not at room4, ball4 is not at room1, ball8 is not at room4, robot1 is not carrying ball10 with rgripper1, ball10 is not at room1, ball6 is not at room1, robot1 is not carrying ball8 with rgripper1, ball1 is not at room2, robot1 is not carrying ball1 with rgripper1, ball7 is not at room4, ball10 is not at room3, ball4 is not at room3, robot1 is not at room1, ball9 is not at room1, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball7 with lgripper1, ball7 is not at room3, ball9 is not at room4, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball6 with rgripper1, ball2 is not at room3 and ball1 is not at room4, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f6e7f3ea-53df-4e6e-b5ac-106c219d3c63", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball4 is not at room4, ball2 is not at room3, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball9 with rgripper1, ball7 is not at room4, ball5 is not at room4, ball6 is not at room3, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball2 with lgripper1, ball9 is not at room1, ball1 is not at room4, robot1 is not carrying ball10 with rgripper1, ball8 is not at room1, ball3 is not at room4, robot1 is not carrying ball6 with rgripper1, ball7 is not at room1, ball6 is not at room2, robot1 is not carrying ball9 with lgripper1, robot1 is not at room3, ball10 is not transported to room1, robot1 is not carrying ball4 with lgripper1, ball8 is not at room2, ball4 is not at room3, ball5 is not at room2, robot1 is not carrying ball2 with rgripper1, ball3 is not at room3, ball10 is not at room4, robot1 is not carrying ball8 with rgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball8 with lgripper1 and ball3 is not at room2, is not defined? Write None if all are defined.", "answer": "ball10 is not transported to room1", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "59d52fe0-b29b-4bde-98f7-bb21afdd57b9", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 checks room1 and then checks room2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "robot1 checks room1 and then checks room2", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ff83d78b-1de8-4ccd-b23d-b612fd2adc9f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 1, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c2e44377-dcff-4268-86c0-96887173c864", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that lgripper2 is part of the state?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "14fd49e0-722a-4950-bc19-635367e35b2d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball10 is part of the state?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1b3ab913-4847-4adf-ba7c-3ec8f629cb01", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that rgripper1 is part of the state?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "951033df-13da-4b5f-96a9-cafeea910ce3", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball11 is part of the state?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "02a557ff-96e3-4118-883b-a93905304c4a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is at room1?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "5bc94255-d5c9-4400-91c2-99db2f3620d1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball9 is transported to room2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4376df24-5cec-4c60-813c-2a68295130c3", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball8 is transported to room3?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e23d2904-9b99-4237-b46d-502adeb129b7", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that rgripper1 of robot1 is broken?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ebb02f29-0611-4141-83f2-4a8595d15516", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is not carrying ball1 with rgripper1?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "797175ef-3e09-4bc4-9d6e-1a6149016415", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball8 is not transported to room2?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7841ca77-e339-4909-9c8c-5ffc76faea8a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball2 is not at room2?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "497667e7-ce1b-444b-8e9f-8605ef61e504", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball5 is not at room1?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "18bb9b9d-77d9-41b7-834e-9d1416863f6f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, ball3 is inspected in room1 with rgripper1 by robot1, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3b73c510-4110-437f-a649-6907db3ce96b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot1 checks room1 and then checks room2, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f2bf576e-a4c4-479b-b7ba-be3a4ac270d6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot1 moves from room1 to room2, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8fe99ae7-a1bb-4a7b-92a6-583d7f876691", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot1 checks room1 and then checks room4, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1a904b60-030a-4a8f-9f37-33539577c15c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball4 is dropped in room2 with lgripper1 by robot1, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "71e3c6ec-2386-4f21-9ec7-8c714dff7718", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball7 is picked from room3 with lgripper1 by robot1, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f47cd9b9-51b7-44a5-a1fb-170135ecd984", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball3 is picked from room3 with lgripper1 by robot1, is defined?", "answer": "True", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c8acd5be-aaa8-480a-a4f8-1d15937f70fd", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball9 is inspected in room4 with rgripper1 by robot1, is defined?", "answer": "False", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e55828dc-184d-4fa1-810f-b23a12539306", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, room1, room4, ball6, ball2, room3 and ball7, is not defined? Write None if all are defined.", "answer": "ball2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2a973740-8efd-456c-9a79-f4e07d2d80f4", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, rgripper1, room1, ball3, ball1, room4 and ball6, is not defined? Write None if all are defined.", "answer": "rgripper1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "af5fd6be-00d4-42d9-b034-2d84af81e7cb", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball10, ball9, ball1, ball4, ball7, ball5, ball8 and room3, is not defined? Write None if all are defined.", "answer": "ball5", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1cbaf0e0-a006-4513-993f-1a0caf53745d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball4, lgripper1, ball10, robot1 and ball1, is not defined? Write None if all are defined.", "answer": "robot1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "32a913c7-338b-4493-9841-e7e4dbab2bd4", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball3 is at room1, ball2 is at room4, robot1 is at room1, robot1 is carrying ball10 with lgripper1 and ball1 is at room3, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7c749037-aa95-4094-8896-8ba3cee6c279", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball1 is at room3, ball5 is at room3, robot1 is carrying ball10 with lgripper1, ball2 is at room4, robot1 is at room1, ball3 is at room1, ball4 is at room1, ball8 is at room3, ball6 is at room4, ball7 is at room2, rgripper1 of robot1 is free and ball9 is at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "360d71e4-d3b1-4825-bc61-76e47c9a17d2", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball9 is at room2, ball1 is at room3, ball2 is at room4 and robot1 is engaged in room1, is not defined? Write None if all are defined.", "answer": "robot1 is engaged in room1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "54a1be2e-ff1b-4727-ad1c-d96af3782766", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball5 is at room3, ball7 is at room2, rgripper1 of robot1 is free, robot1 is carrying ball10 with lgripper1, ball6 is at room4, ball2 is transported to room4, ball1 is at room3 and ball4 is at room1, is not defined? Write None if all are defined.", "answer": "ball2 is transported to room4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f27bf4f0-5503-4d54-9609-f19232e2e8af", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball8 is not at room1, ball4 is not at room3, ball2 is not at room3, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball4 with lgripper1, ball10 is not at room1, ball5 is not at room4, robot1 is not carrying ball7 with lgripper1, ball5 is not at room2, robot1 is not carrying ball6 with lgripper1, ball4 is not at room2, ball1 is not at room4, robot1 is not carrying ball10 with rgripper1, ball6 is not at room3, ball9 is not transported to room4, ball8 is not at room4, ball8 is not at room2, ball5 is not at room1, ball1 is not at room2, robot1 is not carrying ball9 with rgripper1, ball7 is not at room1, ball3 is not at room4, robot1 is not at room3, ball3 is not at room2, ball2 is not at room2, ball3 is not at room3, robot1 is not carrying ball9 with lgripper1, ball10 is not at room2, robot1 is not at room4, robot1 is not carrying ball5 with rgripper1, ball9 is not at room1, ball6 is not at room1, robot1 is not carrying ball3 with lgripper1, ball7 is not at room3, ball4 is not at room4, ball9 is not at room3, ball10 is not at room4, robot1 is not carrying ball6 with rgripper1, robot1 is not at room2, robot1 is not carrying ball3 with rgripper1, ball6 is not at room2 and robot1 is not carrying ball1 with lgripper1, is not defined? Write None if all are defined.", "answer": "ball9 is not transported to room4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "65186143-ef12-44ec-aca2-f862ebcc1967", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot1 is not carrying ball6 with rgripper1, lgripper1 of robot1 is not free, robot1 is not carrying ball8 with rgripper1, ball6 is not at room3, ball7 is not at room1, ball6 is not at room1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with lgripper1, ball3 is not at room4, robot1 is not carrying ball5 with lgripper1, ball4 is not at room3, ball4 is not at room4, ball5 is not at room4, robot1 is not carrying ball10 with rgripper1, ball2 is not at room3, ball1 is not at room1, robot1 is not carrying ball4 with lgripper1, ball5 is not at room1, ball9 is not at room4, robot1 is not carrying ball3 with rgripper1, ball2 is not at room1, ball2 is not at room2, ball6 is not at room2, robot1 is not at room2, robot1 is not carrying ball7 with lgripper1, ball10 is not at room2, ball9 is not at room1, robot1 is not carrying ball9 with rgripper1, ball3 is not at room2, ball8 is not at room2, ball1 is not at room4, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball1 with rgripper1, robot1 is not at room4, ball1 is not at room2, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball2 with lgripper1, ball9 is not at room3, ball5 is not at room2, ball3 is not at room3, ball8 is not at room4, robot1 is not carrying ball2 with rgripper1, ball7 is not at room4, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball7 with rgripper1, ball7 is not at room3, robot1 is not at room3 and ball8 is not at room1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c4e55c3f-9b2b-48bb-ad9b-0c5964b0b9d1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball2 is not at room3, ball8 is not at room4, robot1 is not at room4, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball6 with rgripper1, ball1 is not at room4, ball7 is not at room1, robot1 is not carrying ball4 with rgripper1, ball3 is not at room3, robot1 is not carrying ball8 with lgripper1, ball10 is not at room2, ball2 is not at room2, ball10 is not at room3 and ball4 is not at room4, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "df0393fc-024c-4025-86c6-ba45bf8af388", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball6 is not at room3, robot1 is not at room4, robot1 is not carrying ball1 with rgripper1, lgripper1 of robot1 is not free, ball9 is not at room3, robot1 is not carrying ball3 with lgripper1, ball5 is not at room4, ball6 is not at room2, ball8 is not at room2, robot1 is not carrying ball10 with rgripper1, ball5 is not at room2, ball3 is not at room3, robot1 is not carrying ball1 with lgripper1, ball1 is not at room2, ball1 is not at room1, ball9 is not at room4, robot1 is not carrying ball5 with rgripper1, ball6 is not at room1, robot1 is not carrying ball7 with lgripper1, ball10 is not at room3, ball3 is not transported to room4, ball8 is not at room4, ball2 is not at room3, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room1 and ball4 is not at room2, is not defined? Write None if all are defined.", "answer": "ball3 is not transported to room4", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "271768a1-d467-45e3-9bf5-c8a55243e428", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ea5ff208-3360-41b2-81b6-470032c24d04", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 checks room1 and then checks room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "robot1 checks room1 and then checks room2", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a889476f-f708-4644-8761-26935a7dc938", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 checks room2 and then checks room1 and ball4 is dropped in room1 with rgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "robot1 checks room2 and then checks room1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2870361c-ffc8-4b6d-8e4c-f1cc8be3090d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1 and ball4 is collected in room1 with rgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball4 is collected in room1 with rgripper1 by robot1", "plan_length": 5, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9d8019db-4636-4572-afa5-10d7f0a012dc", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball3 is part of the state?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "820695a9-48a7-4896-b6e7-8e62120b6951", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball10 is part of the state?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "5480635f-33c5-4bdd-ba46-8bef30dc149f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball11 is part of the state?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d6b54202-075b-480c-b668-c143842615fc", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball6 is part of the state?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a61ab2ea-c20d-4bcf-9389-da411ba23359", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball2 is transported to room4?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c4217e38-ca91-4c49-b959-22f74218e5a5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is engaged in room2?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "0321ba3f-194e-4981-b7f0-0ebb015e4c66", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball3 is at room1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "97996f69-ccb6-431a-a02a-6f435620c9f6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball4 is transported to room1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6af2eb17-30eb-4803-a41d-1bbb9ce2df17", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball3 is not at room4?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "366e8184-54b6-495f-ae30-4efb9418db1c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball6 is not at room1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4af95840-67cb-4afe-86bd-9d07c203b54e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is not loading ball4 with lgripper1?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6ba58665-06be-4f07-a13c-5e9faf014744", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is not carrying ball7 with lgripper1?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "bd7cf76a-f01e-42f9-ae33-42d8635854df", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, ball1 is collected in room2 with rgripper1 by robot1, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "dbd6250b-63d9-499c-a28f-c7a81339ba04", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot1 checks room2 and then checks room3, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c6862c7a-9667-4201-8f64-636c982a004b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot1 checks room2 and then checks room1, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2b86917a-abc8-45b3-9dbc-7ee1fc88e16c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot1 moves from room2 to room1, is defined?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3760e3fa-a170-41d1-b737-0a1e557e82fa", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball9 is inspected in room2 with rgripper1 by robot1, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f612cdf3-e3a7-42a0-b1dd-95a6aa37be85", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball5 is dropped in room2 with rgripper1 by robot1, is defined?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "126804be-2fbb-4ce5-8077-b745d40df82e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball5 is dropped in room4 with lgripper1 by robot1, is defined?", "answer": "True", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "66eb99c3-2ccb-4574-bb06-bf58cc23e712", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball2 is collected in room2 with rgripper1 by robot1, is defined?", "answer": "False", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "77606647-9f2b-40d4-80f1-7c8f92adc92c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball8, ball7, room1 and ball11, is not defined? Write None if all are defined.", "answer": "ball11", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "790316cf-af5c-4918-99da-23e47e696b70", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball7, room3, room2, room4 and lgripper1, is not defined? Write None if all are defined.", "answer": "room3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "a9564eed-7b06-45ba-89cc-a883d1651dfb", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball3 and room1, is not defined? Write None if all are defined.", "answer": "ball3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e8570287-5e61-49f2-8986-5801ffa0521e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, lgripper1, ball3, ball2, robot1, room4, ball4, ball8, ball9, ball6 and ball5, is not defined? Write None if all are defined.", "answer": "ball8", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c5542e18-d6d5-4e12-bf50-7c9306ff3246", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball2 is at room4 and ball3 is at room1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2372100a-0798-443c-8cc6-5b28c46cdff5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball6 is at room4, ball9 is at room2, ball7 is at room2, robot1 is carrying ball8 with lgripper1, robot1 is carrying ball1 with rgripper1, ball2 is at room4, ball10 is at room3, ball4 is at room1, ball5 is at room3 and robot1 is at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2313710a-62a6-46e7-9bc8-fe5360868dfc", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball9 is at room2, ball7 is at room2, robot1 is carrying ball8 with lgripper1, ball2 is at room4, ball6 is at room4, robot1 is loading ball1 with rgripper1, ball5 is at room3, robot1 is at room2 and ball4 is at room1, is not defined? Write None if all are defined.", "answer": "robot1 is loading ball1 with rgripper1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7b6b2353-ad97-430a-862d-41b5ea328741", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball9 is transported to room2, robot1 is at room2, ball6 is at room4, ball3 is at room1, ball2 is at room4 and robot1 is carrying ball1 with rgripper1, is not defined? Write None if all are defined.", "answer": "ball9 is transported to room2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "554bc03f-7efd-41be-9bd0-949776bd11e8", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball9 with rgripper1, ball5 is not at room1, robot1 is not carrying ball4 with lgripper1, ball6 is not at room3, rgripper1 of robot1 is not free, robot1 is not carrying ball4 with rgripper1, ball1 is not at room3, ball5 is not at room2, ball9 is not at room4, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball5 with lgripper1, ball9 is not at room1, robot1 is not at room1, ball5 is not at room4, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball2 with lgripper1, robot1 is not carrying ball2 with rgripper1, ball7 is not at room3, lgripper1 of robot1 is not free, robot1 is not at room3, robot1 is not carrying ball6 with rgripper1, robot1 is not carrying ball3 with lgripper1, ball1 is not at room2, ball3 is not at room3, ball8 is not at room2, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball1 with lgripper1, ball10 is not at room2, ball10 is not at room1, ball8 is not at room1, ball8 is not at room3, robot1 is not carrying ball3 with rgripper1, ball1 is not at room1, ball2 is not at room1, ball4 is not at room3, ball1 is not at room4, ball4 is not at room2, ball3 is not at room2, ball10 is not at room4 and robot1 is not carrying ball7 with lgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "92d93f35-edd1-433c-9149-2f5100c22b7e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball4 is not at room2, ball5 is not at room4, robot1 is not carrying ball9 with lgripper1, ball9 is not at room3, robot1 is not carrying ball7 with rgripper1, robot1 is not at room4, robot1 is not carrying ball7 with lgripper1, ball5 is not at room1, robot1 is not carrying ball1 with lgripper1, robot1 is not engaged in room3, ball10 is not at room4, ball1 is not at room3, ball8 is not at room2, ball1 is not at room2, ball9 is not at room1, ball4 is not at room4, robot1 is not at room1, lgripper1 of robot1 is not free, ball8 is not at room3, ball9 is not at room4, robot1 is not carrying ball3 with rgripper1, rgripper1 of robot1 is not free, robot1 is not carrying ball4 with lgripper1, ball7 is not at room4, ball7 is not at room1, ball10 is not at room1, ball3 is not at room2, ball4 is not at room3, ball2 is not at room3 and robot1 is not carrying ball6 with lgripper1, is not defined? Write None if all are defined.", "answer": "robot1 is not engaged in room3", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "96019752-52f9-4345-9390-5983adbbedb6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, robot1 is not carrying ball6 with rgripper1, ball8 is not at room3, ball9 is not at room1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room1, robot1 is not carrying ball7 with lgripper1, ball4 is not at room2, rgripper1 of robot1 is not free, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball8 with rgripper1, ball10 is not at room1, robot1 is not at room3, ball7 is not at room4, robot1 is not carrying ball1 with lgripper1, ball4 is not at room3, ball9 is not at room4, robot1 is not carrying ball2 with lgripper1, ball5 is not at room4, robot1 is not carrying ball10 with lgripper1, ball3 is not transported to room4, ball6 is not at room2, ball2 is not at room3, ball1 is not at room3, ball7 is not at room1, ball1 is not at room1, ball5 is not at room2, robot1 is not carrying ball4 with rgripper1 and robot1 is not carrying ball5 with lgripper1, is not defined? Write None if all are defined.", "answer": "ball3 is not transported to room4", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "564a734f-46e5-4919-80bb-5a82087e30d0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball6 is not at room3, ball9 is not at room3, ball7 is not at room1, robot1 is not carrying ball8 with rgripper1, ball2 is not at room3, ball9 is not at room1, ball3 is not at room4, ball10 is not at room1, ball1 is not at room4, ball2 is not at room1, robot1 is not carrying ball2 with rgripper1, ball8 is not at room1, robot1 is not carrying ball10 with rgripper1, ball8 is not at room3, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball7 with lgripper1, ball10 is not at room2, robot1 is not carrying ball9 with lgripper1, ball8 is not at room4, ball5 is not at room1, robot1 is not carrying ball6 with rgripper1, ball6 is not at room1, ball3 is not at room3, ball4 is not at room4, ball3 is not at room2, ball8 is not at room2, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball3 with lgripper1, ball5 is not at room4, ball1 is not at room3, ball6 is not at room2, ball7 is not at room4, robot1 is not carrying ball3 with rgripper1, ball4 is not at room3, ball1 is not at room1, robot1 is not carrying ball9 with rgripper1, ball9 is not at room4, robot1 is not carrying ball2 with lgripper1, robot1 is not at room1 and rgripper1 of robot1 is not free, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f8df34dc-cec1-4324-88de-658047edc425", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8b64c88a-2673-4488-b6af-ddfb52541540", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 checks room1 and then checks room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "robot1 checks room1 and then checks room2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "94102ef2-7a65-4ff1-8d45-b5c4dd1a0364", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 checks room2 and then checks room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 moves from room3 to room2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "robot1 checks room2 and then checks room1", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d50deefe-74c9-46e5-95d9-58c67ee279ed", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1 and robot1 checks room3 and then checks room2 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "robot1 checks room3 and then checks room2", "plan_length": 10, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "ba8c6d25-0764-4c1b-9ca7-27d646693305", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that lgripper1 is part of the state?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "30bff37d-5f72-4f68-81e6-349373dd03b6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that robot1 is part of the state?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "641cc147-53e1-4e26-82b8-66e9a49d3d08", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball8 is part of the state?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "dfaea700-6b93-435d-a936-cbe4c04c8e06", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that room4 is part of the state?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "030a5ad5-ce3c-4c7a-bda2-30545ff8c15c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball10 is transported to room3?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7915f959-e829-40c3-990b-fd9dc4f8c353", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is carrying ball2 with lgripper1?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8e7dc4d3-68c6-4c51-b3a9-e04a523ac297", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is carrying ball1 with rgripper1?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e3a07161-4519-4e84-8edc-4e248fea847c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is loading ball1 with rgripper1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "57292e2b-4512-4b82-a69d-a43c02ebbfa0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball4 is not transported to room2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "aee16884-e31d-4d27-a8a5-763b41ba2b06", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball4 is not at room4?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "db6f44e0-fa95-4078-b6e0-5d8048fb62bb", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is not engaged in room2?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "9afd9107-d03b-4ce9-ae7c-d412d190e616", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is not loading ball1 with lgripper1?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e7f8b1cd-d122-4552-8438-fd13e8a5ba77", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, ball2 is collected in room4 with lgripper1 by robot1, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d21354cb-e69b-40ce-9f52-13f2b40299d5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, ball1 is dropped in room4 with rgripper1 by robot1, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "f23f94ca-bd4c-476c-a0c2-7f53a60b9a44", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot1 moves from room4 to room1, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4ff1c9b0-28be-4ad3-abbd-82697fc70768", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot1 moves from room4 to room3, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4d541337-3b9d-4091-8293-cc576dbb369b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball10 is dropped in room1 with rgripper1 by robot1, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "393514cc-b526-4acb-806e-45fa88b25afe", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball8 is collected in room3 with lgripper1 by robot1, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "606232c6-f828-43ba-a4b2-a1cf2869a719", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball6 is dropped in room2 with lgripper1 by robot1, is defined?", "answer": "True", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "392d1721-184c-43fa-bca2-dbb2ba455743", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball9 is inspected in room1 with rgripper1 by robot1, is defined?", "answer": "False", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "b9e92d12-65bd-43e3-86fb-285cb36f792a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball6, ball3, ball10 and robot1, is not defined? Write None if all are defined.", "answer": "robot1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7db7a729-6cae-4fac-b521-3e9a3f40fd29", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, room5, room4, ball5, ball10, ball1, ball4, ball7 and ball6, is not defined? Write None if all are defined.", "answer": "room5", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "65fc3303-4899-4573-a7cd-10b617c383de", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, room4, ball5, ball9, room1, ball3, lgripper1, robot1, room3 and ball4, is not defined? Write None if all are defined.", "answer": "ball4", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "89d79d72-ef2e-48c5-ba18-09347c82555f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball1, ball2, ball5, robot1, room4, rgripper1, ball11, ball8, room3, room1, ball3 and ball7, is not defined? Write None if all are defined.", "answer": "ball11", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "90239c37-5d14-49bf-92b2-595af95a5e1b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball3 is at room1, robot1 is at room4, ball5 is at room3, ball4 is at room1, robot1 is carrying ball2 with lgripper1, ball7 is transported to room4, ball6 is at room4, ball9 is at room2, ball10 is at room3, robot1 is carrying ball1 with rgripper1 and ball8 is at room2, is not defined? Write None if all are defined.", "answer": "ball7 is transported to room4", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "cd30faa1-8007-4789-b24e-e303281f068f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball8 is at room2, ball5 is at room3, robot1 is carrying ball1 with rgripper1, ball9 is at room2, ball10 is at room3, ball4 is at room1, robot1 is at room4, ball6 is at room4 and ball3 is at room1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c7d6d615-6762-442f-b016-7902c81cc4ab", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball5 is at room3, ball10 is at room3 and ball9 is at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "29122852-da86-4e77-ab9b-ec1d402a86e1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball8 is at room2, ball10 is at room3, robot1 is carrying ball1 with rgripper1, ball4 is at room1, ball3 is at room1, robot1 is carrying ball2 with lgripper1, robot1 is engaged in room4 and ball5 is at room3, is not defined? Write None if all are defined.", "answer": "robot1 is engaged in room4", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "61b3603b-4093-4750-9499-78068d8a6086", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball5 is not at room4, ball7 is not at room3, robot1 is not carrying ball10 with rgripper1, ball10 is not at room1, robot1 is not carrying ball5 with rgripper1, ball2 is not at room3, robot1 is not carrying ball3 with rgripper1, ball6 is not at room3, ball8 is not at room3, ball10 is not at room2, ball4 is not at room4, robot1 is not loading ball10 with lgripper1, robot1 is not carrying ball6 with lgripper1, robot1 is not carrying ball8 with lgripper1, ball1 is not at room1, ball6 is not at room1, ball8 is not at room1, ball5 is not at room1, robot1 is not at room2, lgripper1 of robot1 is not free, robot1 is not carrying ball9 with lgripper1, ball4 is not at room3, ball1 is not at room4, ball1 is not at room2, ball4 is not at room2, ball9 is not at room3, ball2 is not at room1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball5 with lgripper1, ball3 is not at room3, ball2 is not at room4, ball2 is not at room2 and ball8 is not at room4, is not defined? Write None if all are defined.", "answer": "robot1 is not loading ball10 with lgripper1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d38847f3-ea58-41f7-813a-4dd21397e592", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, lgripper1 of robot1 is not free, ball4 is not at room2, ball8 is not at room4, robot1 is not at room3, ball8 is not at room1, ball1 is not at room4, robot1 is not carrying ball8 with rgripper1, robot1 is not carrying ball5 with rgripper1, robot1 is not carrying ball3 with rgripper1, ball2 is not at room1, ball9 is not at room4, ball8 is not at room3, ball10 is not at room4, robot1 is not carrying ball9 with rgripper1, ball7 is not at room3, ball2 is not at room4, ball6 is not at room3, robot1 is not carrying ball6 with rgripper1, ball2 is not at room2, ball3 is not at room4, ball6 is not at room2, ball10 is not at room1, ball5 is not at room1, ball3 is not at room2, robot1 is not carrying ball10 with rgripper1, robot1 is not carrying ball4 with lgripper1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball10 with lgripper1, ball1 is not at room1, robot1 is not carrying ball6 with lgripper1, ball2 is not at room3, robot1 is not carrying ball2 with rgripper1, ball5 is not at room2, robot1 is not carrying ball7 with rgripper1, robot1 is not at room2, rgripper1 of robot1 is not free, ball7 is not at room2 and ball6 is not at room1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7e3f3462-7000-4d34-82ac-455bab057d92", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball2 is not at room4, ball8 is not at room4, robot1 is not carrying ball9 with lgripper1, ball5 is not at room4, ball8 is not at room3, ball10 is not at room2, ball1 is not at room4, ball9 is not at room1, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball8 with rgripper1 and robot1 is not engaged in room1, is not defined? Write None if all are defined.", "answer": "robot1 is not engaged in room1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1f2ff6bd-d3dd-4947-a934-ca2eed516360", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball5 is not at room4, ball6 is not at room1, robot1 is not at room1, ball8 is not at room3, robot1 is not carrying ball6 with lgripper1, robot1 is not at room2, robot1 is not carrying ball1 with lgripper1, robot1 is not carrying ball8 with lgripper1, ball2 is not at room1, ball7 is not at room1, robot1 is not carrying ball7 with lgripper1, ball4 is not at room4, ball9 is not at room4, robot1 is not carrying ball5 with lgripper1, ball1 is not at room3, lgripper1 of robot1 is not free, ball4 is not at room2, robot1 is not carrying ball10 with rgripper1, ball9 is not at room1, robot1 is not carrying ball8 with rgripper1, rgripper1 of robot1 is not free, ball3 is not at room2, robot1 is not carrying ball2 with rgripper1, ball1 is not at room4, robot1 is not carrying ball9 with rgripper1, ball1 is not at room1, ball2 is not at room4, ball7 is not at room3, ball4 is not at room3, ball6 is not at room3, robot1 is not carrying ball3 with lgripper1, ball9 is not at room3, ball8 is not at room1, robot1 is not carrying ball7 with rgripper1, robot1 is not at room3 and robot1 is not carrying ball4 with lgripper1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "178893b1-53ac-4f55-a6dc-a97044c92f34", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is inspected in room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball10 is inspected in room2 with lgripper1 by robot1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "dd72310d-a763-4f7e-b11e-2bad393b2536", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3d492942-2e66-45ea-a3d4-8055e16a4409", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is inspected in room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball8 is inspected in room3 with lgripper1 by robot1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c2ade367-f7f9-45ce-a7d9-65608341b44b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is inspected in room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1 and ball2 is picked from room4 with lgripper1 by robot1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball1 is inspected in room3 with rgripper1 by robot1", "plan_length": 15, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2760530e-ad35-48ac-8058-08c756be08eb", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that room5 is part of the state?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "143f442a-9cf7-47bb-9416-c91c778a8e3d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that robot2 is part of the state?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "26c9b592-6efc-4192-8114-f87204af6395", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball4 is part of the state?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "92806d5d-f900-4b9e-b44f-03bce432971b", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_1", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some objects may or may not be defined. Is it True or False that ball2 is part of the state?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3ac56f28-30c6-485b-b56a-8281d616b12d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is engaged in room1?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "177272b5-5782-4684-905a-354598bbf190", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball9 is at room2?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c120d703-5ddf-4c5a-8d75-b353a22275ff", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball6 is transported to room4?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "59bc2b59-3fb5-4a45-8ff6-bec0cad0717d", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_2", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that robot1 is at room1?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "37e1302a-ad5f-4453-b29f-900540cd0679", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball9 is not transported to room4?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "36093cba-b4c2-4b03-bc9c-0f2dc8e566e6", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball10 is not transported to room2?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "197e961e-7045-42d8-8688-57072c819620", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that ball8 is not transported to room3?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8b8ee41f-c9c2-4794-b049-a8e1f4faf99c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_3", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some properties of the state may or may not be defined. Is it True or False that lgripper1 of robot1 is not broken?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "4c8553ab-920c-4e73-8c29-256616c4cc4c", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot1 checks room1 and then checks room2, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "906a2556-7a4f-46fa-adb9-c1b7c50f9f3a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, ball2 is dropped in room1 with lgripper1 by robot1, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "e011e394-05b6-4e30-bb2a-f5b134b55fd1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot1 checks room1 and then checks room4, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3868e991-e3e1-4458-b9d1-10defec71ae1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_4", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some executable actions may or may not be defined. Is it True or False that action, robot1 moves from room1 to room3, is defined?", "answer": "True", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d4f4f818-71a5-41d8-87b7-6cf8be521e16", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball10 is inspected in room2 with rgripper1 by robot1, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "dcea2767-bdbd-45b0-a4da-6d995ee89b5f", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball9 is collected in room1 with rgripper1 by robot1, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "27d3470f-3ae6-4676-8082-66d9afce4140", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball7 is collected in room3 with lgripper1 by robot1, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "d136fce9-d28a-422f-841a-8556b3835de0", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_5", "answer_type": "true_false_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some inexecutable actions may or may not be defined. Is it True or False that action, ball6 is collected in room2 with lgripper1 by robot1, is defined?", "answer": "False", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "3f9198a8-ec10-4729-8b47-36c01a445a07", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball11, ball7 and ball4, is not defined? Write None if all are defined.", "answer": "ball11", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "c1a2b777-86d7-472b-9bd7-a0a25f0cf156", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, room2, room4, ball1, room1, ball10, lgripper1, ball5, ball8, robot1, ball4, room3 and ball2, is not defined? Write None if all are defined.", "answer": "ball1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8047c51d-5a90-404e-b9d3-a35d60347ff9", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, ball5, room2, ball11, rgripper1, ball7, ball8, ball9, room3, ball3, ball1 and ball10, is not defined? Write None if all are defined.", "answer": "ball11", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "7bd207c7-3c57-4f33-8156-add6cc808aa3", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_6", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some objects may or may not be defined. Which of the following objects, room3, robot1, ball11, ball8, room4 and ball1, is not defined? Write None if all are defined.", "answer": "ball11", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "696953f2-c057-4e22-bb8a-d27c19a93e73", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, robot1 is carrying ball5 with rgripper1, robot1 is carrying ball2 with lgripper1, ball7 is transported to room4, ball8 is at room2, ball6 is at room4, ball4 is at room1 and robot1 is at room1, is not defined? Write None if all are defined.", "answer": "ball7 is transported to room4", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "78672538-f5e3-4460-91d9-c7ef874a2984", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, robot1 is at room1, robot1 is carrying ball5 with rgripper1, ball10 is at room3, ball4 is at room1, ball3 is at room1, ball6 is at room4, ball9 is at room2, ball1 is at room4, robot1 is carrying ball2 with lgripper1, ball7 is at room4 and ball8 is at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "6a333497-3860-4898-b35a-0c9bf0357331", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball3 is at room1, ball8 is at room2, ball6 is at room4, ball9 is at room2, ball1 is at room4, robot1 is carrying ball5 with rgripper1, ball10 is at room3, ball7 is at room4, ball4 is at room1 and robot1 is at room1, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "75121eaf-2d3a-4592-8115-f279d97394ab", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_7", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some valid property of the state may or may not be defined. What valid property of the state out of, ball10 is at room3, ball7 is at room4, robot1 is at room1, robot1 is loading ball2 with lgripper1, ball6 is at room4, ball8 is at room2, ball1 is at room4 and ball4 is at room1, is not defined? Write None if all are defined.", "answer": "robot1 is loading ball2 with lgripper1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "210da677-d2d7-481d-ba06-fac63a428deb", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball9 is not at room3, ball3 is not at room3, robot1 is not carrying ball4 with rgripper1, robot1 is not carrying ball10 with rgripper1, ball6 is not at room1, robot1 is not carrying ball9 with rgripper1, ball8 is not at room1, ball1 is not at room3, ball2 is not at room1, ball5 is not at room1, ball10 is not at room2, ball1 is not at room1, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball9 with lgripper1, ball5 is not at room4, robot1 is not carrying ball8 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball2 is not at room3, robot1 is not carrying ball2 with rgripper1, robot1 is not carrying ball6 with lgripper1, ball7 is not at room1, ball5 is not at room2, ball9 is not at room4, robot1 is not at room4, robot1 is not carrying ball5 with lgripper1, ball4 is not at room4, ball6 is not at room3, ball10 is not at room1, robot1 is not carrying ball1 with lgripper1 and ball3 is not at room2, is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "1adf6bc0-f063-45c0-a97f-9f27c64d2d1a", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball10 is not at room1, ball8 is not at room4, ball2 is not at room3, ball5 is not at room1, robot1 is not at room2, ball5 is not at room2, ball4 is not at room3, robot1 is not carrying ball3 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball10 is not at room4, ball3 is not at room2, robot1 is not carrying ball6 with rgripper1, ball7 is not at room1, robot1 is not carrying ball4 with lgripper1, ball5 is not at room4, robot1 is not carrying ball8 with lgripper1, robot1 is not loading ball9 with rgripper1, robot1 is not carrying ball7 with rgripper1, robot1 is not carrying ball7 with lgripper1, ball3 is not at room3, ball9 is not at room1, ball9 is not at room4, ball4 is not at room4, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball1 with lgripper1, ball10 is not at room2, lgripper1 of robot1 is not free, ball4 is not at room2, robot1 is not at room4, robot1 is not carrying ball8 with rgripper1, robot1 is not carrying ball10 with rgripper1, ball2 is not at room2, ball7 is not at room3, ball2 is not at room4, ball5 is not at room3, rgripper1 of robot1 is not free, robot1 is not carrying ball3 with rgripper1, robot1 is not carrying ball4 with rgripper1, robot1 is not at room3, ball1 is not at room1 and ball2 is not at room1, is not defined? Write None if all are defined.", "answer": "robot1 is not loading ball9 with rgripper1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "2e0efeea-c353-46f6-810b-5043e10cf0d5", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, ball3 is not at room4, robot1 is not carrying ball9 with rgripper1, ball2 is not at room1, ball10 is not at room4, ball4 is not at room4, rgripper1 of robot1 is not free, robot1 is not carrying ball4 with lgripper1, ball1 is not at room2, robot1 is not carrying ball10 with rgripper1, ball6 is not at room2, robot1 is not carrying ball9 with lgripper1, robot1 is not carrying ball10 with lgripper1, ball5 is not at room2, robot1 is not carrying ball2 with rgripper1, ball7 is not at room3, robot1 is not carrying ball5 with lgripper1, robot1 is not carrying ball1 with rgripper1, ball6 is not at room1, ball9 is not at room4, lgripper1 of robot1 is not free, ball1 is not transported to room3, robot1 is not carrying ball8 with lgripper1, ball5 is not at room4, ball2 is not at room4, ball2 is not at room2, robot1 is not carrying ball8 with rgripper1, robot1 is not carrying ball7 with lgripper1, ball3 is not at room2, ball4 is not at room3, ball5 is not at room1, robot1 is not carrying ball6 with lgripper1, ball8 is not at room4, robot1 is not carrying ball3 with rgripper1, ball1 is not at room1, robot1 is not carrying ball6 with rgripper1 and robot1 is not carrying ball1 with lgripper1, is not defined? Write None if all are defined.", "answer": "ball1 is not transported to room3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "8b398432-103a-40e2-bd42-73ce6ec76377", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. In this state, some valid property of the state that involves a negation may or may not be defined. What valid property of the state that involves a negation out of, lgripper1 of robot1 is not free, ball5 is not at room4, ball6 is not at room3, robot1 is not carrying ball8 with lgripper1, ball9 is not at room3, ball1 is not at room3, ball3 is not at room2, ball2 is not at room2, robot1 is not carrying ball5 with lgripper1, ball8 is not at room3, ball4 is not at room2, robot1 is not carrying ball1 with lgripper1, ball7 is not at room1, robot1 is not carrying ball10 with lgripper1, robot1 is not carrying ball6 with lgripper1, ball1 is not at room1, robot1 is not carrying ball7 with lgripper1, robot1 is not at room3, robot1 is not carrying ball7 with rgripper1, ball3 is not at room4, robot1 is not at room2, ball9 is not at room4, ball5 is not at room1, robot1 is not carrying ball1 with rgripper1, robot1 is not carrying ball9 with lgripper1, ball3 is not at room3, robot1 is not carrying ball10 with rgripper1, ball2 is not at room3, ball10 is not at room2, ball2 is not at room4, ball7 is not at room3, robot1 is not carrying ball4 with rgripper1, ball5 is not at room2, ball10 is not at room1, ball1 is not at room2, robot1 is not carrying ball3 with lgripper1, ball5 is not transported to room3, rgripper1 of robot1 is not free, ball2 is not at room1 and ball6 is not at room2, is not defined? Write None if all are defined.", "answer": "ball5 is not transported to room3", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "0a0fa995-c01d-4ab9-b782-ab0c64972365", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "None", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "90447bdf-be0c-4cb0-94cd-68b73ca8890e", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is inspected in room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball5 is inspected in room3 with rgripper1 by robot1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "5da4b994-6345-466f-8e14-fec94a1656a7", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is dropped in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 checks room3 and then checks room1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "robot1 checks room3 and then checks room1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
{"id": "add3632f-76b0-4059-9da8-a0633bea57f1", "domain_name": "grippers", "instance_id": "Instance_8", "question_category": "hallucination", "question_name": "question_8", "answer_type": "free_answer", "question": "Given the initial condition, the following actions are planned to be performed: robot1 moves from room1 to room2, ball10 is picked from room2 with lgripper1 by robot1, ball4 is picked from room2 with rgripper1 by robot1, robot1 moves from room2 to room1, ball4 is dropped in room1 with rgripper1 by robot1, robot1 moves from room1 to room3, ball1 is picked from room3 with rgripper1 by robot1, ball10 is dropped in room3 with lgripper1 by robot1, ball8 is picked from room3 with lgripper1 by robot1, robot1 moves from room3 to room2, ball8 is dropped in room2 with lgripper1 by robot1, ball7 is picked from room2 with lgripper1 by robot1, robot1 moves from room2 to room4, ball7 is dropped in room4 with lgripper1 by robot1, ball2 is picked from room4 with lgripper1 by robot1, ball1 is collected in room4 with rgripper1 by robot1, robot1 moves from room4 to room3, ball5 is picked from room3 with rgripper1 by robot1 and robot1 moves from room3 to room1 to reach the current state. Given this sequence, what action is not defined? Write None if all are defined.", "answer": "ball1 is collected in room4 with rgripper1 by robot1", "plan_length": 19, "initial_state": {"part_of_plan?": true, "fluents": ["at(ball3,room1)", "free(robot1,lgripper1)", "free(robot1,rgripper1)", "at(ball6,room4)", "at(ball2,room4)", "at(ball10,room2)", "at(ball1,room3)", "at(ball9,room2)", "at(ball8,room3)", "at(ball4,room2)", "at(ball5,room3)", "at(ball7,room2)", "at_robby(robot1,room1)"], "neg_fluents": ["-carry(robot1,ball1,lgripper1)", "-at_robby(robot1,room2)", "-at(ball4,room4)", "-at(ball1,room4)", "-at(ball7,room4)", "-at(ball1,room1)", "-carry(robot1,ball4,rgripper1)", "-at(ball5,room4)", "-carry(robot1,ball3,rgripper1)", "-carry(robot1,ball9,rgripper1)", "-at(ball8,room2)", "-at(ball3,room3)", "-at(ball2,room1)", "-carry(robot1,ball2,rgripper1)", "-at(ball5,room2)", "-at_robby(robot1,room4)", "-at(ball9,room1)", "-at(ball3,room4)", "-carry(robot1,ball3,lgripper1)", "-carry(robot1,ball7,rgripper1)", "-carry(robot1,ball6,lgripper1)", "-at(ball2,room3)", "-carry(robot1,ball5,lgripper1)", "-at(ball10,room1)", "-at(ball3,room2)", "-at(ball5,room1)", "-at(ball4,room1)", "-at(ball10,room4)", "-carry(robot1,ball10,lgripper1)", "-at(ball9,room3)", "-carry(robot1,ball10,rgripper1)", "-at(ball6,room1)", "-at(ball4,room3)", "-at_robby(robot1,room3)", "-at(ball8,room4)", "-at(ball7,room3)", "-at(ball7,room1)", "-carry(robot1,ball5,rgripper1)", "-at(ball9,room4)", "-carry(robot1,ball7,lgripper1)", "-at(ball2,room2)", "-carry(robot1,ball4,lgripper1)", "-carry(robot1,ball8,rgripper1)", "-at(ball10,room3)", "-carry(robot1,ball8,lgripper1)", "-carry(robot1,ball9,lgripper1)", "-carry(robot1,ball1,rgripper1)", "-at(ball6,room2)", "-carry(robot1,ball2,lgripper1)", "-carry(robot1,ball6,rgripper1)", "-at(ball6,room3)", "-at(ball8,room1)", "-at(ball1,room2)"], "objects": {"robot": ["robot1"], "gripper": ["rgripper1", "lgripper1"], "room": ["room2", "room3", "room4", "room1"], "object": ["ball6", "ball4", "ball7", "ball9", "ball5", "ball2", "ball3", "ball10", "ball1", "ball8"]}, "executable?": true}, "action_sequence": ["action_move(robot1,room1,room2)", "action_pick(robot1,ball10,room2,lgripper1)", "action_pick(robot1,ball4,room2,rgripper1)", "action_move(robot1,room2,room1)", "action_drop(robot1,ball4,room1,rgripper1)", "action_move(robot1,room1,room3)", "action_pick(robot1,ball1,room3,rgripper1)", "action_drop(robot1,ball10,room3,lgripper1)", "action_pick(robot1,ball8,room3,lgripper1)", "action_move(robot1,room3,room2)", "action_drop(robot1,ball8,room2,lgripper1)", "action_pick(robot1,ball7,room2,lgripper1)", "action_move(robot1,room2,room4)", "action_drop(robot1,ball7,room4,lgripper1)", "action_pick(robot1,ball2,room4,lgripper1)", "action_drop(robot1,ball1,room4,rgripper1)", "action_move(robot1,room4,room3)", "action_pick(robot1,ball5,room3,rgripper1)", "action_move(robot1,room3,room1)", "action_drop(robot1,ball2,room1,lgripper1)", "action_drop(robot1,ball5,room1,rgripper1)"]}
